"unnecessary parenthesis after if statement"
"Bug: __winScreen method doesn't take any arguments. Invalid call to function: too many parameters."
"proper naming of iterators is required for better understanding"
"Class name and variable names don't follow PEP-8 conventions."
"Missing class docString"
"Missing method docString."
"Missing method docString"
"Missing method docString"
"Too many parameters."
"Bug: Call using self.__winScreen as it's a method of the same class."
"Method and variable names don't follow PEP-8 guidelines"
"Too few public methods"
"No public methods defined."
"variables names not according to PEP-8 guidelines"
"Too many arguments in method."
"method name doesn't follow PEP-8 conventions"
"method name doesn't follow PEP-8 conventions"
"method name doesn't follow PEP-8 conventions"
"Class name doesn't follow PEP-8 conventions."
"Bug: Multiple objects of the text class may blit on the same place depending on width and execution of code. So one may overlap the other if the starting point of the rectangles are same (like in default, (0,0)), and the other might not show up on screen.\
\
In this case, the Level, Lives and Score board Text are all blit at the same point, and the middle Text of Lives sometimes on execution gets blackened out and overshadowed by Level and Score Text objects"
"Bug: No method called '_moveDown()'. The correct method is '__moveDown()'"
"Too many else if conditions. Too long method. Method can be broken into smaller components and methods."
"Unnecessary public variable defined."
"Variable defined outside of constructor __init__()."
"global function. Should've implemented inside person/object class to check object collision with wall"
"Too many arguments."
"Too many arguments."
"Method names and variable names don't follow PEP-8 guidelines"
"Method names and variable names don't follow PEP-8 guidelines."
"unused import."
"unused import."
"unused import."
"Class Name, Method names and Attribute Names don't follow PEP-8 guidelines."
"Unused variable i"
"Variable name doesn't follow PEP-8 guidelines"
"reference to attribute without classname. \""pygame.K_SPACE\"" should be used"
"reference to attribute without classname. \""pygame.K_d\"" should be used"
"reference to attribute without classname. \""pygame.K_a\"" should be used"
"reference to attribute without classname. \""pygame.K_s\"" should be used"
"reference to attribute without classname. \""pygame.K_w\"" should be used"
"reference to attribute without classname. \""pygame.K_q\"" should be used"
"reference to attribute without classname. \""pygame.K_r\"" should be used"
"reference to attribute without classname. \""pygame.K_q\"" should be used"
"Too big method with too many conditionals. Method too big. Can be split into smaller modules and methods."
"No method kill in player class, but python implicitly references to the sprite class of pygame which person class inherits, and player inherits from person.\
\
Better would be to iterate through PlayerList and kill the sprites."
"Attribute defined outside constructor."
"Too less public methods."
"Class name, Method names, and Attribute names don't follow PEP-8 conventions."
"showLevel attribute defined outside the constructor"
"showLife attribute defined outside the constructor"
"showScore attribute defined outside the constructor"
"No public method defined."
"Missing class docstring."
"No methods defined except constructor."
"Class name, Attribute names and Method names don't follow PEP-8 conventions."
"Too many arguments for a method."
"Image as public variable can be modified by user. Not safe to implement."
"All move functions can be clubbed into one and can take a parameter to indicate which direction to move."
"Too many conditionals. Too long method. Method can be broken into smaller methods and modules."
"Class name, few variable names and most Method names don't follow PEP-8 conventions."
"Too many conditionals. Method can be broken into smaller methods and modules."
"attribute defined outside constructor"
"public attribute not used by object. Good implementation would be making it private."
"attribute defined outside constructor"
"public attribute not used by object. Good implementation would be making it private."
"Bad variable name, not conforming to PEP-8 standards"
"Bad variable name, not conforming to PEP-8 standards"
"Used tabs instead of 4 spaces for indentation violating PEP-8 standard"
"Bug: Player doesn't die if fireball hits his/her head."
"Bug: Player cannot move upwards on the ladder if perfectly standing within the ladder boundaries. Player has to be outside on the right of the ladder by an offset to use the ladder."
"Game uses UP, DOWN, LEFT, RIGHT instead of the requirement that the game should move player using W,A,S,D. No change notification for the same\
\
Shows x to quit compared to q which was initial requirement for quitting. Atleast tells user how to quit."
"Bug: Player doesn't collect coin even when his head touches the coin. Coin passes through the head of the player"
"Bug: Player sometimes dies even before touching the approaching fireball near the ladder"
"Why so many tabs have been used to indent this statement?"
"Spaces should be used to make assignment and values legible to read (like in arrays after commas)"
"Missing docstring for class."
"Comment to make code easy-to-understand"
"Bad practice to edit Object class. Instead make separate class for the variables to be inherited in different classes."
"No constructor i.e. __init__"
"Variable names don't follow PEP-8 standards"
"Method names don't follow PEP-8 standards "
"Missing docstring for class and methods"
"Class name, variable names are not according to PEP-8 guidelines"
"global variables defined but not initialized."
"Range [0 to 5] is hard to understand for the person reading the code. Why 0 to 5? What is 0 to 5? Commenting and using self-explanatory named constants / variables is better to denote what is actually happening and why."
"Unused variable i, only made to run loop."
"Bug: no visual functionality of Broken Ladders can be seen"
"Missing docstring for class and Methods"
"Missing docstring for class and Methods"
"Missing docstring for class and Methods"
"Missing docstring for class and Methods"
"Too large method. Too many branches. Can be broken into simpler modules and methods."
"Missing docstring"
"Missing docstring for class and Methods"
"Doesn't call inherited class __init__"
"unused import random"
"unused import time"
"Too less public methods"
"Variables declared as public. Doesn't use the concept of encapsulation."
"No public methods"
"Inherited class __init__ not called."
"Public attributes declared. Doesn't enforce encapsulation."
"Public attributes declared. Doesn't enforce encapsulation."
"Inherited class __init__ not called."
"No public methods"
"Public attributes declared. Doesn't enforce encapsulation."
"Inherited class __init__ not called."
"Inherited class __init__ not called."
"Public attributes declared. Doesn't enforce encapsulation."
"No public methods"
"Bug: Missing classes which were in requirement and not commented when name has been changed. No class Board in idea is present in the code.\
\
Mario represents Player class and Movable represents person class is not mentioned and difficult to figure out without comments"
"Missing docstring for class and Methods"
"Missing docstring for class and Methods"
"variable names are not following PEP-8 conventions."
"Functionality to run all the lines here can be implemented in a Class."
"Unnecessary semicolon"
"Indentation done using tabs instead of 4 spaces violating PEP-8 standards"
"Bugs identified have been commented on the basic.py file"
"Unnecessary reinitialization and code duplication. Already initialized in basic.py"
"Unnecessary reinitialization and code duplication. Already initialized in basic.py"
"Classes inheriting from another class have not called the __init__ of base class."
"Classes have public attributes, not following the concept of encapsulation"
"Class names, attribute names, and their method names do not follow PEP-8 guidelines"
"Too less public methods"
"Too big function with branches. Can be split into smaller modules and methods."
"Code is not commented."
"local variable not connected to global variable as \""global lvl\"" has not been stated in the class."
"Indentation done using tabs instead of 4 spaces violating PEP-8 standards"
"Redefinition of built-in exit keyword (which is used to exit the program). Bad practice to redefine standard keyword."
"Too many local variables."
"Line too long. Violates PEP-8. More than 79 characters"
"Line too long. Violates PEP-8. More than 79 characters"
"global variable defined but no assignment."
"Wrong judgement by varun.naganathan@research.iiit.ac.in : Line length is perfect and abides by PEP-8 standards. It is inside 72-79 characters, and since the whole statement is broken into new lines, it fully conforms. Please read the standards and comment properly"
"no constructor i.e. __init__ method"
"No docstrings for class"
"Class name doesn't follow PEP-8 standards"
"Empty method"
"Empty method"
"Class can be omitted as its methods are empty and no attribute"
"Pointless docstrings all over the document. Docstrings should be at the start of a class or method or module, not before it's start"
"Unnecessary indentation on top of pointless docstring."
"No public methods defined."
"No public methods defined."
"Methods of several classes have missing docstrings."
"No public methods defined."
"Commented out code which doesn't describe a functionality should be removed upon release / submission"
"Unused import including import of os, sys etc which is not required in this file."
"Line is too long, should be broken into several lines to adhere to PEP-8 standards"
"BUG: Player doesn't respond to input in many situations"
"BUG: Player doesn't fall down from levels."
"BUG: Player if keeps on spamming spacebar can reach the top without having to go through ladders."
"BUG: Score doesn't get updated when player collides with Fireball and when Player finishes level."
"BUG: Player moves sideways on ladders and is stuck and cannot go up anymore."
"User Interface is too bad. Everything is clumsy and non-distinguishable. Overlapping game Elements."
"BUG: Donkey gets stuck at the end of the platform."
"Pointless docstrings all over the document. Docstrings should be at the start of a class or method or module, not before it's start."
"Missing docstrings for classes and methods."
"Pointless docstrings all over the document. Docstrings should be at the start of a class or method or module, not before it's start. Thus missing docstrings for methods and classes."
"Pointless docstrings all over the document. Docstrings should be at the start of a class or method or module, not before it's start. Thus missing docstrings for methods and classes."
"BUG: no checkWall(), collectCoin(), checkCollision() and getPosition() functions. These functionalities have been clubbed with other functionalities in some functions."
"Class too big. Can be split into smaller modules and methods."
"Kudos for building such a beautiful interface. Very appealing and good animations!"
"BUG: Donkey is even seen to be going inside a wall and launching fireballs from there"
"BUG: Level 1 never gets executed"
"BUG: Score doesn't get deducted when player dies by touching fireball and game gets over."
"Instead of hardcoding levels like this, why not use coordinates to depict level layouts?"
"Missing docstrings of classes, and methods."
"Too many branches. Can be split into smaller modules and methods"
"Too many branches. Should have been split into smaller modules and methods."
"Too many branches if statements. Should have been split into smaller modules and methods."
"@yogesh.sharmaakaruler@gmail.com: This is python3 code. Please read instructions before reviewing. Print is a function in python 3"
"@yogesh.sharmaakaruler@gmail.com : Again. Please read instructions. This is a python 3 code"
"@yogesh.sharmaakaruler@gmail.com : Please read instructions. This is a python 3 code"
"@yogesh.sharmaakaruler@gmail.com : Please read instructions. This is a python 3 code. Print is a function in python3 and use paranthesis. Review based on the technology used."
"Docstring line too long. Should be split to the next line"
"too many branches. Can be split into smaller modules and methods."
"Code Smell: You've overloaded the method, it's okay. But you've given a default parameter. Now system will be confused, when no parameter is given while calling this method. Both the methods can be called without any parameters and will cause ambiguity over execution."
"No module named config in sys. Should've been src"
"unused variable char."
"unused argument numPlayer"
"No public methods."
"Too many branches. Can be refactored into smaller modules and methods."
"Should be implemented in a class based structure. And anyone can run this play function. "
"Too many branches. Can be refactored into smaller modules."
"Dangerous default value. Bad practice. Instead use just None without [] and handle case inside the method."
"line too long"
"Too many branches. Can be refactored into smaller modules."
"Too many branches. Can be refactored into smaller modules."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"line too long."
"State and key paramaneters have not been used. Unused argument."
"BUG: No method for checkCollision()"
"Combinitorial Explosion: ladder Up and ladderDown can be modified with some parameter and unified"
"Code smell: Cyclomatic Complexity. Too many branches."
"Cyclomatic Complexity: too many branches.\
\
Large method"
"vedant.cacklur@students.iiit.ac.in: I hope you realize this was your release of the game. You don't expect the user to correct your mistakes, run the tutorial all by himself/herself and check config file. Feature I get, but putting level 2 twice I don't get. One who is playing will think game doesn't change levels."
"imo, it'll take more time for your game to load and will take more space. If you stored coordinates, it'll take less time and will take less space. As for level design, you can always provide a tool for the user to make levels that'll convert user's perception to coordinates, and it's good both ways!"
"All the attributes of every class are public. Doesn't enforce encapsulation"
"If enabled, game breaks. Can be categorized as useless."
"too many global variables declared."
"global indentation error."
"some of the lines are too longer"
"no continuous input taken while moving the player"
"there are no white space after ' , ' while passing arguments to functions."
"many non descriptive variables are used."
"ar already assigned to 0 in line 142 . Therefore no need of this step."
"non-descriptive variables are used."
"conditional complexity: use can use small condition instead of using that many ' or ' conditions."
"too many if conditions implemented."
"variables are non-descriptive\
"
"he cannot climb on ladders ,but he directly jumps on to next floor when he presses a up button"
"random was imported but not used in this."
"clock variable was declared here but not used"
"random was imported but not used in this."
"clock was declared here but used anywhere in this module"
"code smell : black was declared here but not used."
"fps declared here but not used in this module."
"code smell : conditional complexity large complicated conditions"
"code smell : conditional complexity large complicated conditions"
"time was not imported but used here"
"w,s keys are not implemented."
"code smell : dead code threading imported but not used"
"no encapsulation,polymorphism implemented"
"no modules implemented."
"player is falling down as soon as the game had started"
"player was jumping to certain height but was not coming back to floor."
"player was able to go directly to the top level by pressing space multiple times."
"player was able to pass through of walls"
"fire balls aren't going till they get collide with the walls."
"when he reach the queen level he was able pass the walls."
"when the player reaches the queen the game was not reloading."
"there were no broken ladders "
"player was not falling down at end of floor ,instead he keeps on going."
"i had multiplied the final score by 5 while printing the score"
"to print the score earned by the player, i had used the sleep so that he can know the score earned and life left."
"to print the score earned by the player, i had used the sleep so that he can know the score earned and lifes left"
"there are no more than one fire ball in the game"
"the player cannot jump "
"the fire ball isn't moving if the player is not moving"
"the donkey isn't moving if the player is not moving"
"as the player reaches the queen the game is not continued."
"instead of updating the board the board was printed many times"
"per3 was not declared before but used here "
"getting error while running the game that they are not initialized."
"bad indentation"
"PEP-8 standards not followed , must be declared in uppercase and inconsistent name"
"as he reaches the queen the speed of the player and the speed of the fire balls increase and also the frequency of the the fire ball"
"code smell : some of the comments are not useful as they are not telling why"
"that was a comment."
"code smell: non descriptive and not useful comments"
"code smell : this function is not used but declared here."
"code smell : duplicate code for move_left() function"
"code smell : dead code this function is not anywhere in this"
"code smell : dead code this function is not used anywhere"
"code smell : dead code did not  use this any where"
"function was declared but i didn't update the score here"
"as the level increases the speed of the player increase but when when the player come across a fire ball it doesn't detect their collision.  "
"as soon as the player was about to queen the game was reloading."
"no gravity,no jumping implemented"
"Excessively short identifiers: parameters names should be more descriptive. parameters such as wi, hi can be confusing later or when the method goes long. Limit the number of parameters to 2 or 3. For long list of parameters, use an object rather."
"class descriptive doc-string missing"
"try writing import statements on different line and writing what the module is for, correspondingly. ex. import Block    #to initialize the game board"
"everything related to coins could've been declared in separate module. This will shorten the length of this module and keep a module specific about a particular entity. easy to debug then"
"Fireball in person module? could be better if in separate file."
"No polymorphism. method tryMove() could've been initialized in person class, since it's being used for every instance of this class (as in player, donkey and fireball). it reduces duplication of code"
"better if in person module"
"Game could've been initialized in the main file instead of in the class itself. class Canvas can be used to make the board and construct the player, coins, fireballs, board."
"No encapsulation. Such methods can be made private since they're used inside the class only. This'll ensure that these do not interfere outside the class. "
"Good to see that you used one function to draw everything. "
"Not doing anything at all. Acting like a Middle Man and completely useless."
"Code nicely grouped out and separated with comments."
"Uncommunicative variable names like r, v, a. Make variable names as descriptive as possible: Code Smell"
"Good that you keep main.py file as short as possible. but add meaning to the file by writing at least one descriptive comment. "
"Good use of python functions and mappings."
"Most of the thing is done in this class. From initialization of game to resetting the game, whole logic is written here. controls of person, donkey, princess, coins, fireballs all done in one class. This is messing up the whole code structure. Failing to use OOPs concept. Instances not properly used and looks more like normal function calling and returning done in one class."
"exactly one whitespace required before assignment. (PEP8 standard)"
"Exactly one space required after comma. (PEP8 standards)"
"No space allowed after bracket. (PEP8 standards)"
"the file could've contained other constants also like screen_height, screen_width etc. which are randomly declared inside the modules. Altering values of such values is easier then. (code smell)"
"No idea what is fires.r and fires.v are doing."
"constant literals should be used (e.g. > screen_width, this makes more sense) instead of directly feeding in values. makes it hard to test and debug. (code smell)"
"Do not keep dead code lying around if its not supposed to be an actual comment  (Code Smell)"
"instead of drawing coins, misc, ladders, bricks here again, refresh() method made above could've been called which does exactly the same thing"
"Good that assignment has been done using PEP8 standards in almost the whole code. Proper spaces before/after '=' and ','."
"Large classes are difficult to read, understand, and debug. The class contains too many responsibilities.  The large class can be restructured or broken into smaller classes."
"reactionList variable never used. Remove code that is unused."
"remove the dead code or code which was used for random debugging."
"class doc-string missing to describe what's it doing.\
Anyways, class, method names are informative and try to convey the meaning what's it used for. Good."
"variables assignment looks too tight. c=0 could rather have been written as c = 0 which makes it more readable (PEP 8)"
"variables like onstair, points should be private. Then it would be actual implementation of Encapsulation."
"Good that code is broken down into small smaller functions with descriptive names as required."
"If variables are not private, the what's the use of private functions."
"This is not even lazy class, it has never been called or made an instance of. It's useless."
"image files could have been kept in a directory which makes the game folder structured rather than a pile of files lying around."
"unused imports person, fireball, coin, random. everything is managed in Game class, then why importing the extra modules."
"bad assignment, meaningless variable name, never used"
"unused variable 'coins'"
"keep the main module as short and simple as possible. the main() is really long function.. instead controlling keys could be handled in a separate function or class."
"drawFireball is in camel case (https://en.wikipedia.org/wiki/CamelCase)"
"Bug: when player moves too fast on ladder, then after reaching top of the ladder it slides down without having your control on it."
"Bug: fireballs all the time go down the ladder. It should be random. It's implemented but not properly."
"line too long. 3*board..... - 20, .. looks meaningless too. coin size could have defined in board specification file"
"unnecessary semicolons"
"Attribute 'life' defined outside __init__ (attribute-defined-outside-init)"
"Unused import random, sys"
"importing a module as 'the' is not good practice. it's not understandable."
"too many variables declared. these variables could have been declared inside the required classes where they add to the meaning of the code. declaring variables like this creates confusion and difficult to debug."
"Bug:  takes input while this is printed leads to \""dddddddddddd...\"". Avoid taking input while you are printing on screen"
"Too long a line. And that too, without any description of conditions so that it makes code readable."
"BUGS + CODE SMELL + PEP8 STANDARDS: The whole code is a complete mess up. No idea how did he even write it. No proper comments, codes not grouped, no doc strings, everything is so random, OOPs concept entirely missing, variables too confusing, Conditions not properly explained alongside. (Contrived Complexity: Code Smell)\
\
You can't even reach the queen which is the main objective of the game."
"too may nested if conditions. You will lose your track soon what're you even doing."
"Reimport 'sys' (imported at line 4)"
"Instance of 'attrDict' has no 'x', 'y' member (which are referenced later). they should be declared before hand."
"This Method could be a function. It is doing nothing with self. This again shows that the code lacks OOPs concept."
"Most of the work is done outside the classes. These conditions should actually be implemented inside the class in some controlling function."
"Excessively short identifiers: the name of a variable should reflect its function unless the function is obvious. (Code Smell)"
"Cyclomatic complexity: too many branches or nested conditions; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification (Code Smell)"
"The function is similar to clearIt() function defined above (Line 4). No difference at all. Avoid repeating code and design the basic flow before you start writing the code."
"Large Class: Large classes, like long methods, are difficult to read, understand, and troubleshoot. The class contains too many responsibilities. (Code Smell)"
"Cyclomatic complexity: too many if  branches; this indicates that the function needs to be broken up into smaller functions, or that it has potential for simplification. (Code Smell)"
"Combinitorial Explosion: You have lots of code that does almost the same thing.. but with tiny variations in data or behavior. (Code Smell)"
"redrawScreen(): Unused argument 'width' and 'height'"
"Code nicely grouped out and separated with comments"
"Line too long (PEP 8)"
"Condition too long: needs a descriptive comment alongside what all conditions are checked here which makes it easy to read in future "
"Code broken down into a number of functions. Nice but some of the methods are too large. could have split further"
"Wrong hanging indentation before block."
"Exactly one space required after comma e.g. in self.checkMapForMatch(brokenLadderPos,i, 2,0): before i and before 0. (PEP 8)"
"Missing module docstring (PEP 8)"
"Cyclomatic complexity: too many branches;  (Code Smell)"
"Good to see that you implemented different images for different directions of motion of objects. This makes game more enjoyable and real."
"Duplicated code: identical or very similar code exists above. (Code Smell)"
"Excessively long identifier: currentJumpSpeed (Code Smell)"
"Bug: Using variable 'ch1' before assignment. It doesn't give error because may be condition is never called or donkey is moving on an on in a single direction."
"Too many blank lines."
"Missing space before ',' when passing arguments, declaring functions, classes and methods.\
This is a global comment for the whole file."
"Missing Space around binary operators such as '=' , '+' , '-'.\
This is a global comment for the whole file."
"Expected blank lines after class declaration and method declaration."
"Too many blank lines."
"Too many blank lines."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Line is too long, too many characters."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing Space before binary operators such as '=' , '+' , '-'."
"Missing space before ',' when passing arguments, declaring functions, classes and methods."
"#Bug\
ladders may not always lie in between 2 levels."
"#Bug\
ladders may not always lie in between 2 levels."
"#Bug\
if ladders do not lie in between 2 levels then the fireball will be assigned any direction==0 and stop moving after falling straight down."
"#Bug\
Game does not reset if a life is lost."
"#Bug\
Game does not exit properly."
"Code smell: \""Duplicate code\"".\
'donkey' class is same as 'player' class.\
These classes should be declared using class inheritance."
"Code rating is -8.74/10"
"Code smell: \""Duplicate code\"".\
'fireball' class and 'player' class are similiar."
"#Bug\
Coins are not always removed completely."
"Line too long."
"Colours could be declared in separate module. "
"Missing spaces around '=' operator."
"At-least 2 spaces before in-line comment."
"#Error\
Indentation is not multiple of 4."
"#Error\
Wrong indentation."
"#Error\
Expected an indented block."
"Blank line contains white-space."
"#Error\
Indentation is not multiple of 4."
"#Error\
Indentation is not multiple of 4."
"Blank line contains white-space."
" comparison to False should be 'if cond is False:' or 'if not cond:'."
"Line is too long, too many characters."
"#Error\
Indentation is not multiple of 4."
" comparison to True should be 'if cond is True:' or 'if cond:'."
"#Error\
Indentation is not multiple of 4."
"#Error\
Indentation is not multiple of 4."
"#Error\
Does not match any outer indentation level."
"Too many indentation errors. Game does not run."
"Method is unused hence it need not be declared."
"This is Global comment for the whole file.\
Missing spaces around operators."
"No classes implemented."
"Variable names are not specific."
"#Error\
Indentation in not multiple of 4."
"#Error\
Expected indented block."
"#Error\
Unexpected indentation."
"#Error\
Unexpected indentation."
"#Error\
Expected indented block."
"#Error\
Expected indented block."
"Indentation is not multiple of 4."
"Indentation is not multiple of 4."
"This is a global comment for the whole file.\
Missing Space after ','  when passing arguments."
"This is a global comment for the whole file.\
Too many \""if\"" statements used."
"Should create a \""bomb\"" class with attributes x and y. "
"Should create a list of \""bomb\"" objects."
"Should create a \""level\"" class with position, width and height attributes to bound \""bomb\"" objects. "
"Too many lines of duplicate code.\
Use loops instead."
"No lists used for various objects."
"Group all \""rects\"" and use pygame.group.draw()."
"Group all \""ladders\"" and use pygame.group.draw()."
"Should use classes and instances to create objects rather than declare them individually."
"Missing white-space around modulo operator."
"\""Jump\"" move not implemented."
"Should use lists and loops to shorten lines of code."
"Should use pygame.group.collide() method."
"Due to indentation errors rating cannot be determined."
"Due to indentation errors rating cannot be determined."
"Code smell: \""Duplicate code\""."
"Code smell: \""Duplicate code\""."
"#Bug\
No broken ladders implemented."
"Code smell:\""Large class\"",""15"
"Code smell: \""Long method\"",""15"
"Code smell: \""Long class\"",""15"
"Too many nested if-else constructs."
"Code is rated -7.52/10"
"Code is rated -18.25/10"
"#Error\
Continuation line is missing indentation."
"#Error\
Too many indentations containing tabs."
"Code smell: \""Importing with wildcard\"",""15"
"Code smell: \""Long class\""."
"Code is rated -28.92/10"
"No broken ladders implemented."
"Code smell: \""Duplicate code\""."
"Code smell: \""Importing with wildcard\""."
"Variable names not specific."
"Code smell: \""Long class\""."
"Code smell: \""Long class\""."
"Code smell: \""Long class\""."
"Code smell: \""Long method\""."
"Should have been a private variable with a getter and setter"
"Too many nested for loops/if statements -> codesmell"
"Could have moved this into a different function (too much nesting -> codesmell)"
"Large method, split it out into smaller methods -> codesmell"
"Large method, split it out into smaller methods -> codesmell"
"Ally group unnecessary since there is only one ally, the princess "
"Could be incorporated into makeWalls function."
"Could be incorporated into the makeWalls function since these are not randomized."
"Lengthy music will be interrupted by other sounds such as coin collect or jump and this will end abruptly. We cannot play multiple files at once with the mixer.music.load and mixer.music.play in python."
"Class is getting quite large (God class) -> codesmell"
"Overlapping jump and coin collect sounds can interrupt each other"
"Error in setter.\
Should have been \
def setSpeed(self,val):\
    self.__speed=val\
"
"Feature envy as it uses a lot of methods from the Board class (Almost all methods) -> codesmell"
"Unnecessary class since we dont move ladders once they are generated in a certain level."
"Code duplication, we could have just used updateWH instead of this -> codesmell"
"isJumping should have been a private variable with a getter and setter."
"onLadder should have also been a private variable with a getter and setter."
"Unnecessary class since we don't update the image of a wall once it has been generated for every level. This is a lazy class -> codesmell"
"comments explaining classes can get quite useful at times, well done."
"try use this to call the parent constructor next time, super(Player, self).__init__(name, year)"
"These should have been private variables with getters and setters to access and change them since they are game critical variables, no encapsulation"
"Hardcoding the map would have been better if done with a file, so the map could be modified with ease."
"Why indent these two lines?"
"This function is quite repetitive with only a few changes ( the positions), it would be better if you stored these in an array and then the function would take care of it, so this leads to combinatorial explosion -> codesmell"
"Person class has not been implemented (Player should have been a subclass of the 'Person' class)"
"Jump has not been implemented."
"Same code as above."
"Comments should explain 'Why' not the 'What' -> codesmell"
"continuousUpdate is called many times and can end up slowing the game or reducing the FPS."
"These donkey kongs can overlap with the older ones if they are at the same position, so hardcoding this is bad."
"This class doesn't do much, its a lazy class -> codesmell\
An OnBoard class could have been used to make these buttons."
"Instead of using scale in python try select images of appropriate size."
"Code which does similar things, this comes under combinitorial explosion -> codesmell"
"Unnecessary to make this an abstract method. It would be the same for any child class except the size which we could send as an argument."
"Use real names when possible, not nicknames."
"It would have been better if we consider drop on each block and not at every position, so we could have a probability of 50% to drop and 50% to stay instead of 14/20 stay and 6/20 fall."
"Try explain the 'Why' aspects instead of the 'What' aspects. -> codesmell"
"Large repetitive methods, could lead to combinitorial explosion -> codesmell"
"Try redraw only what has been changed instead of everything, This could slow the game down."
"Long method, try split into shorter ones -> codesmell"
"Imported sys although not used anywhere"
"Prefer to write import statements on different lines."
"Class explanation doc-string missing"
"Do not keep dead code lying around if its not supposed to be an actual comment -> codesmell"
"Great usage of an array instead of a lot of repetitive code."
"PEP-8 standards, use abc_def lower case convention for naming methods, since no backward compatibility is required here."
"Uncommunicative name, make variable names as descriptive as possible -> codesmell"
"Dead code, remove it when its not being used -> codesmell"
"Inconsistent naming convention, earlier you used Camel class but here the 'd' is not capitalized."
"Try not to keep debugging statements lying around -> codesmell"
"Long line of parameters nicely split into different lines."
"Repetitive code with only minor changes, combinitorial explosion -> codesmell\
Try use switch statements wherever possible."
"Didn't use  communicative names -> codesmell"
"Code nicely grouped out and seperated with coments."
"Long parameter lists -> codesmell\
The longer the parameter lists are the more complex your code gets.\
Use an object to send all these parameters if required."
"Class with no other functions apart from init, this is an unnecessary class."
"Unnecessary class with no attributes and no functions either."
"Adhere to PEP-8 spacing rules between variables and operators."
"A class with no initializer and doesn't do much. This is a lazy class -> codesmell"
"Use encapsulation where required. These variables you want them to be private."
"Include setters along with these getters."
"Didn't use Polymorphism anywhere."
"The handle_keys function would be a good candidate for a polymorphic function."
"Private function not necessary when you can directly access the variable from within the class."
"Good to see that you have given each instance of a living being a name."
"Long and lengthy statements, should have been split up."
"Try group variables into a class if they are complex enough. This is Primitive Obsession -> codesmell"
"Redraws unnecessary groups even if they haven't been changed. This can end up slowing the game."
"Invalid function names according to PEP-8 convention."
"It would have been better if these functions were put into a class."
"sys was imported but not used anywhere."
"This method makes extensive use of methods from other classes, feature envy -> codesmell"
"A very long method, would have been better if split into smaller methods -> codesmell"
"Primitive obsession and Long arguments lists, would be better if they were put into a class and an object was sent instead -> codesmell\
"
"Include doc-strings for all classes and functions you write."
"Make these variables private since they are critical variables."
"Not a lot of encapsulation is present in the code."
"collideDonkey and collidePrincess are similar functions, combinitorial explosion -> codesmell\
Try refactor it out by passing an additional variable to the function collide which tells us if its a donkey or the princess."
"The subclass doesn't do much, its a Lazy class -> codesmell"
"Another lazy class which is identical to its superclass -> codesmell"
"These classes are Middle-man classes since they don't add any functionality and they just exist as wrappers -> codesmell"
"Make variables descriptive -> codesmell"
"Try reduce nesting wherever possible"
"Long method, try split it into smaller functions -> codesmell"
"Stick with a certain naming convention for class names and method names.\
Use buildMovingDonkey if you want to use camel case else build_moving_donkey if you want to stick with PEP-8 standards."
"Missing method doc-strings."
"Lines too long , try split into different lines."
"Pytest gives errors when pygame.init() is not called such as font is not initialized etc"
"Comments should explain 'Why' things are done and not 'What' they  do -> codesmell"
"Similar code with small changes leads to combinitorial explosion -> codesmell"
"Do not leave dead code lying around -> codesmell"
"checkCollision function not present between a player and a wall"
"Long function, try split it into smaller functions -> codesmell"
"Follow a naming convention for naming methods and classes and variables. Camel class of PEP-8 conventions could have been used."
"Bug where player can cross the boundary walls without colliding with them."
"No score and lives have been displayed in the game."
"Great to see living_beings being used instead of just Person."
"Small and to the point classes, well done!"
"Long lines, try split them up into smaller lines PEP-8 standards."
"Reloading all the groups might take a long time and slow down the game, only try change groups which have been updated recently."
"Use private variables with setters wherever needed."
"Use descriptive names for variables -> codesmell"
"Combinitorial explosion, too many similar statements, try put them in an array and run a loop over the array -> codesmell"
"Too many conditions in a single statement -> codesmell"
"Uncommunicative names -> codesmell"
"Dead code, do not keep debug statements lying around -> codesmell."
"Message chains, too many function calls one after another -> codesmell"
"Player can fall off the board and dissapear from the screen"
"Continuous jumping on broken ladders can make you climb the broken ladder."
"Jumping is possible while on the ladder"
"Player cannot change direction or move once in free fall."
"Player cannot walk ontop of a broken ladder without jumping"
"Fireballs drop down on every ladder and broken ladder and none of them go past the ladders."
"Player does not die when he touches donkey kong."
"Game Over screen displayed when player reaches the princess although the scores stay intact."
"Player cannot move left or right when he is on the ladder."
"Player reaches halfway into the ground after a jump from ontop of a ladder."
"When player dies on the 2nd floor, he re-spawns at the first floor instead of the starting of the level."
"Fireballs in the 2nd level do not drop down on ladders due to their high speeds."
"store all the tuples in an list.\
Then just do def map3(self,list):\
    for i in list:\
         self._Display.blit(self.Platform2,i)\
The list would be [(-23,485),(320,485),().....] \
This could be an alternative."
"\""sys\"" imported is not used"
"No separate class for player"
"No separate class for Donkey"
"No separate class called Person from which Player and Donkey inherit few common methods"
"No separate class for fireballs"
"There are no broken ladders in the game"
"All the necessary functions in the game are completely hardcoded like getPosition(),checkWall(),checkCollision(),collectCoin()"
"Poor functionality as the positions of ladders,player,donkey,queen,floors,fireballs,coins and walls are suitable to the current size of and and does not adjust to the change in the display_width or display_height.Even the movement of the player and font size needed to be interconnected so that collisions can be found."
"No trace of  Polymorphism found in the code"
"21 random coins are generated where one coin is found to be out of the floor boundaries"
"The game is ending when the player rescues the queen rather than restarting keeping the score intact."
"The ability to quit in the middle of the game by pressing 'q' is not present during the game but can be used at the start_screen or end_screen"
"This method is not used in the main file (DonkeyKong.py)"
"A random 6th fireball is generated which does not function i.e does not move or reduces lives of player upon contact"
"Could have used \\t for spacing the text correctly rather that spending a lot of time giving spaces(in the message_to_screen) and checking.\
Should have used \\n in the same message_to_screen method to make this similar"
"Sometimes the collisions do not checked when the player moves fast(movement keys pressed).So it is suugested to check the collision at more than one point depending on the size of the text used to depict the player and fireball"
"At one position the player falls off the floor before the floor actually ends"
"Module level import not at top of file in lines 5,6,7,8,9,10"
"expected 2 blank lines ,found 0"
"Indentation contains mixed spaces and tabs.Missing whitespace around operator in all lines"
"missing whitespace around operator '=' and ',' in all  the lines"
"No newline at the end of file"
"No new line at the end of file"
"Missing whitespace around operator '='"
"Expected 2 blank lines , found 0.Missing whitespace after ','"
"IndentationError: unindent does not match any outer indentation level"
"indentation contains tabs in lines 8,9"
"missing whitespace around operator"
"expected 2 blank lines,found 0.Missing whitespace after ','"
"Indentation contains tabs in lines 6,7,8,9"
"unexpected indentation"
"No new line at the end of file"
"No new line at the end of file"
"missing whitespace around operator and after ',' at lines 4,5,6,7,9"
"missing whitespace around operator"
"indentation contains tabs"
"IndentationError: unindent does not match any outer indentation level"
"Missing white space around operator"
"white spaces after ',' in lines 2,3,4,5,6,7,8"
"Poor functionality as the positions of ladders,player,donkey,queen,floors,fireballs,coins and walls are suitable to the current size of board and does not adjust to the change in the display_width or display_height\
"
"Should have created a method in Donkey.py for colors so that it would not be necessary to define them again"
"No whitespace after ',' in lines 6,7,8,9,10,11,12"
"No blankline at the end of file"
"Should have used only a single 'for' loop instead of 6 loops"
"No necessary functions like getPosition() , checkWall() , checkCollision() , collectCoin()"
"The quitting functionality is not present i.e a person cannot quit the game by pressing 'q' "
"This is unnecessary as the player1.x can never be less than 40 and greater than 760"
"This line contains more than 79 characters(pep -8 standards).Even lines 41"
"This line contains more than 79 characters(pep-8 standards).Even at lines 112"
"Indentation Error"
"There should be a white space around operators"
"There should be white space around operators"
"All inline comments should be separated by at least two spaces from the statement. They should start with a # and a single space."
"Do not compare boolean values to true or false using '=='(pep-8 standards)"
"Modules name should contain all-lowercase letters"
"Surround top-level function and class definitions with two blank lines.\
Method definitions inside a class are surrounded by a single blank line."
"Surround top-level function and class definitions with two blank lines.\
Method definitions inside a class are surrounded by a single blank line."
"Variables used are not specific-Code smells"
"modules imported should be used in separate lines(This pep-8 standards error is present in all the files)"
"Surround top-level function and class definitions with two blank lines.\
Method definitions inside a class are surrounded by a single blank line."
"constants should be in CAPITAL letters"
"Constants should be in CAPITAL letters"
"Block comments should be indented at the same level of the code"
"All Block comments should be at the same level of the code"
"Too many if statements used"
"Too many while statements"
"No blankline at the end of file"
"No blankline at the end of file"
"Do not compare boolean statements with true or false using '=='"
"Too many if-elif statements"
"Too many if-elif statements"
"Unnecessary variable declaration"
"No of characters exceeding pep-8 standards\
Conditional complexity"
"No of characters exceeding pep-8 standards\
Conditional complexity"
"Modules imported should be written in different lines( even in file person2.py)"
"Variables  not specific- code smells like z,aaa,fl,v"
"there should be whitespace around an operator and after ','"
"No whitespace allowed before :"
"No whitespace allowed before  :"
"No whitespace allowed before  :"
"There should be no whitespace before '(' and no of characters are exceeding 79"
"Block comments should be in line with the code"
"using sleep is a bad way of writing the jump functionality"
"Why is this statement in for loop for no specific reason?You could have assigned values to the variables even outside the loop"
"Use blank lines sparsly"
"Surround top-level function and class definitions with two blank lines.\
Method definitions inside a class are surrounded by a single blank line."
"Declared too many times,even PScore"
"Use blank lines sparsly"
"Wrong way writing inline comments in lines 143,144,145,188"
"Wrong way on writing Block statements in lines 169,173,183,189,193,195,203,205"
"Block comments should be inline with the code"
"Try avoiding unnecessary blank lines(even in file player.py)"
"No whitespace after ','"
"Use whitespace around an operator"
"No blank line at the end of file in all files"
"using sleep is a bad way of writing the jump functionality"
"Do not compare boolean with True or False using '=='"
"There should be no whitespace before : (even in lines 29,155,158,161)"
"No blankline at end of file"
"There are no broken ladders"
"Do not compare boolean with True or False using '=='(even in line 124)"
"Too many characters in a single line(pep-8 standard < 79)"
"Dead code should be removed-Code smell(even in line 63)"
"Comments which do not explain the code should be removed-Code smells(even in file main.py line63,file person2.py lines 162,194,261)"
"Typically a function should have 15-20 lines of code.Each function defined in this class has too many lines of code"
"Too many lines of code in this function.Could have used while loops with certain conditions"
"No blankline at the end of file"
"Unnecessary declaration"
"Variables are completely hardcoded and cannot adjust to the change in the display_height and display_height"
"sys module not used"
"Method is too long.Should have reduced using while/for loop giving conditional statements"
"Method is too long.Should have reduced using while/for loop giving conditional statements"
"Method is too long.Should have reduced using while/for loop giving conditional statements"
"No use of sys"
"Should have written a separate method CheckWall() because a part of both moveRightandCheckWall() and moveLeftandCheckWall() perform the same task"
"Very minimal work.Should have used the statement self.isjump = 1 itself as in the above files you were doing self.player.isjump = 0"
"Very minimal work should have used the statement separately as the variable pisfall is not anywhere except this file"
"value returned in this case is not stored.Should have changed method move such that it returns flag when your condition(necessary condition) satisfies"
"Avoid using non-specific variables like t"
"Instead of calling getPosition you could have used the variable t(self.Person.checkwall.t[]) from checkWall"
"This is also unncessary as this can never happen"
"Fireballs does not fall from ladders"
"The number of lives again comes back to 3 rather it should remain same"
"Very large function.Should have divided the work into different functions"
"Fireball does not fall down the ladder(functionality not present)"
"When the player updates to a next level the no.of lives changes to 3 instead of remaining the same"
"Didn't add quit functionality i.e quitting the game when q is pressed"
"Floors do not have an end.So the fireballs or player do not fall off the floors"
"Very large method.The work should be divided in different methods-Code smell"
"when the player reaches the  queen,the score becomes 0 and the number of lives becomes 3.Instead the score and the remaining lives should remain same.The fireballs remain at the same position at the instant the player has rescued the queen even when the level changes."
"Conditional complexity due to large conditional statements(lines 117,120,130)"
"Conditional complexity in lines 110,112"
"Conditional complexity due to too many if-elif statements"
"modules imported should be wriiten in different lines"
"The player directly jumps to the next floor or below floor(it depends) when he is at the position of the ladder,but the player does not move on the ladder"
"Conditional complexity"
"Unused variable save .. Should have used an if statement to check if the list \""save_list\"" was empty or not instead of using an unnecessary for loop"
"Unused variable call ..Same Error as in line :220. Should have used an if statement to check if the list \""collide_list\"" was empty or not instead of using an unnecessary for loop"
"Unused variable block .. Should have used an if statement to check if the list \""block_hit_list\"" was empty or not instead of using an unnecessary 'for loop'."
"Unused variable block .. Should have used an if statement to check if the list \""block_hit_list\"" was empty or not instead of using an unnecessary 'for loop'."
"Bad-indentation .. 2 tab spaces have been used when only 1 should have been used according to PEP8 guidelines ."
"Too many if/else statements and too many branches in this function."
"Too many if/else statements and too many branches. Collision checks and ladder position checks  have been hard-coded .. hence many statements."
"Unnecessary import of math module."
"Line too long: according to Pep8 guidelines"
"Line too long: according to Pep8 guidelines"
"Line too long: according to Pep8 guidelines"
"Invalid attribute name  .. Method name / instant variables should be lowercase : PEP 8 guidelines"
"Invalid attribute name  .. Method name / instant variables should be lowercase : PEP 8 guidelines"
"Invalid constant name  .. Constant names should be in uppercase: PEP 8 guidelines"
"Invalid class name  .. use the Cap Words convention : PEP 8 guidelines"
"Method could be a function"
"Missing class docstring : appropriate comments should be added before every class,function etc."
"too-many-instance-attributes"
"Missing class docstring : appropriate comments should be added before every class,function etc."
"Missing class docstring : appropriate comments should be added before every class,function etc."
"Missing class docstring : appropriate comments should be added before every class,function etc."
"Missing class docstring : appropriate comments should be added before every class,function etc."
"unused-wildcard-import"
"bad-whitespace from line 30 : 39"
"bad-whitespace for the above lines."
"bad-whitespace for the above lines : PEP 8 guidelines"
"Unnecessary definition of rgb colors as they are not used in the code below"
"Avoid use of multiple jpeg images as they increase the size of the file"
"Should have used a better way to randomize the generation of coins"
"Fire ball motion is not random .. movement has been hard-coded .. should have made the platforms as sprite images and used sprite collide\
 to check for collisions"
"Maps are not randomized hence only 4 maps are present in the game"
"Score is not displayed anywhere "
"Player's score is not decremented after colliding with fireball"
"Life is not displayed .. Hence unable to tell if game has been restarted or not."
"Reset game function does nothing. Does not reset the value of variables like Score,Life etc. nor sets a flag which will let other functions know that the\
 game has been reseted."
"game does not reset nor does it proceed to the next level after colliding with the princess"
"should also be deactivated when player is on the ladder (Suggestion)"
"Game functionality Error: flags have been set such a way that 'jump' and move 'right/left' cannot be performed simultaneously ."
"Missing module docstring"
"Redefining built-in 'exit'"
"Error in code: this 'if' statement should be within the above 'for' loop \""for event in pygame.event.get():\"" hence only on event is checked within one game\
loop. Thus multiple keyboard inputs is ignored."
"Undefined-loop-variable 'event'"
"Invalid class name from line 8-10  .Use the Cap Words convention : PEP 8 guidelines"
"Invalid attribute name  .. Method name / instant variables should be lowercase : PEP 8 guidelines"
"Imports have to be in separate lines: PEP 8 standards"
"Unnecessary import of modules that are not used and also not required in any way."
"Imports have to be in separate lines for code readability : PEP 8 standards"
"Meaning less 'C libraries' being used."
"Serves no purpose to the code. Unnecessary function"
"Code from this file has not been imported from any other file. Contains library calls that are not required for the program"
"Person class imported but has not been used"
"Player's position on starting the game or after being hit by a fireball is not at the bottom left corner but somewhere in the middle."
"No concept of fireball has been used. Instead multiple donkeys/ghosts are spawned at random points."
"Player's life is not displayed and also not computed anywhere. hence assuming player has only single life."
"Map drawn below does not relate to the donkey kong platform structure. No concept of platform has been drawn"
"Letter 'H' to represent ladder in ASCII map structure has not been used or any thing of that sort. Hence no ladders present in the map"
"Map is hard-coded. hence cannot be randomized. "
"Unused variables according to pylint"
"Unused variable according to pylint"
"Missing class docstring : appropriate comments should be added before every class,function etc."
"Missing class docstring : appropriate comments should be added before every class,function etc."
"Collision is checked only with ghost/donkey but no with fireballs"
"Naming of classes is mixed. Player class is called donkey and donkey class is called ghost"
"A clear function could be added which clears the screen and prints only the current frame required."
"Assuming 'W' is used for jump as 'spacebar' is not read by the program, Player does not jump but instead just moves upwards block by block without falling down."
"Mixed indentation .. tabs have been used in some places while space has been used in others .  PEP 8 standards"
"Read the below line. If negative, score is made zero. Thus player's score never becomes negative"
"Random is not used in this file"
"above  and below rand statement does not do anything as range is between -1 to 1. Hence initial position of ghosts/donkey is not randomized though author specified for it."
"There is no staircase"
"Total score is displayed"
"@ vyshnavi.gutta:  this is where the total score is displayed once a collision is detected. "
"Unable to tell when this reset function is being called"
"Proper PEP-8 standards have been followed in most areas but game functionality is lacking."
"Coin position could be randomized. "
"Could have used sprite.collide to check for collisions. \
Could be done in 5-6 words instead of writing a long line:- PEP-8 standards"
"steps value could be more since the max jump height is just 2 more than the size of the fireball .. hence making it difficult to play(suggestion)"
"Lack of private variables used for values that should not be affected outside the respective class"
"If sprite collide was used, a common function to check collision with platform/floor could have been used for player & fireball."
"Function to check Collision with Boundaries is missing .. thus player can fall out of the map in any direction and nothing happens after that. *Major bug*"
"Same thing goes for ladders. Flags could have been used instead of making two separate functions for player & fireball."
"Excessive use of if/else statements (large nested conditions)."
"Objects in the game could have been made using sprites. Would have made collisions detection easier and the number of variables required less,thus eliminating large nested loops."
"Position of floor and ladder is hard-coded. Thus map cannot be randomized. "
"Above lines have mixed indentation i.e spaces have been used in some places while tabs have been used in others.\
Text editor like Sublime would help in writing properly indented codes. *not vim*"
"unused import."
"Not a bug. Images used were cropped to maximum extent possible. Since sprites are rectangular the collisions wont be perfect."
"Would not make a difference. If the below code has to be shortened then it would have to be made up somewhere else i.e\
platform levels/ladders  have to be specified."
"@sanket Also single object ladder used multiple times instead of creating multiple object with individual images stored in an array.\
Hence lesser variables to manage."
"Would not make a difference. If the below code has to be shortened then it would have to be made up somewhere else i.e\
platform levels/ladders  have to be specified."
"@sanket Also single object ladder used multiple times instead of creating multiple object with individual images stored in an array.\
Hence lesser variables to manage."
"Two times bro.. two times!!"
"Variable is used throughout this file. Also according to PEP-8 standards return arguments should not have the same name as function parameters. Hence this flag name was not used in other files."
"Could have used pygame.message to display Score or lives instead of creating new objects and using blit."
"Number of maps is less as the movement of fireballs and positions of platform are hard-coded."
"\
Size of array required to be used and size of the lines of code below  are same. (4 bytes for each array element and 4-5 bytes for each word)\
If an array is to be used , the respective values have to be filled in. Hence more lines of code would be used there.\
Thus there is no  difference."
"Some variables are not made private. Critical variables should be private."
"Some variables are not made private. Critical variables should be private."
"Exactly one whitespace required after coma(bad whitespace)\
\
\
"
"Found Indentation with tabs instead of spaces "
"Too few public methods"
"Invalid constant name \""command\"" (invalid-name)\
"
"Missing function doc-string"
"Redefining name 'p' from outer scope (line 162) (redefined-outer-name)\
"
"Catching too general exception Exception (broad-except)\
"
"Redefining name 'i' from outer scope (line 63) (redefined-outer-name)"
"Missing function docstring"
"Exactly one space required after coma\
"
"Found indentation with tabs instead of spaces (mixed-indentation)\
"
"Missing module docstring"
"Too few public methods."
"Cannot import 'msvcrt': error in import"
"Found indentation with tabs instead of whitespace"
"Missing module doc-string"
" Invalid attribute name \""positionX\"" (invalid-name)\
"
"Invalid attribute name \""positionY\"" (invalid-name)\
"
"method doc-string"
" __init__ method from base class 'Person' is not called (super-init-not-called)\
"
"method doc-string missing"
"__init__ method from base class 'Person' is not called (super-init-not-called)\
"
"Exactly one space required around assignment. "
"Module doc-string is missing"
" Redefining name 'q' from outer scope "
"Redefining name 'p' from outer scope \
"
"Function doc-string is missing."
"Names p,q,i have been redefined from outer scope. "
"Function doc-string missing"
"__all__ mechanism not used to prevent exporting globals."
"found mixed indentation (not recommended by pep-8)"
"Line too long. Doesn't conform to pep-8 conventions."
"Spaces not allowed before bracket."
"Trailing whitespace found. "
"Old-style class defined."
"Module doc-string is missing."
"Unused variable 'x'."
"Method doc-string missing. "
"Unused variable 'flag'"
"Too many branches used."
"Unused variable 'end'"
"Bad indentation. Found three spaces, when four were required."
"Mixed indentation found. "
"Unused variable 'no'"
"Unnecessary pass statement used"
"Trailing whitespace found. "
"function doc-string missing."
"Bad indentation."
"Mixed indentation found."
"Line too long. Exceeded 79 characters. (According to pep-8)"
"Line too long. Exceeded 79 characters."
"__init__ method from base class 'Board' is not called.\
"
"Module doc-string missing."
"Method could be a function as well(no self-use)"
"Unused variables 'fire-right','fire-left','fire-stairs'."
" __init__ method from base class 'Player' is not called"
" No value has been passed for parameter 'd' in function call.\
"
"Comments should be written for better understanding of code."
"Line too long. Exceeds 79 characters (pep-8)"
"Exactly one space is required after comma"
"Mixed indentation found (tabs used instead of spaces) throughout code."
"No space allowed around keyword argument assignment. "
"Missing module doc-string."
"Unable to import 'termcolor'"
"The string statement has no effect. "
"Too few public methods are used. "
"Too many instance attributes are there. "
"Too many "
"Method could be a function as well.(no self use)"
"The attribute 'fireballs' has been defined outside __init__"
"The attribute 'donkey' has been defined outside __init__"
"The attributes 'previnput','coinflag','flag' and 'input' have been defined outside __init__"
"There are too many branches."
"Mixed indentation found throughout code. (with tabs)"
"Only one space is required after a comma."
"Bad indentation. (used 8 spaces instead of the required 4)."
"module doc-string is missing."
"Unable to import 'pygame' : pylint"
"String statement over here has no effect or use. "
"function doc-string is missing. "
"bad and mixed indentation found throughout code. "
"Invalid module name."
"Missing module doc-string."
"No fireballs implemented."
"Bad indentation 13 spaces instead of 12"
"Redefined variables screen , player which were initially defined as global variables."
"Redefining event from outer scope --PEP8"
"Unused imports from pygame like color and rect --PEP8"
"lines 13-19 bad-whitespace --PEP8"
"trailing whitespace --PEP8"
"One space after comma  --PEP8"
"unnecessary parenthesis after if  --PEP8"
"Line too long . Use multiple if conditions  --PEP8"
"Line too long . Use multiple if statements  --PEP8"
"Missing module docstring  --PEP8"
"line 13 line 14 Invalid constant name .Use the right guidelines for naming constants  --PEP8"
"Missing function docstring . Every class every function and every module should have a docstring  --PEP8"
"Invalid variable name  --PEP8\
Excessively short identifier  --Codesmell"
"No space allowed before ':'  white space error  --PEP8"
"Using lad_hitlist variable before assignment  --bug"
"Too many local variables declared in main  --Code smell"
"Too many branches in function. Complexity of code increased   --Code smell"
"Too many statements in function .Complexity of code increased --Code smell"
"one space after every comma in line 5 and 6  --PEP8"
"invalid argument name 'x'. Check guidlines for variable names  --PEP8"
"Missing method Docstring  --PEP8"
"Missing method Docstring  --PEP8"
"Missing method Docstring  --PEP8"
"Missing class Docstring  --PEP8."
"Invalid class name donkeykong . Use CapWord convention  --PEP8"
"complex if else loop . Can be simplified breaking into fewer conditions .   --Codesmell"
"Missing class Docstring  --PEP8."
"Invalid class name fireball . Use CapWord convention  --PEP8"
"line 34 and 35  .. Line too long . --PEP8"
"Trailing whitespace ..  --PEP8"
"invalid variable name r .  --PEP8"
"IF ELSE conditions long and complex .  Can be shortened .  --Codesmell"
"No space allowed before ':'  --PEP8"
"'screen' variable defined but not used  --PEP8"
"Too few public methods   --Codesmell"
"Too few public methods   --Codesmell"
"Missing module Docstring  --PEP8"
"Missing class Docstring  --PEP8"
"Missing class Docstring  --PEP8"
"Missing method Docstring  --PEP8"
"Invalid class name --PEP8"
"Invalid class name --PEP8"
"Missing module , class , function Docstring   --PEP8"
"Old style class . Use new style class as it allows use of features like super . New style classes can be defined by inheriting object or another newstyleclass."
"Very deep if-else loop and multiple conditions .  Could lead to complications .  --Codesmell"
"Line too long for line 93 and 101 . Use broken if conditions or reduce number of conditions .  --PEP8"
"'normal' attribute defined outside __init__ . Define all class attributes inside __init__ for easier readability of code. Assign None to attribute if required . --PEP8"
"No module, class, method docstring --PEP8"
"For class coins platform and ladder . Too few public methods defined.   --Codesmell"
"Class has not __init__ method ..      --PEP8"
"Line 7 and 11 .  Line too long .  --PEP8"
"Method could be a function .  No use of self .   --PEP8"
"no use of randint and makeobject.  --PEP8"
"Could have instead done Level++ and checked if Level has become 4 .  --Codesmell"
"Very similar to lines 501 to 517 . Repetition of code. Could have used function instead .  --Codesmell"
"no use of random  --PEP8"
"Lots of hardcoding and if-else statements and long lines.    --Codesmell"
"F formula being calculated multiple times . Repetition of code . --codesmell"
"Could have used a function for some of these elif conditions by passing hardcoded values as parameters . Repetition .  --Codesmell"
"Lazy class . The class has very less use.  --Codesmell"
"function too huge."
"Important line missing . \""self.player.base = 438\"" . When the player is continuously jumping at any base level on being hit by a fireball the player can respawn at the same y coordinate . This can be solved by the above line .   --BUG"
"In this game the player cannot jump. There is no fireball, no donkey no princess and respectively none of the classes. Also the player does not fall of the edge but continuous after the end of platform. A coin can be half collected and a part of the coin will be left out. No points . No lives.   --BUG"
"On collision with fireball fail the 'P' should be printed out once else the fireball's previous coordinate is cleared and the player disappears temporarily.\
i.e the player can follow the fireball and be invisible all the time. --BUG"
"b is not used in the method.  --PEP8"
"FATAL ERROR : IndexError : Player can walk though the walls on the platform of queen. Therefore when player falls off platform when going through\
 wall then fall = 1 and it never becomes 0 again therefore player keeps falling until out of the 2-D grid .   --BUG  "
"A third condition is required here to make sure that the player cannot go through wall when at the same platform as the queen . -- BUG"
"It is possible to climb broken ladders  --BUG"
"If fireball hits player on ladder then self.direction remains either 'up' or 'down' .Then the player is stuck for the next round . Solution is to reset the self.direction on being hit by fireball so that the player can resume moving left or right .   --BUG"
"Collision detection is poor . Use better image sizes to ensure collision is detected when in contact.  --BUG"
"move right and move left has not checked wall properly. Due to hard code the player can now fly off the edge of platforms to the end of screen. This happens when the player is just on the platform while climbing the ladder. --BUG"
"Class is too huge  --Codesmell"
"Cyclomatic complexity . --Codesmell"
"Method size is too large   --Codesmell"
"Lines 93-99 being used multiple times . Should be converted into a function and used instead of repetition.   --Codesmell"
"Player can move into platform when in contact with ladder if 's' is pressed. Place a check condition to solve issue.  --BUG"
"Player multiple jump inconsistent since player.state == \""ground\"" not being set appropriately. Perform proper calculations or use better technique for jumping .   --BUG"
"Function too long  --Codesmell"
"Excessively short identifier . Use larger variables names that define the function of the variable. --Codesmell"
"Excessive return of data  --Codesmell"
"hardcoded the attributes according to screen dimensions.would cause bad graphic representations if the screen\
dimensions would change."
"display would not work if dimensions of screen would change.would cause conflict in pixellation."
"whitespace required between operands and operator"
"FPS defined but not used."
"very specific .bad code style"
"no need for separate print statements.unnecessary usage"
"usage of integers would reduce length of each statement and make the program more readable."
"very long statement.does not follow PEP-8 standards"
"extremely long statement.unreadable \
should follow PEP-8 standards"
"no comments anywhere.very tough to understand \
different code snippets.\
each snippet or function should be labelled according to its functionality and usage"
"constants should be capital."
"class names should be in CamelCase as prescribed by PEP-8 standards"
"each class should be broken down into different modules.\
OOP concept-modularization"
"constants should be CAPITALIZED\
PEP-8 constant naming convention"
"class names should be CamelCase\
PEP-8 naming conventions"
"attribute donkey defined outside __init__ function\
not PEP-8 standards"
"string statement has no effect\
PEP-8 (pointless string statement)"
"invalid variable name 'y'\
PEP_8 standards"
"redefining game over from outer scope"
"mising docstring method\
PEP-257"
"very long statement.\
Does not follow PEP-8"
"whitespace should be present between operands and operators\
PEP-8 standards"
"unused variable layout\
"
"unused variable gameover"
"no variable encapsulation\
V bad PEP-8 standards"
"class names should be in CamelCase\
PEP-8 class naming standards"
"very long statements\
does not follow PEP-8 maximum statement length"
"unuselful comment\
not required-(PEP-8)"
"this should have been a separate function rather than\
implementing it here."
"class naming should be in CamelCase\
-PEP-8 standards"
"Class should have inherited from Person class.\
several methods redefined\
"
"no function encapsulation"
"no variable necapsulation-\
PEP-8 data encapsulationclass should have inherited from Person class\
lots of redundant code"
"exactly one space required after comma\
PEP-8 whitespace conventions"
"trailing whitespace\
PEP-8 whitespace conventions"
"unnecessary file or module\
NOT used anywhere"
"exactly one whitespace after comma\
PEP-8 standards"
"space required around assignment\
PEP-8 standards"
"no space allowed here before comma"
"line too long\
PEP-8 standards"
"missing docstring me thod\
PEP-8 standards"
"string method has no effect\
PEP-8 string conventions"
"invalid variable name 'a'\
PEP-8 variable naming standards"
"unused variable j\
PEP-8 variable usage standards"
"method could be a function \
no use\
PEP-8 "
"unused variable rect\
PEP-8 variable usage standards"
"exactly one space required after coma"
"unused string method\
PEP-8 standards"
"bad whitespace \
PEP-8 standards"
"exactly one space required around assignment"
"line too long\
PEP-8 statement length standards"
"unused variable rect\
PEP-8 unused variable standards"
"missing class docstring \
PEP-8 docstring standards"
"invalid variable name 'a'"
"method could be a function \
no self use\
PEP-8"
"wildcard import pygame.locals\
PEP-8 import standards"
"Use raise ErrorClass(args) instead of raise ErrorClass, args. (old-raise-syntax)\
PEP-8 depricated syntax"
"missing function docstring "
"unused import sys"
"exactly one whitespace required before comma\
PEP-8 whitespace standards"
"no variable encapsulation\
Bad programming practices"
"line too long\
PEP-8 statement length standards"
"trailing whitespace\
PEP-8 whitespace standards"
"string statement has no effect"
"too few public methods\
PEP-8 standards"
"unused import time \
PEP-8 import standards"
"line too long\
PEP-8 max statment length standards\
"
"unused string literal"
"trailing whitespace\
PEP-8 whitespace standards"
"wildcard import helper\
PEP-8 bad import"
"attribute background defined outside __init__ method\
PEP-8 attribute standards"
"unused string literal\
PEP-8 string standards"
"attribute coint_sprites defined outside __init__"
"too many statements\
PEP-8 standards"
"too may branches\
PEP-8 branching standards"
"unreachable code\
PEP-8 standards"
"too many positional arguments for function call \
PEP-8 functional arguments standardsred"
"redefining name gameover from outerscope\
Bad coding standards"
"too many local variables\
PEP-8 variable number standards"
"missing method docstring\
PEP-8 docstring standards"
"BUG:\
forcing the player to be within boundaries not forced.\
rather position of player retraces"
"whitespace required between operands and operator\
PEP-8 standards"
"jump function should be part of a separate function\
Unclean code\
"
"hardcoded the position of the text\
must be more generic so that suited to all possible screen resolutions and displays.\
REDUCES CODE REUSABILITY"
"unused string literal \
string literal provides no useful information"
"line too long\
PEP-8 max statement length standards"
"Clas names should be CamelCase\
PEP-8 class naming standards"
"function names should be lowercase\
PEP-8 standards"
"hardcoded coins..\
should be randomly generated as expected\
"
"global variable should always be in CAPITALS\
PEP-8  variable naming standards"
"function name is very deceiving\
function name and actual functionality have no relation.\
V bad variable naming standards"
"very bad variable naming\
Non descriptive and not related remotely to usage\
"
"very long statement length\
PEP-8 standards"
"no comments anywhere.\
Should have included comments in small snippets of code to explain working.\
Code is not readable."
"confusing variable name.\
Msg should be used for some message and not the player.\
Improve code readablity"
"lots of if and elif statements without any explanation or comments.could have been grouped into single statements\
e.g for line 250-251:\
bc=-1\
and j+=1\
would do the job\
PEP 8 code complexity standards\
"
"no docstrings \
PEP-257 standards"
"multiple imports of pygame.mixer\
Redundant imports and code\
PEP-8 standards"
"no function encapsulation\
bad programming practice\
PEP-8 variable and function encapsulation standards"
"what is this doing?,why 109-81?\
if u had to hardcode anyways why write 109-81\
Unnecessary code"
"excessive imports.redundant code"
"found indentation with tabs instead of spaces.\
mixed indentation errors"
"the movement is very steep.so it is very tough to actually climb  a ladder."
"no jump function implemented as the assignment demanded"
"graphics not implemented properly.I'm able to eat up partial coins with the rest half of the coin visible.\
as after climbing the first ladder in the first level"
"the game does not support motion of fireballs.the fireball moves only if i move.basically the motion is hardcoded."
"LACK OF FUNCTIONALITY\
no jump function implemented as asked to implement in the assignment"
"LACK OF FUNCTIONALITY\
no multiple fireballs.\
no regeneration of fireballs.\
"
"BUG:\
the player can move to the topmost level and further out of the screen.the player can no longer be controlled.\
"
"BUG:\
The player can never win the game.NO objective in the game ??NO multiple levels."
"BUG:\
If i'm at the start position ,how many ever fireballs hit me ,i do not die.\
This happens only sometimes when i run the game."
"very nice music!!\
excellent jump function implementation!"
"no space allowed before bracket.\
PEP-8 whitespace\
standards"
"excessive code for an if statement.\
could be broken down to a function."
"similar functionality in both if and elif\
could be refactored to a function with parameters varying.\
CODE REDUNDANCY"
"what is this code part of?\
A function,class or just lying about.\
CYCLOMATIC COMPLEXITY"
"BUG:\
jump function without moving horizontally not possible"
"BUG:\
fireballs do not exit once reaching the bottom!\
"
"\
BUG:\
collision with donkey does not exit game.NO purpose of donkey"
"it doesn't detect player, when player is on ladder (fireball)"
"coins are placed again at same position after pressing 'c' (restarting)"
"total life's given are 4 but asked only 3"
"jump written here is not used"
"colour is hard coded"
"this doesn't check wall on top floor( queen's floor) "
"too many characters in a single line(PEP-8 standards)"
"No broken ladders"
"No levels Implemented"
"No proper use of  declared functions "
"No space after using ',' (pep-8 Standards) "
"Class has No _init_"
"A part of Player block will go beyond boundary"
"It do nothing ,unnecessary declarations"
"Colour of block would have declared in class Person "
"space after use of  ' , ' required ( PEP8-standards)"
"use of BREAK statement to terminate 'for' loop  is bad method"
"size of block is hard coded which is difficult to modify in future (code smells)"
"size of Block is hard coded which makes difficult to change ,so everytime we change Block size we should take care of little things (code-smells)"
"Data class which is used to dump data (code smells)"
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation ill be difficult "
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation will be difficult"
"use of global variables is not recommended ,modulation will be difficult"
"he cannot climb on ladders ,but he directly jumps on to next floor when he presses a up button"
"he cannot climb on ladders ,but he directly jumps on to next floor when he presses a down button"
"use of sleep function is not recommended "
"use of sleep function is not recommended"
"to many characters in a single line  PEP-8 standards"
"space should be used after every use of ',' (PEP-8 standards)"
"Large class (code smell)"
"This function is more specific for player it should been written in player class"
"This function is more specific for player it should been written in player"
"This function is more specific for player it should been written in player class"
"This function is more specific for player it should been written in player class"
"This function is more specific for player it should been written in player class (code smell) large class"
"this is dead code not used (code smells)"
"This kind of jump function doesn't work as it completes cycle very fastly,\
and player will see the change in dimensions of block"
"too many invalid name"
"fire balls are not released from donkey"
"fire balls are not coming down through some ladders "
"player  is getting out before he touches fireball"
"player can cross boundaries on top level"
"game is not completed when player touches queen"
"Due to improper hard coding player can cross boundaries on top floor"
"too many if conditions"
"constant must be capitalized"
"non-descriptive variables"
"boundaries are hard coded when we change any variable we should take care of all conditions that uses this varible,\
code smells->short gun surgery"
"this line is too large (PEP-8 ,standards)"
"elseif must be used instead of only if"
"unnecessary, no need to print on terminal"
"temporary variables code smells (temporary field)"
"some of points generated will be out of screen(cross boundary)"
"player cannot jump"
"coins disappear on moving the player, player cannot collect the coins."
"No donkey or queen is implemented"
"scores and lives are not shown. Lives are not implemented."
"No private variables in the class."
"No fireballs are shown in the game."
"class has no init function, class has no doc string."
"lazy class: class does too little work"
"lazy class: class does too little work"
"lazy class : class does too little work"
"no docstring for the class."
"no docstring for the class"
"wild card import - bad practice"
"unused import random"
"unused import time"
"unused import image"
"unnecessary use of paranthesis in all if and elif statements"
"initialized outside init function"
"class has no method apart for init . It does too little work."
"unnecessary paranthesis after all if and elif statements"
"method has too many arguments."
"lazy class: class does too little work"
"Too few public methods: class does too little work"
"broken ladders not implemented."
"jump not implemented"
"game only works when the key is pressed , timer should have been implemented\
"
"motion of fireballs is not random, they just cover the whole platform and drop from the side of the platform. fireballs never come down a ladder, motion should have been random"
"The lower part of the ladder gets disappeared after colliding with the fireball.  "
"player can not fall from the platform."
"There is no way to reach the queen."
"line too long. unnecessary comment."
"argument GameSetup, thebd, gob is not used in the function"
"bad indentation."
"arguments GameSetup, thebd and gob not used in the function."
"arguments GameSetup, thebd and gob not used in the function."
"method could have been a function because no self is used here."
"method could have been a function because no self is used here."
"method could have been a function because no self is used here."
"the arguments GameSetup, thebd and gob not used in the function"
"method could have been a function because no self is used here."
"unused import sys, os and time."
"functions without docstring are present, docstrings should have been used or atleast comments should have been used above functions to clarify what the function does."
"lazy class: class does very little work."
"proper spacing is not used throughout the module."
"line too long, lines should not be longer than 80 characters."
"line too long"
"line too long"
"line too long"
"line too long"
"line too long "
"line too long"
"line too long"
"line too long"
"line too long"
"line too long"
"line too long"
"line too long "
"class too long, should have been split."
"naming variables, functions and classes does not follow PEP-8 standards."
"method should have self as the first argument this used instead"
"statements do not have any effect"
"statement do not have any effect"
"function is very long "
"method should have self as first argument, this used instead."
"method should have self as first argument, this used instead."
"dead code, should have been removed"
"unused wild card import."
"method should have self as first argument, this used instead."
"line too long."
"method should have self as first argument, this used instead."
"method should have self as first argument, this used instead"
"method should have self as first argument, this used instead"
"method should have self as first argument, this used instead"
"line too long."
"line too long"
"class has no init method, variables are initialized without init, bad practice"
"class is very short and it has no methods."
"class is too short, does not have init, variables are initialized without init and class has no methods"
"class is too short, does not have init, variables are initialized without init and class has no methods"
"class is too short, does not have init, variables are initialized without init and class has no methods"
"class is too short, does not have init, variables are initialized without init and class has no methods"
"class is too short, does not have init, variables are initialized without init and class has no methods"
"constants could have been declared in a separate module"
"line too long"
"line too long"
"line too long"
"wildcard import config bad practice."
"for each method self should be the first argument, this used instead."
"import not used."
"syntax error, code will not proceed further."
"line too long"
"line too long"
"line too long"
"line too long"
"missing module docstring, at least comment should have been there to specify what a function does."
"wild-card import used, bad practice."
"function without docstring "
"should have been inherited from person class"
"should have been inherited from person class"
"in each method self should have been first argument, this used instead."
"sorry, my mistake..."
"sorry, my mistake ... removed all those comments.."
"wildcard import, not used completely, bad practice."
"wildcard  import, not recommended."
"yeah, but you will stop in the midway where the ladder is actually broken and i think this is correct because you can't cross platforms using broken ladders. \
This even happens in the original game.."
"Nice point, I also found that bug before submitting the assignment but was unable to debug that.\
But later I fixed it."
"nice observation, I fixed that bug before getting evaluated though."
"@kaushik: I think it is perfectly fine, can you specify on which instance did jump not work."
"@swapnil: I don't think it is a bug, the player is supposed to fall of the platform."
"@kaushik: quit is supposed to work whenever you press 'q' and it is working indeed"
"conditional complexity."
"j does work, please recheck."
"module name not descriptive (module for randomising position of coins)"
"module name not descriptive (module for randomising the gamelayout)"
"player doesn't die on collision with the donkey and player gets duplicated on passing donkey."
"randomisation of donkey's position is limited to one side of the floor where it initially starts."
"list name not descriptive hence its use not clear"
"fireballs not implemented hence lives variable is never decremented making this variable declaration unnecessary and player always wins"
"encapsulation implemented through private variable declarations"
"declare all global variables used in a module in one place."
"redundant code, make separate function for reading input directly from keyboard (following 3 lines)"
"use comments for describing purpose of loops."
"variable name not descriptive "
"variable names not descriptive"
"bad spaces"
"multiple imports in the same line decreases code readability (PEP-8)"
"each class/function must contain a doc-string (PEP - 8)"
"comments should be mentioned for better understanding of code."
"bad spaces"
"variable names not descriptive."
"variable declarations should be private in classes (for encapsulation)"
"wildcard imports should be avoided (PEP-8)"
"variable declarations should be private (for encapsulation)"
"Positive: doc-strings included for class"
"no doc-string included for class"
"variables of class should be private (for encapsulation)"
"Old-style class defined. "
" Class has no __init__ method"
"Instance of 'Player' has no 'collectCollision()' member (should be collectCoin() )"
"Arguments number differs from overridden method "
"Missing module doc-string"
"Too many branches/statements."
"Bad indentation in many places."
"Unnecessary parenthesis after 'if' keyword "
"Missing module docstring (missing-docstring)"
"Redefining name 'l' from outer scope (line 3) (redefined-outer-name) "
"missing module doc-string"
"missing module doc-string"
"Old-style class defined."
"Too many branches (13/12)"
"Attribute 'bg' defined outside __init__ "
"Unused variable 'state' (unused-variable)"
"Use of too many branches (35/12) "
"Too few public methods (1/2) (PEP-8)"
"Unused import sys"
"Use raise ErrorClass(args) instead of raise ErrorClass, args. (old-raise-syntax) (PEP-8)"
" Old-style class defined."
"Unused argument 'di'"
"Redefining name 'p' from outer scope (line 306)"
"unused variables 'd_x', 'd_y'"
"Too few public methods (1/2)"
" Class has no __init__ method"
"Missing module doc-string"
"Redefining name 'l' from outer scope (line 5)"
"Too few public methods (1/2) (PEP-8)"
"Instance of 'Common' has no 'pos_x' member"
"Instance of 'Common' has no 'pos_y' member"
"Old-style class defined."
"Class has no __init__ method"
"Redefining name 'p' from outer scope (line 162)"
"Redefining name 'i' from outer scope (line 63)"
"Redefining name 'directory' from outer scope (line 44)"
"Old-style class defined."
"Class has no __init__ method"
"'p','q','i' have been redefined from outer scope (lines 7,11,16)"
"no class doc-string mentioned"
"variable declarations in classes should be private (encapsulation)"
"Unused import rgb"
"Too few public methods (1/2) (PEP-8)"
"wildcard import should be avoided (PEP-8)"
"Old-style class defined."
"Unused argument 'max_ladders'"
"Unused variable 'prev'"
"Attribute 'princess' defined outside __init__"
"Attribute 'initialLadder' defined outside __init__"
"When Player is at the bottom of stairs leading upto the princess,on collision with donkey, player doesnt get killed."
"Also, at times on collision with donkey, Player restarts from initial position losing a life but 'P' symbol remains in that last position.(=> 2 Players exist in the new level) "
"Multi-Threading not implemented. The enemies move only when player moves."
"bug : player is able to go down a broken ladder"
"Check this link out - \
http://pylint-messages.wikidot.com/messages:c1001"
"Jump motions can be automated."
"Too long a code"
"Code Smell: Contrived complexity. No duplication should exist for each movement"
"Layout can be randomised."
"Negative:Function name does not reflect the use of the functions.(PEP8 variable naming standards)"
"Negative:Variable names are not descriptive. Don't give any information about the use of the variable. (PEP8 variable naming standards)"
"Fireballs have not been implemented."
"Bad white spaces. (PEP-8)"
"Too long a line"
"Function names are not descriptive. Don't give any information about the use of the function. (PEP8 variable naming standards)"
"Debug statement must be removed\
"
"Too long a line"
"Too long a line"
"Fireballs not working"
"Bad whitespaces"
"Module level import should be at top of file (PEP-8)"
"Module level import should be at top of file (PEP-8)"
"Module level import should be at top of file (PEP-8)"
"No levels implemented(in terms of increasing difficulty)"
"Negative: Constants should be capitalized. (PEP 8)"
"Maintain consistency while naming different functions (Either underscore or mixed case) PEP-8 Standards"
"Long Parameter List (Code Smell)"
"Module name not descriptive (module for randomising 20 coins)"
"Encapsulation (implemented through private variable declarations)"
"Seems like duplicated code(code smell)"
"Too long line"
"Dead code should be removed(code smells)"
"Dead code(code smell)"
"92-95:Dead code must be removed(code smell)"
"Not related to the given problem statement"
"Dead code must be removed(Code Smell)"
"Positive: Well Commented code "
"missing doc string"
"blank line at end of file"
"Line too long(PEP-8 standards)"
" Missing class doc-string "
" Missing method doc-string"
" Missing function doc-string"
"Too few public methods (0/2)"
" Trailing whitespaces"
"Missing method doc-string "
"Attribute 'y' defined outside __init__"
"Attribute 'x' defined outside __init__ "
"Dead code should be removed"
"Debug statements should be removed"
"Access to a protected member _x of a client class"
" Unused import thread "
" Unused import threading"
" Too few public methods (1/2)"
" Unused import random"
"Line too long (PEP-8)"
" Method could be a function(no self-use)"
"function already defined in line 1"
"Missing function doc-string "
" Missing function doc-string"
"Old-style class defined"
" Unused import time"
" Unused import random"
"Old-style class defined."
"Too few public methods (0/2)"
" Too few public methods (0/2) "
" Too few public methods (0/2)"
"Too few public methods (1/2)"
"Function not indented properly .\
Please indent .\
"
"Again , unexpected indentation .\
\
Indent properly"
"Again , unexpected indentation .\
\
Indent properly. PS: I am not sure whether this should be counted again."
"Code not indented properly .\
Please indent ."
"if-block not indented properly .\
Please indent . Otherwise code will not run."
"Major indention errors in this segment of code .\
Please indent."
"Indentation of this line not correct . \
Please correct indentation."
"if block not properly indented . \
Please indent code properly."
"Class has no __init__ \
Please add __init__() method"
"Indentation must be 4 spaces, here 8 spaces are used.\
Please correct indendation."
"import \""time\"" not used \
Please remove unnecessary import "
"too many local variables.\
May be defined as a dict or list.\
Please improve ."
"non-descriptive variables names like \""h\ "
"Wildcard imports are discourages \
Please look into what modules are used and be more specific "
"Unused import pygame ."
"duplicate code from donkey.py\
please reduce by defining a method"
"unused import sys\
please use sys for remove import statement\
\
bad style to write import sys, pygame.mixer\
instead please write :\
import sys\
import pygame.mixer\
"
"non-descriptive variable names 'a' , 'b', 'd' , 'n' , etc . \
Please provide descriptive names ."
"Avoid global variables\
Too many redefinitions of global variables , creates confusion,\
please refactor to use less of them ,\
pass as function parameters . "
"PEP-8 : Global variables  should be all CAPS\
\
\""om\"" not an appropriate variable name . It is non-descriptive and unnecessary  . Not funny . \
Please refactor code to avoid global variables.\
And provide more descriptive names .\
\
"
"please divide code into classes \
but good code otherwise ( pylint score = 8.7 ) !! "
"Varun , comment on music not appropriate here !\
"
"Re-imported sys \
"
"Class does not have public methods ? \
"
"reimported sys ,\
previous import line 9\
"
"import tty unused"
"reimported sys again ,\
why ?\
previous import line 9"
"Redefining name 'thebd' from outer scope . \
Discouraged ."
"Redefining name 'GameSetup' from outer scope\
Redefining name 'thebd' from outer scope. Discouraged.\
PEP-8 : Global variables should be named in  CAPS"
"Redefining name 'thebd' from outer scope. \
Redefining name 'plcr' from outer scope. Discouraged"
"'attrDict' has no 'x' member or 'y'"
"attrDict' has no 'x' member or 'y' member"
"attrDict' has no 'x' member or 'y' member"
"Jump not implemented, J does nothing"
"Redefining 'msg' from outer scope"
"Redefining 'msg' from outer scope"
"Reset game not implemeted"
"@ vashnavi\
This class only defines global colours , does not require init as it is not instantiates"
"Global variables should be named in all CAPS\
PEP-8 convention"
"This is Pacman not Donkey Kong\
Why did you make Pacman instead of DonkeyKong ?"
"Exactly one space required before assignment . Extra white space"
"Exactly one space required before assignment"
"Exactly one space required before assignment"
"Exactly one space required before assignment"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"PEP-8 convention says one space required before =="
"PEP-8 convention says one space required before =="
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"not related to Pacman , let alone DonkeyKong which was the requirment"
"Unnecessary parentheses after 'while' keyword . \
Instead can write \
'''\
while i < length:\
'''"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Exactly one space required before assignment . PEP-8 convention"
"Unnecessary parentheses after 'while' keyword ."
"Exactly one space required before assignment . PEP-8 convention"
"Not relevant to the game . Why have you done this ?\
Not used anywhere. Potential security threat. (calls 'os' module )\
Extremly toxic , please remove"
"This is not relevant for the game (Pacman as mode by you , not even DonkeyKong) . Potential security threat to any person who uses this game :/ .\
unnecessary block of code . Not used anywhere. Potential security threat. (calls 'os' module )"
"Exactly one space required before assignment . PEP-8 convention"
"unnecessary block of code . Not used anywhere. Potential security threat. (calls 'os' module )"
"Unnecessary white space at the end . Please trim the bottom ."
"code smell: irrelevant code function seems to execute things completely irrelevant to the game.\
"
"Bug: Player gets stuck at the top of the ladders in the sides.\
"
"code smell: method too large. Could have a separate method for ladder climbing.\
"
"score update is not according to specification. E.g: coins give +1(not +5) and dying does not affect  score."
"Positive: Good use of Inheritance."
"Code smell: Code should be encapsulated in a method, which should be called only if this is the main file."
"Lives not implemented.\
"
"levels not implemented."
"fireball does not randomly change direction on falling from gap."
"Bug: import doesn't work because filenames have been changed."
"Bug: Player doesn't die after contact with donkey."
"Code duplication. Should have called parent class's init() here."
"Contrived complexity: Should have used a simpler code or at least have a comment on what this line does."
"code smell: lines 82 and 83 are too long."
"Contrived complexity: Very complex code to dynamically create a list of platforms. Could have directly initialized using literals."
"None of the classes are in CamelCase.\
"
"Positive: Encapsulation well implemented by returning a dictionary of attributes instead of using attributes directly. \
But, it would have been better if attributes were declared as private by convention(using __)."
"Doesn't use inherited class's update."
"Code smell: too short literals: Variable names a,b,c are confusing and are used again and again in completely different contexts."
"fireballs are destroyed at bottom right corner instead of player start poosition (bottom left corner) as specified in the requirements."
"method name doesn't clarify what method does. Also no docstring provided."
"Method too large and has too many branches. Can be broken down into smaller methods."
"Method too long. Can be broken down into several methods."
"Doesn't check if the file is called directly.  "
"function should be included in a class."
"Indentation between two levels must be consistent. (PEP-8 standards)"
"Bug: When donkey touches ladder random 'O' characters appear around it."
"Unused imports from random. Should use import random if only a few methods from it are to be used."
"Bug: When player jumps from ladder, the character at ladder('H') disappears or gets copied to another location."
"Method name has multiple words not separated by underscore.(PEP-8 standards violation). Should have used check_not_coin"
"Methods which are used only by methods of same class should have been declared as private."
"Bug: Donkey doesn't move unless input is given."
"@susobhan ghosh: Player dies when fireball falls on him in both cases. (Falling from gap and falling from ladder.\
Also couldn't find the bug where player dies before touching fireball."
"Bug: pressing 'W' at any location creates an 'H' character at that location."
"Bug: Pressing 'A' or 'D' when on ladder makes player disappear."
"import should be done in separate lines.(PEP-8 standards)."
"Use of literals whose significance is not clear. E.g . why 14 and 11?? why 6??"
"Encapsulation is very well implemented in the above code segment."
"Binary Operators should be surrounded with spaces on either side.(PEP-8 standards)."
"All public methods should have docstring. (PEP-8 standards)"
"Code smell: Feature envy. Uses too many methods of 'lay' class."
"c(PEP-8 standards)."
"Class name should be declared in CamelCase.(PEP-8 standards)."
"Wildcard imports should be avoided."
"Code smell: lazy method. Why not call drawPerson directly?"
"Why is there a private method to access _direction? It can be accessed within the class directly?"
"Could have used a named constant instead of repetitive list."
"Also, all of the derived classes have their own update method which do not call this method."
"Coins sometimes overlap each other. Should have been checked for."
"Should leave lines before declaring new class.(PEP-8 standards)."
"Function not declared within any class.\
Code smell: lazy function. It basically just returns an instance of font.render()."
"variables initialized outside init(); init() not declared."
"code smell:lazy class"
"Named constants should be in capital letters."
"unnecessary indent."
"game class declared twice."
"this code should have been in checkwall method which was specified in the requirements."
"Code smell: repetitive code. All loops do similar things. Code should have been modularised into a method and then called repeatedly."
"improper indent."
"variable name should be clear."
"improper indent"
"Code no longer required should be deleted instead of commenting it."
"All three files contain almost the same code."
"No inheritance is used."
"Code smell: variable names too short."
"only used time module is in Player.py, but is present in rest all modules too. no need to do that."
"import os not used.\
\""OS\"" module is only required in the Donkey_kong.py .No need of it in any other modules."
"Hard coded the Board, not a good way to do so."
"good use of coloration, to show different things in the game different. make the game look intresting"
"Taken care of encapsulation everywhere, good approach."
"getPosition() function well maintained with the Encapsulation."
"Inheritance, Encapsulation and Modularity applied well in the whole program."
"Fireball class and function absent. (i.e No fireballs)"
"start position of player and donkey is hard-coded, it should also be a random position in the specified floors."
"The Player, Donkey class inherit from the this(Person) class.\
Inheritance well maintained.\
unussed import os."
"movement of donkey should have been totally independent from that of the the Player.\
It should not be like if player moves or any key pressed then only donkey moves."
"  BUG!!  whenever the player is on ladder, if the side keys are pressed the player disappears and on the other hand then we move down the player that step of ladder is lost,\
or if it(player) moves up there is no problem in the program."
"when space pressed the donkey moves at the same instant and the player takes time to jump. both doesn't sync."
"taken care of getPosition() of the Player :). with Encapsulation."
"Modularity is missing."
"Hard-coding the the Board is not a good way."
"no need to write import sys in all the classes, just write only where it is to be used."
"Encapsulation is present, a good way to program."
"All the necessary functions like (checkWall(), checkPosition(), collectCoins(),..etc) present and maintained very well."
"All the necessary functions of the program like checkWall(), getPosition(), CollectCoin(), .. etc are written well with encapsulation and maintained\
very wisely for Polymorphism."
"Inheritance is well maintained throughout the program."
"good to see that exceptions is also handled :)"
"using private and public variables is good approach."
"interesting game design, as the level rises the difficulty also rises (as number of donkey's increases).\
good way to keep the game interesting. "
"should have been a different module. (as mentioned above Modularity missing).\
as writing different classes into different modules makes the program to look good and easy to understand and also easy to review/edit."
"the player should have fallen down when moved far on the edge of a floor,\
might have made the game bit interesting."
"nothing different in different levels, as the game remains the same, just the level number changes ;)\
game might get to infinite levels, as no restriction on number of levels is given here in the program."
"after the above BUG appears, if we try to move the move the player on the floor, it leaves a ladder step (\""H\"") behind it till it reaches to the end of the floor."
"Exception handling is missing, as if the user inputs some other keys on keyboard apart from 'a','w'.'s'.'d' or 'space' it should give user a message as to \
press only the recommended keys please."
"total coins present are 25 but the condition handles only 20 coins."
"checkcoin and checknotcoin could have been dealt with only one function."
"good approach to handle that the coin and the donkey do not placed at the same point.\
\
and placing the coins randomly on the floor available only."
"good way to stop the overlapping of more than one coins on each other."
"ball used nowhere ;)"
"encapsulation well maintained for position of the donkey and the direction of movement of the donkey.\
Invalid method name \""getDIR\"" (invalid-name). use lowercase and underscore to merge two names. reference PEP-8."
"printP, printH,printH,.. etc can be handled with only one function as the character is too passed in the function."
"polymerisation is used very well :)\
but flag should be a private object, as its a good habit to follow :)\
"
"printD, printH, printA are doing the same thing, no need to make different functions.\
invalid argumant names x,y,c.\
invalid-variables name x,y."
"ladders and broken ladders are present as said per the requirement according to the \
problem specified."
"both the left and right check should have been kept at same place for convenient understanding."
"encapsulation of all the variables used, good approach. :)\
"
"self.__prev    not used anywhere in the program."
"syntax error"
"no indentation at all throughout this piece of code."
"prev is used here  then why to mention it in Player."
"making program look good, by making different objects of different color."
"never used in the function."
"never used in this module.\
unused import time."
"not a good way to check positions of Donkey and Player \
for checking their coincidence."
"first of all the code is not working as there are so many syntax errors in the program file. (indentation missing)"
"uneven spacing between different def functions. keep same space between all the functions defined. :) "
"Found indentation with tabs instead of spaces (mixed-indentation). throughout the code.\
exactly one white-space was been required."
" Unnecessary parens after 'while' keyword (superfluous-parens). "
"bad-indentation."
"unnecessary parens after 'if' keyword.\
using here like c or c++.\
the if works without the parens too in python."
"trailing whitespace, unnecessary was that."
"line too long (160/80). PEP-8 not followed.\
It is a good idea to keep each line within a maximum length to keep it from wrapping past the edge of an editing window. This improves readability and tempers other developers' irritability! It is also recommended in PEP 8.\
bad-whitespaces."
"final newline missing. ;)"
"Too many branches (15/12) (too-many-branches)."
"Too many statements (75/50) (too-many-statements)"
"Unused variable 'move' (unused-variable)."
"Module not upto PEP-8 directions.\
at the same time there is no error in the following module code. as found by Pylint. :)"
"Global Evaluation of the code on Pylint is -12.86/10."
"unused import. as time has been imported but hadn't been used in the module."
"too many invalid-variable names as per the PEP-8 directions."
"unused import os "
"unused import time."
"invalid method-names as considered by PEP-8.\
lowercase with words separated by underscores as necessary to improve readability. \
missing method docstring in both getX and getY functions."
"Too many branches as per the PEP-8 directions."
"line too long 126/80. and same for all the below elif condition statements too."
"unnecessary use of parens. it is python not c or c++."
"Mixed-Indentation. in the whole module "
"whitespace required after each comma in (self,x,y):\
bad-whitespace"
"Exactly one space required around keyword argument assignment\
			if(self.__ladder==1):"
"exactly one space is required after the comma in all the (x,y,z) type statements."
"Trailing whitespace (trailing-whitespace).\
unnecessary leaving of whitespaces."
"unused argument ''d'. in the whole defined function."
"ended well with 0 errors in the module, but 107 warnings which are mainly due to ignorance of the PEP-8 directions.\
Global evaluation rated -21.65/10.\
"
"too many statements in every 'elif' conditions."
"mixed-Indentatiion,\
bad-whitespace. \
exactly one space required after every comma as per the PEP-8."
"Unnecessary parens after 'if' keyword (superfluous-parens).\
in python if condition works without parens too."
"defining the class in old style."
"trailing whitesace."
"module ended with 46 warnings and 0 errors. on pylint test.\
Global evaluation :  rating -28.26/10"
"Line too long (411/80) (line-too-long)"
"too many-branches.\
and too many statements too."
" __init__ method from base class 'Person' is not called (super-init-not-called)"
"Arguments number differs from overridden method (arguments-differ)"
"mixed-indentation, bad-whitespace throughout the program."
"too many branches."
"function ended well with 193 warnings on pylint, and 0 errors.\
Global evaluation : rating = -18.67/10  of this module."
"too many statements."
"mixed-indentation, bad-whitespace used throughout the module, \
and the directions of PEP-8 is not taken into consideration throughout the module."
"all the hard-coded lines in the module are (line too long)"
"Unnecessary parens after 'if' or 'elif' keyword (superfluous-parens).\
As in python it works without parens."
"Exactly one space required after comma like here in this function.\
	def checkLEFT(self,x,y):\
                   ^ (bad-whitespace)"
"Invalid Attribute name \""_a\""."
"Old-style defining of the class."
"Invalid method name \""checkH\"" (invalid-name)"
"Too-many branches.(21/12) as in PEP-8, 12 maximum branches are said good."
"Module ended successfully with 211 warnings with Pylint and 0 errors.\
Global evaluation:   rating=   -22.36/10.     "
"name of the function according to the PEP-8 directions. good work."
"when taking getchar() the char is already converted to lowercase. \
so no need to check handle this error."
"too many if-else conditions .\
\
i.e too many branches."
"First things first.\
Negetive: code does not runs on default run.\
\
**If program requires some modules to install, as such they are not default.\
It should be mentioned as comment or something else."
"ImportError: No module named termcolor. \
this is the error when the program is executed\
Termcolor is not imported, but used colored."
"Positive: variables are named with uppercase letters. as per PEP-8 standards."
"found mixed indentations and bad-white-space, throughout the code. "
"Modularity is missing from the program, instead of this it could have been done that all the classes are made different modules and then imported to the main module."
"Invalid method name as per the PEP-8 standards. the method name should be containing lowercase and a underscore between connecting words.\
same applied to all the methods defined throughout the program."
"Positive: hadn't hard-coded the game board."
"Negetive: Encapsulation is missing in the program.\
no-private variables."
"the position of the player should have been maintained here.  (Code Smell)\
"
"NOT-STANDARD: the position variables should be private variables."
"j never used in this function. (unused-variable)"
"too-many branches. generally as per PEP-standards its 12 but here its used 22."
"Positive: all the required functions are implemented separately."
"attributes defined outside init."
"Positive: well use of some of the PEP-8 standards. \
Global evaluation: rating = -6.90/10.     that's really a good python program."
"Negetive: NameError: name 'per3' is not defined. ->code smell"
"Negetive: printing the board again and again on every move of the player without clearing the screen.\
       making the game look bad for the player."
"the constants should be declared in uppercases as per the PEP-8 standards."
"no levels implemented."
"Positive: encapsulation is maintained, "
"method names should be made as per the PEP-8 standards."
"Positive: Inheritance is well maintained."
"players position variables is not present. i.e Encapsulation is missing here."
"Negetive: Modularity is not maintained."
"BUG!!  when the played colloids with Fireball, game exits giving error that \""name-error\"".\
"
"Will give syntax error, improper indentation."
"only one fireball implemented which disappears on lowest floor."
"Negetive: Donkey is not moving throughout the floor."
"BUG!! Player stays in air as it seems on the edge of the mid floors, should have taken care of the end points of the floor."
"should have cleared the screen after every move, as the current scenario makes the game cozy and unintresting on the screen,\
\
As the user can see two players, one in current grid one in previous. ;)"
"Negetive: during the movement of the Fireball through the stairs, it moves two step down on each move,\
which makes the fireball movement weired."
"Undefined variable 'per3' (undefined-variable), \
used throughout the module."
"WEIRED!!\
Player can win the game, but only in some specific conditions. :)"
"the PEP-8 standard for writing the program is missing throughout the program."
"Negetive: no use of encapsulation. the position variables should have been private.\
"
"Negetive: not a good way to use random function.\
range or xrange should have been used."
"Redefining  name Person from outer scope.  -> (code smell)"
"Positive: Exceptions are handled very well."
"BUG!!   If the fireball and the player both are on the same stairs. player never dies.\
in one step the fireball moves directly from top to bottom. "
"BUG!!  the player also climbs up where there is no stairs at he place of broken stairs."
"first of all lay is not a class. its the screen or you can say the game board."
"As mentioned in comment it is taken from Github. So, no need to verify it. ;)"
"No modularity in code"
"Ladder not implemented"
"DonkeyKong not implemented"
"Fire balls not implemented"
"Unnecessary function. Used only once and acts as hardcode"
"improper indent"
"No polymorphism"
"It is easier for users to make new levels in this format.WYSIWYG"
"This class doesn't require inheritance. Inheritance has been used where it is required(eg. 'Player' class)"
"This code is very much alive!"
"This is python3. print requires paranthesis"
"Levels not implemented"
"It's not a bug, it's a feature. Level1 is a tutorial level only available if the user sets it in the level list"
"No proper whitespaces"
"binding is not a recommended programming practice(unless it is a low-level hardware implementation)"
"improper indentation"
"Too many loops doing repetitive tasks. Function would be better"
"Improper indent"
"improper indent"
"Too many loops doing repetitive tasks. Use functions instead"
"improper indent"
"Use more descriptive variables like k_pressed"
"import * is not recommended by PEP-8"
"DO:\
 import x\
 import y\
INSTEAD OF\
 import x, y\
"
"Use white space after ,  and : \
Like function(a, b, c) instead of function(a,b,c)"
"No consistency in usage of whitespaces"
"Use CapWords for naming classes"
"Program flow would be more clear if return 0 was put in an else statement"
"Useless function. Parent's init called by default"
"import * is not recommended"
"Nice usage of hanging indent"
"Improper usage of whitespace characters"
"Constant names must be in all caps"
"Improper usage of whitespace character"
"Need not re-render constant strings inside the loop"
"Too many non-descriptive variables"
"Use spaces to improve readability"
"No encapsulation"
"Improper naming of variable"
"No hulk.png included, so game crashes"
"Borders allow the player to pass through them"
"Gravity and jump are not implemented.Player can move in all directions"
"Ladders not implemented"
"No readme to specify which of the python scripts to run"
"No levels/princess\
"
"No Donkey/fireballs"
"No coins/score\
"
"Cannot quit game using 'q' or 'ESC' keys"
"Jump is bugged.\
Jumping on broken ladder and spamming the up and down buttons sometimes causes the player to jump over to the next floor"
"Dying on ladder causes the player to freeze after respawn"
"Should have added the attribute colour and method draw which uses the colour instead of draw methods in the child classes with only difference between them being the color"
"Not a good practice to directly change attributes of a class.Use methods to add score and kill player instead"
"Remove dead code"
"Lists are not proper constants(they are mutable and empty lists will change) and should be declared in the module actually using them as they cannot be shared between different modules"
"Use a function to generate random coins. This code is a duplicate and has no comment describing what it does"
"Instead of hard coding 300 without explaining why, make a constant(variable) with appropriate name"
"config.py contains constants which are used throughout  the module"
"This class is only used for storing variables(bad practice) and should not inherit from person class"
"Binding is not a good practice as classes must be isolated from others"
"Description of collision is ambiguous"
"Bad practice to store variables in classes.Use text files instead and load the values"
"??\
The variables below are global constants"
"But they are of the same type and all inherit from Element. It is better to place classes inheriting from same class in single module"
"Coin and Trophy are useless and used only while checking the type of an instance. Instead a variable storing the type must be used"
"Unused file.\
Must be deleted"
"Not sure whether this line is a comment or dead code"
"dead code"
"dead code"
"Should have made a method which handles the AI behavior"
"No modularity,"
"No modularity"
"Donkey/fireball not implemented"
"Ladders not implemented"
"Princess/level/objective not implemented"
"class names must be CapWords "
"dead code:Never used since init has already passed"
"Why have init if it does nothing in it?"
"Improper indent"
"improper indent"
"Instead of reloading the images and transforming them,load them once and reuse the images"
"No comments, only dead code"
"plyr1.png is always loaded execpt at the start"
"Can jump even if touching walls in sides or with head"
"Score not reduced(penalty of collision with fireball) if last life is lost"
"Use spaces according to pep-8 specifications"
"no white spaces after ',' almost everywhere in this line and other lines also (lines-6,7,8,9 etc--)"
"missing white space around '-' operator"
"import not at top of file"
"there must be two blank lines but none is there"
"missing white spaces around '=' operator in lines--8,9,10,11etc--"
"indentation has mixed whitespaces and tabs"
"expected indent but not present"
"trailing white space"
"the line is too long pep8 standards"
"too many blank lines"
"no new line at EOF"
"controls should have been w,s,a,d instead of arrows"
"control should have been space"
"hard coded for climbing up this ladder"
"using this too many times should have been in a  method (code smell)"
"no levels for this game"
"checking as hard code should have been a collision check"
"should have checked as a collision"
"jump not implemented"
"just declared but not implemented"
"everything is same but coins change their positions for different tries of the game"
"there is no score or retry or quit functionalities"
"the coins are not removed but just the screen is painted black by the player as it moves"
"no donkeys and fireballs and princess"
"no constraints such that the player does not go beyond the length of floor"
"player cannot go to some far on broken ladders"
"no score count or extra lives"
"not implemented as modules"
"no modules used"
"no levels implemented"
"hard coded instead of collisions"
"no white space after operator ',' anywhere in the code -(pep8 standards)"
"no dragon and fireballs"
"no princess and her rescue"
"no coins and points"
"boundaries are not taken properly so player does not  move properly .they are\
not taken  as uppermost point of a floor wall."
"pep8 standards are not followed strictly"
"no scoring then why this method"
"no coins and no getting them"
"for a new level new file has to be created"
"did not close the file that is opened for use"
"there are just ladders but no climbing them up or down"
"polymorphism is not found"
"not used anywhere other than this declaration"
"these types of declaring and using them properly (code smells)"
"inheritance is not used anywhere"
"so a part of player lies inside the walls of floor"
"hard coded for climbing up this ladder (code smells)"
"coins are random so do not state the above as an example :) "
"many global declarations are there"
"some variables and methods are declared and not used"
"no it does not happen so :)"
"would have been better if display sizes are in proportion to actual screen size"
"polymorphism not used"
"cannot climb a ladder up or down"
"jump  constraints are not proper.can jump two times high sometimes"
"the player sails in air if jump and right/left moves are pressed simultaneously"
"pep-8 standards are followed strictly"
"no quit or continue at the end of game."
"some classes that are asked as requirements are not implemented"
"did not use the boundaries well. so some part of player becomes invisible at boundaries"
"no score or lives and sometimes coins is at the very edge of boundary so that the player cannot take it by any  means"
"coins are generated randomly but did not check out for boundaries so sometimes it is impossible to take a coin"
"too many for loops for the same purpose(code smells) for coin generation"
"hard coded for different ranges"
"modularity is not used and written as a single code file"
"no dragons and fireballs and no princess"
"no it is very easy to climb the ladder up ordown :)"
"pep-8 standards not followed strictly '"
"levels not implemented"
"excessive hard coding"
"fireballs at does not detect player while moving on ladders"
"polymorphism not used"
"some classes are not named or build  according to guidelines of the assignment"
"does not take care of at starting point of player.it is acting as a safe zone for the player.here fireballs does not effect the player"
"ladders are not animated properly in size proportions"
"would have been better if a method was used instead of hard code"
"because the game is based on frames . sometimes if you move the player quickly fire balls does not effect him."
"when the player is moving sometimes he dies lately when he touches the dragon"
"when pressed q to quit the game is displayed again before it quits"
"because the climbing ladder to next floor are hard coded when pressed more buttons at the ladder the player lands in the floor and is not effected by fireballs etc"
"similarly for above he cannot climb a ladder till he jumps again to get to the top of floor"
"when the player lands on a fireball after his jump is finished he is effected by them"
"would have been better if in proportion to actual screen size"
"total lives are gone if the player touches the donkey whereas only one life must be taken"
"there are no broken ladders"
"does not terminate properly , so player is safe at left bottom corner in the game"
"did not use some of them better to take them from here\
"
"too many conditional loops"
"due to improper checking the player may go out of boundaries in the princess box"
"sometimes player can move from floor to floor due to improper check of conditions"
"sometimes the player can get struck one block size below the floors and can or cannot take coins\
may or may not die due to fireballs."
"he can get out of the above mentioned state if he jumps and clmbs  a ladder"
"some ladders are not installed with care hence looks like hanging "
"player cannot climb broken ladders to the point at which they are broken"
"the player can climb up the top most ladder but cannot climb it down"
"PEP-8\
Constants should be all caps like GRAVITY"
"PEP-8\
Constants should be all caps"
"Code Smell\
Dead code should be removed and only useful comments should be posted"
"Code smell \
call to super class should be implicit in case of single import and not explicit"
"Code Smell\
Since the following line also uses the same function avoid code duplication by making a seperate function"
"PEP-8\
Multiple Imports should be on different lines like \
import sys\
import pygame"
"PEP-8\
Improper spacing in assignment \
assignment should be of format\
a = 4"
"PEP-8\
assignment spacing is not proper"
"Code Smell\
return statement seperated from main code by dead code hard to read code"
"PEP-8 \
constant definition is of format\
RED = (255, 0, 0)\
GREEN = (0, 255, 0)\
etc"
"PEP-8\
assignment statement spacing is not proper\
RED = (255, 0, 0)"
"PEP-8\
function naming should be lowercase seperated by _"
"Code Smell\
Conditional complexity\
too many if else statement\
and value of right wall is hardcoded  "
"Code Smell\
Position of text is hardcoded and not relative to size of game"
"The game is not is working condition"
"Block comments not according to PEP-8 standards"
"Block comments not according to PEP-8 standards"
"Block comments not according to PEP-8 standards"
"Fireballs come and go randomly, movement not properly handled"
"Moving up the stairs and pressing the up key after that makes the player stuck in mid air"
"Could have made these values static\
It is much better"
"Collision handling with coins is not handled properly"
"Blank line at the end of code, Not according to PEP-8 standards"
"Donkey is not implemented"
"Coins are not implemented properly"
"Player jump is not implemented"
"There no way to rescue the queen"
"Game has no levels"
"Game has no proper functionality"
"Overall Score - 3.75/10"
"Overall Score - 2.86/10"
"Overall Score - 4.17/10"
"Overall Score - 2.86/10"
"Overall Score - 2.00/10"
"Overall Score - 4.44/10"
"Overall score - 3.85/10"
"No space around the operator"
"No space after comma"
"No space after comma"
"No space after operator"
"No space after operator"
"Code Smell, No module docstring\
No class docstring\
Code Smell, No method docstring\
Code Smell, Too few methods\
Code Smell, Too many arguments\
Code Smell, Dead Class"
"Method not used"
"Missing space after operator"
"Block comments should start with '# '"
"Module imports should be written in different lines"
"Too many classes in the same module must be separated across modules"
"Code Smell, No module docstring\
Code Smell, No class docstring\
Code Smell, No method docstring\
Code Smell, Too few methods\
Code Smell, Too many arguments"
"Bug - getPosition() method not implemented\
Bug - checkCollision() method not implemented\
Bug - checkWall() method not implemented\
Bug - collectCoin() method not implemented"
"No whitespace between commas"
"no space after operator"
"Block comments should start with '# '"
"Block comments should start with '# '"
"Dead code lying around, comment provides no extra information"
"Method not used in the code"
"Method not used in the code"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"No space after comma"
"Class declaration must have two spaces above it"
"Method declaration must have one blank line above it"
"should have used classes and modules,each class for an object thus making the code more clear and easily understandable\
\
"
"should have used a function for creating random coins rather than listing all the coins"
"the wall checking can be done by implementing a function moreover the range in which the block moves is too high you could increase the constraint space for unexpected movement of block."
"No levels were implemented"
"no lives were implemented only one life \
"
"there is no restarting of game after the end of the game you could make the game restart\
"
"The score is not shown on the screen it is only seen after the end of the game, you could make the score visible"
"the range for which the coins get collected is high, the coin is collected at times when the player just passes near by the coin."
"all the bombs get out of the screen at a position just few centimetres before  the spanning place of the player, the player can remain at the place and can avoid getting hit by the monster since no monster could reach there, this is the loophole place"
"once the player climbs the ladder, he can go out in air on either sides without falling down, i.e the gravity doesn't hold on either sides of ladder."
"The jump function is not implemented, the player has to go to extremes in order to avoid the master."
"pep-8 rules were not followed."
"should have used variables instead of using numerical values all over, it becomes easy at the time of modifying the code."
"All the bombs follow the same path, you could have made different paths i.e randomized the behaviour of bombs."
"#code_smell: cyclomatic complexity, many for loops, should have used a code which applies for all situations rather than hard coding through if conditions and for loops."
"the point range  where bombs kill the player is too large make a sharp range such that player gets killed at only a particular point. "
"too much of hard code"
"The game is not finished when the player reaches the queen, it gets finished only after all the coins are collected and then reach the queen."
"All the bombs are not going through some place, so player can escape the bombs by staying at that position this is a loop hole."
"#code_smell, This is a kind of code smell since the same code gets repeated a number of times and it may lead to problems in the future."
"#code_smell, excessive use of literals,these should be coded as named constants, to improve readability and to avoid programming errors."
"#code_smell, cyclomatic complexity, too many loops, this can be broken into smaller functions and has the potential for simplification."
"#bug, functionality of the game not implemented due to lack of jump function and loop holes of player positions and the fireballs are not that effective, many missing functionalities."
"#PEP-8, always surround these binary operators with a single space on either side."
"PEP-8, always surround the binary operators with a single space on either side"
"#code_smell, lazy class, the class does too little."
"#code_smell, Lazy class, a class that does too little."
"All the PEP-8 standards not satisfied."
"#functionality, The player has no boundary constraints,  the player can get out of the boundary, and the player doesn't appear or respawn after getting out of the boundary."
"#functionality, fireballs almost follow the same path, i.e behaviour expected, loophole in the game."
"#functionality, very few balls implemented, fireballs are not regenerated, fireballs donot cover the entire region."
"#functionality, ladders are not constant.\
#code_smell, a method which has grown too large, i.e too many if else loops. The method could be broken down into smaller segments.\
"
"#functionality, the game is kind of not dynamic, shot by shot, everything is static when the player stops."
"#functionality, wall constraints, no gravity implemented."
"#functionality, no re spawn, i.e multiple lives are not implemented, multiple levels are also not implemented."
"#code_smell: Excessively short identifiers: the name of a variable should reflect its function unless the function is obvious."
"#pep-8, always surround the binary operator with a space on either sides."
"#pep-8, comments that contradict the code are worse than no comments."
"#pep_8, imports should generally be on separate lines."
"#code_bug: try to use variable names that are self descriptive and distinct."
"#code_bug: unidentified variable, per3, initialize before using the variables."
"#code_bug: hard coding can be avoided."
"#pep-8, surround top level functions and classes with two blank lines."
"#code_smell, cyclomatic complexity, too many loops, has a potential for simplification."
"#pep-8, always surround the binary operators with two spaces."
"#code_smell, freeloader, a class that does too little."
"#pep-8, surround top level functions and classes with two blank lines."
"#code_bug: too many if_else conditions, the could has a potential for simplification."
"#pep-8,very long line, line should not exceed 79 characters."
"#pep-8, more blank lines, has no purpose."
"It would have been better, if classes were implemented."
"too many if conditions, better if it would have been broken into fragments."
"#functionality: no levels  are being implemented."
"#code: no modules are used."
"#functionality: unable to climb a ladder up and down not a good visual experience."
"#code_smell: hard coded for different regions."
"#pep-8, top level functions and classes are supposed to be bounded by blank lines."
"#code_bug: too many if conditions, has a potential for simplification."
"#code_bug: modules not implemented."
"#functionality: the donkey is not there at the same time fireballs, ladders are not present."
"#pep-8, always surround top level functions and classes with blank lines."
"#code_bug: tooo many for loops."
"#code_smell: a class that does too little."
"#pep-8: comments that contradict code are worse than no comments"
"#functionality: no levels are implemented , positions of coins is not clear."
"Global Variables should be avoided as trying to understand their values may be difficult. Try to pass the values as a function argument or set it as an attribute to a class. "
"The words in all functions must be separated by underscores. Also, mixed case naming must either be used in all functions or not used at all to improve consistency. (PEP-8 Standards)"
"Subclasses must either extend or modify aspects of the parent class and not neglect functions/methods of the parent totally. The 'Donkey' subclass only needs the 'mov*' functions but the parent class is including all the functions used by both the 'Player' and 'Donkey' class. "
"The Person class is acting like a god class. Some functions can be shifted to the Player class as only the player is using those functionalities. -> Code Smell"
"Code must be split into modules to make it easier to read. (Requirements of the Assignment and adhering to OOPS)"
"No local variable name or class attribute is attached to literals like 30 and 79. Instead, set a attribute to board as max_y_coordinate and assign 79 to it. (Excessive use of literals in mainly in this function -> Code Smell)"
"This function can be broken down into smaller functions where each function initializes a part of the board (walls, coins, stairs) This long function is a code smell. "
"Make variable names descriptive -> Code smell"
"This function is too big and contains a lot of nested loops (7 layers of nesting) Cyclomatic Complexity -> Code Smell"
"Delete commented code when submitting a final version of the code. "
"Classes and functions must contain doc strings according PEP-8 standards."
" Make the different conditions into different functions. "
"Usage of Global Variables also violates encapsulation. (Requirement of Assignment and adhering to OOPS standards)"
"Most of the functions above check collisions with in-game objects. There is a combinatorial explosion i.e all the code above are doing almost the same thing -> Code Smell. "
"Better encapsulation can be done here. Instead of passing the player coordinates (which are attributes of the board class) these functions can be inside the Person Class and the Person class can check all the collisions. (OOPS Concepts)"
"Import must be on separate lines. (PEP-8 Standards)"
"Each class and function must contain a doc-string. (PEP-8 Standards)"
"Long Parameter List -> Code Smell"
"Function too long. (Long Method -> Code smell)"
"Uses too many different functions (Feature Envy -> Code smell)"
"Variable names must be descriptive. (PEP-8 Standards)"
"Functions uses too many literals instead of using named constants (+4,+2,+1,sleep(0.5)). (Excessive use of literals -> Code Smell)"
"Both check for collisions. The checkWall can be accommodated inside the checkCollision function. (Combinatorial Explosion -> Code Smell)"
"Statements that were used only for debugging (especially print statements) must be deleted. This error is present in different parts of the code as well. "
"Variable names must be descriptive. (PEP-8 Standards)"
"Good function naming according to PEP-8 standards. "
"70-77, 105-112: Seems like duplicated code -> Code Smell. Make a function and put the small changes as arguments instead of rewriting the code."
"Add some comments. Using almost only literals and no functions makes it very hard to understand code."
"Maintain consistency while naming functions (Either underscore or mixed case) PEP-8 Standards\
"
"Correct Indentation (PEP-8)"
"Both Player Class and Donkey Class inherit from Person and both use the checkWall method. Can be combined and written in the parent class itself.\
Duplicate Code -> Code Smell"
"Function names must be named according to their functionality and a doc string must be provided. "
"Function contains too many nested conditions (Cyclomatic Complexity -> Code smell)"
"Function uses too many other functions. (Feature Heavy -> Code Smell)"
"Make variable names descriptive. (PEP-8)"
"The argument 'di' is not being used in the function checkWall.(Unnecessarily longer parameter list -> Code Smell)"
"Refused bequest -> Code Smell"
"The variables declared from line 5-15 must be put as attributes of a class. "
"Instead of using 28, 60 etc, use board_x_start_coordinate or something of that sort. (Excessive use of literals->Code Smell)"
"Global variables must be inside one module only. (PEP-8 Standards) This for example is also used in the file \""donkeykong.py\"",""35"
"gameDisplay argument is not used in the function. Unnecessarily long parameter list -> Code Smell."
"gameDisplay and floor_list argument is not used in the function. Unnecessarily long parameter list -> Code Smell."
"Excessive Use of literals-> Code Smell."
"Should have randomized coordinates to improve readability of code as well as enhancing the game."
"Usage of literals -> Code Smell."
"floor_list argument not used. Unnecessarily long parameter list->Code Smell."
"Calling all 'initial conditions' functions of different classes by using another function would have improved readability and made it less feature envy.\
Feature Envy->Code Smell."
"These two local variables should have been made attributes of the Player class as they relate only to the Player."
"Long sequences of method calls to get routine data. \
Message Chains -> Code Smell"
"Calling all 'update conditions' functions and collision checking functions of different classes by using another function would have improved readability and made it less feature envy.\
Feature Envy->Code Smell."
"Long sequences of method calls to get routine data. \
Message Chains -> Code Smell"
"Calling all 'update conditions' functions and collision checking functions of different classes by using another function would have improved readability and made it less feature envy.\
Feature Envy->Code Smell."
"Long sequences of method calls to get routine data. \
Message Chains -> Code Smell"
"Should have been made into a function to ease testing. "
"Should have been made into a function to ease testing. "
"Long sequences of routine code that must have been put into a function makes the reader hard to understand the processes going on in the\
gameLoop. Function was too long. "
"The same kind of global variables are present in each module. These global variables should have been put into a module and imported into each\
other module.(PEP-8 Standards)"
"Some of the attributes are not used by all its sub-classes."
"Refused Bequest->Code smell."
"Should have been a break statement. No need to check collisions with other fireballs if one collision is true."
"Lot of code duplication in the collision checking functions. (Code Smell) There should have been one main collision check and the others should have just\
passed arguments to tweak the functionality of that function. "
"Lot of nested conditions make it hard to understand the code. (Cyclomatic Complexity->Code Smell) Should have broken down into two functions: 1 when the fireball is in contact with the ladder and the other when it isn't."
"Non descriptive variable names. (PEP-8 standards)"
"Use self as the first argument for instance methods (PEP-8)"
"Functions returning a class instance itself such as donkey or player should have been a function inside its class itself. This would have improved readability."
"Include as a class function instead of returning an instance of the class."
"Include as a class function instead of returning an instance of the class."
"mdown and mup perform very similar functions. Should have been combined into a single function and just should have used arguments to tweak\
the functionality. Combinatorial Explosion->Code smell."
"mright and mleft perform very similar functions. Should have been combined into a single function and just should have used arguments to tweak\
the functionality. Combinatorial Explosion->Code smell."
"Lack of descriptive variable names."
"Doc-string must be provided for each class and function. (This error is in every class and function in the code)"
"Long sequence of method calls -> Message chains (Code smell)"
"Not much difference between this and the previous nesting (if direction=='Left'). Code can be reduced. \
Code Duplication & Combinatorial Explosion->Code Smell."
"Good private functions to prevent users from changing sensitive variables."
"Descriptive function name (PEP-8)"
"Function is too long. Needs to broken up into multiple functions.\
Long method->Code Smell"
"Function has too many nested conditions.\
Cyclomatic Complexity->Code Smell"
"Use named constants instead of literals. Improves code readability."
"Explain/comment usage of literals in the setUpDonkey and setUpPrincess function to enhance readability."
"The setUpDonkey and setUpPrincess can be combined into one as they are often used/called in conjunction with each other."
"code smell: class has grown too large. could be modularized further.\
"
"code smell: this method makes objects of this class behave like God Objects"
"code smell: method has grown too large. could be modularized into multiple methods."
"global variables should be used within the module it was declared in but it is being used everywhere. (PEP8)"
"code smell: whole game depends on instantiation of this one class (god object) "
"code smell: lazy class (does too little)"
"code smell: lazy class (does too little)"
"code smell: lazy class (does too little)"
"code smell: lazy class (does too little)"
"global variables should be used inside it's own module only (PEP8)"
"global variables should be used inside it's own module only (PEP8)"
"global variables should be used inside it's own module only (PEP8)"
"global variables should be used inside it's own module only (PEP8)"
"code smell: contrived complexity: could be made much simpler as far as design goes."
"code smell: too many parameters (makes testing complicated)"
"gravity should be globally implemented. better design is possible here."
"bug: player character often gets stuck in the ladder on jumping. this workaround (bumping) does not completely fix this. design change is required."
"bug: random levels are not always possible to complete. emergency ladder feature tries to battle this but still there are levels which cannot be completed."
"OOP concepts not followed: no abstraction in any of the classes (no private/protected variables)"
"should exit with a exit code (EXIT_SUCCESS/EXIT_FAILURE) (PEP8)"
"Uncommunicative variable naming (code smell)\
variables should be named appropriately so their function is clear to readers."
"code smell: contrived complexity - too many loops\
using a few constants the coins can be randomized onto the gameboard with just one loop or a nested loop"
"comment does not give any information or clarity. (PEP8)"
"function name is confusing; does not reflect the use of the function clearly. could be confused with C's getchar() function (PEP8 naming standard)"
"Improper indentation reducing code readability. (PEP8)"
"constant literals should be used instead of directly feeding in values. \
makes it hard to test and debug. (code smell)"
"similarly named variables could confuse readers. (in fact, i am confused) (PEP8 variable naming standards)"
"code smell: long method (method has grown too large, could be modularized)"
"variable names are not descriptive; they don't give any information about the function of the variable. (PEP8 variable naming standards)"
"function name does not reflect the use of the function. they should clearly indicate what the function should do. (PEP8 variable naming standards)"
"code smell: contrived complexity. hit detection should be modularized so no duplication exists for each type of movement."
"each class need not have it's own checks for collisions, a parent class for all moving sprites could be designed which\
has a method for checkWall or similar ( OOP concept: modularity ) "
"too much hard coding. jump motions can be automated with a well designed nested loop."
"movements should be automated, not hardcoded."
"global variables should only be used within the module they were declared in. (PEP8)"
"global variables ( see comment above )"
"data abstraction (Y) (Y)"
"Improper indentation (PEP8)"
"global variables should be used within the module they were declared in or should be avoided completely (they are evil) \
PEP8"
"unindented class code"
"harcoded level: could be automated with loops and code would be much simpler and easier to read ( contrived complexity ) code smell"
"variable names should reflect their function so readers can easily understand the code\
(PEP8 variable naming standards)"
"this file should be broken down into modules (OOP concept: modularity)"
"movements can be handled by one move method \
direction can be passed as an argument\
(duplicate code methods) code smell"
"jump and movements are not real time. fireballs only move when the player does. multiple display bugs when movement is attempted."
"jump does not work. "
"fireball hit detection is faulty"
"fireballs not working. no fireballs appear."
"donkey hit detection is not proper. player loses level long after contact with donkey is made."
"Imports should usually be on separate lines"
"Always surround these binary operators with a single space on either side: assignment (=), augmented assignment (+=, -= etc.), comparisons (==, <, >, !=, <>, <=, >=, in, not in, is, is not), Booleans (and, or, not)."
"No blankline at the end of file"
"unneccessary empty line"
"This line contains more than 79 characters(pep -8 standards)\
"
"more number of unnecessary empty lines"
"Always surround these binary operators with a single space on either side:  comparisons <=\
"
"no proper use of indentation and will not run while using idle"
"no directional jump implemented"
"too much hard coded"
"fireballs goes in the single directionit's not random"
"when the player's chance reduces the firebals are not again starting from top"
"used hard code for showing the ladder could have used an image for showing"
"for jumping moved 30 up if two fireballs of distance 10 attack should have been out but according to this this is not out"
"displaying negative score at the end shoud be 0"
"no levels implemented "
"hard coded board,ladders are not random"
"no levels implemented"
"should use space between 255 and ,"
"should use space between self.score and =+ according to pep-8"
"dead code should be removed- code smells"
"No  whitespace after ','(such errors are present all ovr the file)"
"2 blanklines should b present,found 1"
"expected 2 blank lines, found 0 "
"indentation contains tabs "
"expected 1 blank line, found 0 "
"space between self.x  and  >"
"expected 2 blank lines, found 0 "
"indentation contains tabs "
"indentation contains mixed spaces and tabs "
"prince is given a static circle and hard codes that if player goes to that position then restart"
"Player is unable to come down from broken ladders"
"Fireball is going to ﾖ infinity from the last line\
"
"Player not climbing ladder when we press both left arrow and up arrow"
"Player not landing on layer when pressed side arrows when we are on the ladder "
"used hard code for showing the ladder could have used an image for showing\
"
"Too many lines used in defining  board,can use images for reducing the code length"
"Used so many for loops for writing the same functionality,can use the same variables and for loop"
"Used many if conditions for writing state4 < 3"
"Encapsulation used just for showing it no use of it\
"
"Too many conditions used in a single line for checking could have checked and kept in a variabe"
"Use of message_to_screens many times can have written a function for that"
"When climbing ladder speedly and  stop suddently in the layer middle we cant go up again we should go down \
"
"as the fireball size is big than player if the player is on ladder and then collide with fireball player is getting  out"
"Didnot implement q for quitting  "
"no implementation of getPosition() , checkWall() , checkCollision() , collectCoin()"
"per3 variable is used but not defined"
"only one fireball"
".not going to down layer from upper layer at edge"
"no level implementation"
".player not getting out while touching donkey"
"not coming down from broken ladders"
"player not getting out while touching fireball"
"sometimes no chance of getting out near the middle of broken ladder"
"no jump"
"1st time when we go right and then come left at starting stage the player is missing"
"ladders are at same position not random"
"fireballs not covering every part"
".fireball moving in perticular way"
"no proper identation will not run while using idle"
".more number of unneccessary variables"
"hard coded board"
"no empty lines near defining class"
"use of more while loops for writing same functionality things"
"more number of comparisions in one line"
"priniting the screen again and again"
".unneccessary imports are done\
"
"constants are not descriptable"
"print statements are used many times can be used in one line"
"climbing broken ladders"
"Moving sideward in air"
"Automatic restart of next game with out any asking"
"when jumping from ladders coming back to same place"
"No leveling"
"displaying -ve score"
"fireballs moving in specific way not random"
"ladders are generated at same place everywhere"
"Fireball not covering entire space"
"if we get out then the fireballs are not starting from top"
".level is getting finished if we reach just a perticular height but not reaching princess"
"player is not getting out if we jump on fireball"
"coins are not random"
".wrote import sys,pygame mixture instead of import sys \\n import pygame mixture"
"no modularity,encapsulationetc"
"no classes implemented"
"too many if conditions"
"variable which are used are not understandable (not descriptive)"
".no space at the end of file"
"board is hardcoded very much"
"could have written a random function for generating coins instead of hard code"
"line consists of more than 79 charecters"
"found indentation with tabs instead of spaces"
"missing function docstring"
"redefining m variable from outerscope"
"writing unused variables and unused import statements"
"player moving inside wall"
"when trying to jump it is moving up but not jumping"
"no fireballs"
"no coins"
"no coins"
"Donkey is not moving"
"used print statement while using pygame print will display on the terminal"
"written while True but didn't specify the variable"
"no points implementation"
"no level implementation'"
"game is not initiated"
"up and down are not implemented"
"usage of undeclared modules"
"hardcoded the ladder,board etc not random"
"unnceccessary emptylines"
"no blank line at the end of file"
"no inheritance"
"no empty lines while defining classes"
"no spaces while comparing"
"bad variables declaration"
"future envy"
"lazy classes are defines"
"usage of more than 79 charecters in one line"
"more memory was used for unneccessary things"
"noinheritance"
"no polymorphisam"
"Bad coding practice, only import the required classes from the modules\
PEP-8 : unable to detect undefined names [F403]"
"Useless space according to PEP-8 standards\
Should be like \""s.rect.x, s.rect.y = x, y\"",""39"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]\
"
"missing whitespace around modulo operator [E225]"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]\
"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]\
"
"There is no checkWall function in the entire code"
"There is no getPosition() function in the entire code"
"Multiple classes in the same Module\
Bad coding practice, classes must be separated across modules"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]\
"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]\
"
"* Class has no docstring\
* Methods have no docstring\
* Module has no docstring"
"* Class has no docstring\
* Methods have no docstring\
* Module has no docstring"
"* Module has no docstring"
"* Class has no docstring\
* Methods have no docstring\
* Module has no docstring"
"This module is useless\
All of this could have been declared in Board.py module making them as Private variables"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]\
"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]\
"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]\
"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]\
"
"Too many classes in the same module\
It is a good coding practice to split them across different modules"
"All of the code below could have been put inside class with the static variables as private ones"
"Too many classes in the same module\
It is a good coding practice to split them across different modules"
"Too many classes in the same module\
It is a good coding practice to split them across different modules"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]\
Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]\
"
"Not according to PEP-8 standards\
missing whitespace around operator [E225]\
"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"Not according to PEP-8 standards\
missing whitespace around operator [E225]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]"
"Dead Code lying around as comment\
Must be removed as its useless"
"Dead Code lying around as comment\
Must be removed as its useless"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]\
"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]\
"
"Should make the static variables as private or protected\
Good coding practice"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]\
"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]\
"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]"
"Import only the required classes from the modules\
Wildcard import is not appreciated\
Bad Coding practice"
"No spaces between - PEP8\
should be like : print \""SOUND DISABLED\"",""39"
"Comments not according to PEP-8 standards\
Block Comment should start with '# ' [E265]"
"Wildcard import\
unable to detect undefined names [F403]"
"All of the constants have been imported but most of them not used"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
"
"Comments not according to PEP-8 standards\
Inline Comment should start with '# ' [E265]"
"Comments not according to PEP-8 standards\
Inline Comment should start with '# ' [E265]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"* Class has no docstring\
* Methods have no docstring\
* Module has no docstring"
"Multiple classes in the same module\
Bad coding practice\
Must be distributed across separate modules"
"Not according to PEP-8 standards\
No whitespace after ',' [E231]\
missing whitespace around operator [E225]"
"missing whitespace around modulo operator [E225]"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]"
"Method definition not according to PEP-8 staandards\
expected 1 blank line, found 0 [E301]"
"Class declaration not according to PEP-8 standards\
It must have 2 blank lines above it [E302]"
"broken ladders have not been implemented\
"
"the player can never reach the queen"
"broken ladders are not implemented"
"the game is to slow to play"
"coins generated are not random. instead they are hardcoded"
"Neither pep-8  nor code-smells restrict memory of our program."
"very vague description of a code smell/pep-8 violation."
"design is not a matter of standard and preferences vary from person to person\
\
"
"not following pep-8 standards by not adhering to usage of white space following ','\
"
"inconsistency in usage of white space while declaration, also violating hanging indentation recommendation by pep-8"
"constants should be mentioned in capital letters - pep-8"
"unnecessary blank line\
"
"length of the line at hand is too big (pep-8)"
"improper indentation"
"lack of Capitalization of any class names (pep-8)"
"very large class, couldve been made smaller by modularisation : code smells\
"
"used absolute path for the image generation, and hence can't be accessed everywhere : code smells"
"length of line is too large, hard coding could have been avoided. (pep-8 violation) : code smells\
"
"in creation of walls, numebr of while loops can be reduced by introduction of functions"
"proper classes should have been defined in other modules, and would have greatly decreased necessity for such a large module : code smells"
"game functionality error : no implementation of climbing up and down ladders through w and s"
"wall checks are not made appropriately, resulting in improper collision with walls (bad functionality)"
"large class, could have been avoided with usage of methods"
"initialising all colours is already done once, hence this falls under duplicate code (code smell)"
"Long method (Bloater code smell)"
"Should be declared inside the class of fireballs.\
"
"should be declared inside class of Player"
"Use of global variables for couting coins should be avoided (PEP 8)"
"Improper naming of variables"
"Generation of fireballs is not automatic , it waits for keyboard input."
"count of balls should not be a global variable"
"life of player should not be a global variable"
"Motion of fireball is not automatic it depend on keyboard input"
"sys library already imported"
"Jump should be a function inside the player class."
"Jump can be handled by a single method by passing arguments for left and right jumps , no need of two different blocks.\
Duplicate code methods as per code smell."
"Could be implemented using a single method and passing arguments for each direction.\
code duplication."
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"Indentation error (PEP 8)"
"No use of the above function .."
"None of the functions describes the movement of fireball"
"Random names given to the variables (PEP 8)"
"Fireballs can eats the stairs as the value of board is not set to its previous after fireball passes.."
"Fireballs can eat the coins as the values of board is not reset to its previous value."
"Unused block of code (PEP 8)."
"Static declaration of arrays can lead to segfault if its size exceeds 100111."
"sys library already imported."
"Indentation error (PEP 8)"
"No need of this if it will automatically return at the end. Unused block of code."
"same result for both if and elseif statements so both can be merged."
"same result for both if and elseif statements so both can be merged ."
"same result for both if and elseif statements so both can be merged."
"Life should not be a global variable."
"unused imports . (pep-8)\
"
"unused block of code , no use of  ls here."
"Too long line (PEP 8)"
"Unused imports "
"unused argument gob"
"No __init__ method for class"
"Good commented block."
"Function name should have small letters and underscore."
"Broken ladders are missing."
"No __init__ method for this class"
"Extra white spacing"
"No error handling for input."
"No else condition for key other than W,S,D,A ."
"Both if and elseif produces the same result and so one of them can be removed (unused code)."
"Function Name convention error (PEP 8 Standards)"
"Too many if else statements in a single block "
"Condition of minimum no. coins on board is not checked"
"Constraints on minimum number of coins is not checked."
"No error handling if other keys than those specified are pressed."
"Too many if else block."
"Inheritance used, redeclaration of same functions saved. "
"No error handling for Capital W,A,S,D"
"very long statements, violates PEP 8 maximum length standard"
"Too many if else statements used use switch to make the code easier to read . "
"Good implememnation of levels"
"No colored output"
"Multilevel game not was implemented  which was a requirement."
"coin should be inside the player class."
"Hardcording Board should be avoided. It can be implemented using for loops."
"variable names are not easy to understand."
"Too many nested if else statements. Switch would be more readable."
"Non descriptive variables name."
"Exceptions handled."
"Constraints on minimum number of coins missing."
"Unused function listdir."
"unused block of code used (PEP 8). No need of any operation on files."
"Name of variables should be more descriptive."
"Values of height and width are less than that specified in the assignment."
"No error handling in input."
"No need of so many different functions for move, could be done in a single function by passing different arguments for different directions.\
code duplication (code smell)."
"No need of so many different functions for move could be done in a single function by passing different arguments for different directions.\
code duplication (code smell)."
"Global variables should be capitals (PEP 8)."
"A very long method could be broken into modules."
"Total numbers of coins is not random its always equal to  20."
"Five points to be awarded for each coins as per the assignment guidelines."
"No of coins is fixed not random."
"No class name should be ghost."
"All these methods could have been put in a class as they are just generating  the outline of the arena."
"No use of current working directory. "
"Long method."
"short variables name is used (b here ). "
"Game ends on collision with the fireball."
"Variables name are not descriptive."
"Single fireball is implemented."
"Fireball eats coins and stairs"
"Jump works with j key but it should work with space."
"Jump is not working near the corners of the arena."
"Multiple levels are not implemented game ends on one level."
"Motion is not automatic."
"No queen implemented ."
"Jump not implemented."
"Fireball not implemented."
"Multiple level not implemented."
"Stairs not implemented."
"Player is having a single life."
"Pressing any key except a,w,s,d,q, quits the game."
"only single life is implemented."
"Only one life is implemented."
"Player sometime gets trapped inside the wall and is not able to move."
"Jump is not implemented smoothly."
"Sometime multiple copies of fireball are created in level 2."
"Broken stairs not implemented ."
"At  some places player is able to eat stairs ."
"When player meets fireball game ends."
"Jump doesn't happens smoothly."
"Multiples levels are not implemented."
"Multiples lives of player is not implemented ."
"Movement of player and donkey depends on keyboard input"
"There is no randomness in the motion of fireball i.e. they always follow a specified path and they cannot come down from ladder."
"cyclomatic  complexity too many branching."
"Long class could be broken in modules."
"should have divided the code into modules\
"
"did not define classes anywhere"
"should have provided description for variables so that they could be adjusted for different versions"
"used many variables (also global) which is very confusing"
"should have written functions in different files so that changes could be made easily"
"coins are not random"
"code has no documentation"
"there is no explanation for functions"
"fire balls are not random"
"fire balls should have been generated randomly"
"almost everything is hardcoded"
"avoid long condition statements"
"positioning of ladders is independent of output "
"(0,255,0) - should have written color name"
"coins are independent of output window size"
"no description for variables"
"also no description for functions"
"only background music"
"should have included sounds for jump , collision with fireball , coin etc;"
"no explanation for below loop"
"put white spaces on either side of + , - etc;"
"did not put play again option"
"should have had game exit , play again options"
"avoid code redundancy by using functions"
"person , donkey should have been written as objects and divided into modules"
"try to encapsulate code"
"avoid long condition statements"
"don't hard code"
"could have used a for loop for k"
"all sizes are hard coded"
"no documentation"
"no broken ladders created"
"this call causes the movement of the player so not useless"
"All functions should be inside a class"
"No code from this file used\
Modules imported should be written on different lines."
"Modules imported should be written on different lines."
"should not have global variables line 7-15"
"function should be part of a class"
"code should be part of a function"
"position should be a private variable\
class and function explanation docstring  not found"
"class should have methods in addition to data(code smell)"
"variable not specific"
"Combinitorial Explosion\
code duplication line 126-133 and line 135-142 "
"Combinitorial Explosion\
code duplication lines 144-151 same as 135-142 and 126-133"
"Combinitorial Explosion\
code duplication same as above"
"Combinitorial Explosion\
code duplication line 164-175 same as 191-210"
"Combinitorial Explosion\
code duplication 61-64 similar to 51-54 and 56-59"
"Combinitorial Explosion code duplication56-59 similar to 51-54"
"Combinitorial Explosion\
code duplication 66-69 similar to 51-54 and 56-59 and 61-64"
"Combinitorial Explosion\
code duplication 71-74 similar to 51-54 , 56-59 ,61-64 ,66-69 "
"Combinitorial Explosion\
code duplication  164-174 same as 76-85"
"class should have methods in addition to data(code smell)"
"Modules imported should be written on different lines."
"Modules imported should be written on different lines."
"variable should be declared above"
"excessive use of literals"
"excessive use of literals"
"excessive use of literals"
"functions line1,line2,line3,line4,line5,line6 could be merged into one  "
"excessive use of literals in function"
"excessive use of literals"
"class has no init "
"code duplication (same thing declared in donkey.py)"
"nondescriptive variable"
"excessive whitespace"
"code duplication (same thing declared in donkey.py)"
"nondescriptive variable"
"variables should be declared in a class"
"dead code should be removed(code smells)"
"nondescriptive variable"
"dead code should be removed"
"nondescriptive variable"
"excessive use of literals"
"excessive use of literals using varables instead of constants the code could be simplified and more readable"
"differernt import should be done on separate lines"
"nondescriptive function name"
"nondescriptive variable name"
"'x' used on line 9"
"class fireball not implemented(bug)"
"jump functionality not implemented(bug)"
"levels not implemented(bug)"
"score is not reduced when collision with donkey occurs"
"queen not implemented"
"variables should be declared in a class"
"excessive use of literals"
"excessive whitespace"
"levels not implemented"
"no broken ladders"
"needs comments to understand the code"
"lot of functionality implemented in main \
separate functions should be made for the same"
"non descriptive variable t \
instead of returning a tuple t 2-3 diff functions should be used to return all the values"
"fireball go down from all the stairs it should be random\
"
"fireballs retain the earlier direction when they go down  a ladder"
"Negative: cyclomatic complexity (code smell)"
"Negative: PEP-8 standards\
class naming should be in CamelCase"
"Negative: PEP-8 standards\
Constants should be all capitals"
"Negative: PEP-8 standards\
constant definition is of format\
RED = (255, 0, 0)\
GREEN = (0, 255, 0)\
WHITE = (255, 255, 255)\
etc"
"Negative: function name convention error (PEP 8)"
"Negative: Function Name convention error (PEP 8 Standards)"
"Negative: MIXED INDENTATION\
found indentation with tabs instead of spaces"
"Negative: Exactly one space required around assignment"
"Negative: code smell - cyclomatic complexity"
"Positive: Constants capitalized , meeting PEP 8 standards "
"Negative: Unnecessary parenthesis after 'if' keyword"
"Negative: Missing module doc-string"
"Positive: Boilerplate used"
"Negative: Unused colors in this module, should only be defined if used."
"Positive: Function_named meaningful , reader can easily understand "
"Negative: Indentation not maintained"
"Positive: Init function defined for each class."
"Negative: Can be well optimized and the no of 'if' conditions can be reduced.\
Repetitive code with only minor changes, combinatorial explosion -> codesmell\
Try use switch statements wherever possible."
"Positive: Spaced out and meaningful function names. easy to read"
"Positive: Boilerplate used"
"Negative: very long statements, violates PEP 8 maximum length standard"
"Negative: Class has no __init__ method"
"Negative: Function Name convention not upto PEP 8 standards."
"Negative: code smell-> Unused arguments "
"Negative: CamelCase for ClassName"
"Negative: No error handling"
"Negative: Constants should be capitalized."
"Positive: Well separated and commented out. Easy to read"
"Negative: Too many 'if' ; conditional complexity -> code smell"
"Negative: Extra variables defined for jump."
"Negative:  Extra blank lines"
"Negative: Trailing spaces"
"Negative: Exactly one space required after assignment operator"
"Negative: Constants should be capitalized."
"Negative:  One method move for all directions with direction as an argument preferrably.\
(duplicate code methods) code smell"
"Negative: Trailing spaces and extra spaces error while assignment."
"Positive: Well separated out , commented and meaningful function names. Easy to read"
"Negative:  Class name should be in CamelCase (PEP-8)"
"Positive:  Boilerplate used"
"Negative: Functionality, name conventions not followed (PEP 8)"
"Negative: Trailing white spaces"
"Negative: Constants should be capitalized. (PEP 8)"
"Negative:  Class name should be in CamelCase (PEP 8)"
"Negative: PEP 8 maximum statement length violated"
"Negative: Python Boilerplate missing"
"Positive: Well commented and meaningful function names. Easy to read"
"Negative: Class name should be in CamelCase"
"Negative: MIXED INDENTATION\
found indentation with tabs instead of spaces"
"Negative:  CamelCase for class naming"
"Positive: Well separated and meaningful function names. Easy to Read"
"Negative: code smell: Freeloader/Lazy class; Class not required, this should be embedded with the PlayingBoard class"
"Negative: Dead code, unnecessary"
"Negative: No fireballs implemented"
"Positive: Encapsulation used"
"Positive: Modularity maintained"
"Negative: White space standards violated during assignment (PEP 8)"
"Negative: PEP 8 Standards\
function naming conventions violated."
"Positive: Great to see readme file uploaded along for easy understanding of the project."
"code smell: God class"
"Negative: Code smell-  cyclomatic complexity"
"Negative: code smell - cyclomatic complexity"
"Negative:  code smell - Inappropriate intimacy (Dependent upon implementation of class Board)"
"Negative: code smell- freeloader class"
"Negative:Functionality: Jumps off from a higher floor without using stairs."
"Bug: Functionaity: Broken staircase not implemented."
"Code smell: Importing with wildcard"
"Functionality: Player can stand in between broken stairs(i.e. in the air)"
"Functionality, Player jumps off from a higher level without stairs."
"Functionality, UI displays 'P' wherever player is killed."
"Functionality, Player can not reach the Queen. infinite game."
"2 functions for move; can be made into one.\
code smell-> combinatorial explosion"
"Functionality, Previous direction jump"
"Functionality, Fireball eats the stairs"
"No colour output"
"Functionality, Fireball doesnot comedown from stairs."
"Polymorphism not implemented , the horiz() function must be put in the person class rather than in player's for polymorphism. \
\
\
"
"fireball's motion dependent on player's motion i.e moves only when player moves"
"Jump function  not implemented properly ,vertical jump using space is not implemented at all ."
"Swapping between the player and the stairs while doing a jump done in a wrong way.Condition for collision between the wall(boundary) and the player \
not implemented."
"Only left and right directional randomisation is done,no randomisation when it encounters stairs, directly falls down without choosing ."
"if the fireball is on a staircase and player looses his life then the Board is cleared incorrectly (stairs become broken)."
"used brute force approach while clearing the board , not always compatible . fails in some exceptional cases."
"can use a 2d list and python functionalities like append for creating the board rather than hard-coding."
"Position's of player and donkey are hardcoded which could be avoided ."
"Coins are not randomised to appear at the foot of staircases, but that  should actually be implemented as well ."
"can actually include  randomisation of position of staircases and length of the floors "
"Unnecessary imports ( importing time above) could be avoided ."
"Polymorphism could be used for moving fireball which is a better approach"
"Randomisation of the staircases position could be implemented and no broken staircases."
"Above line not properly indented , will get error\
"
"function name is confusing; does not reflect the use of the function clearly. could be confused with C's getchar() function (PEP8 standards)"
"Exceptions properly handled"
"differerent import should be done on separate lines"
"Unnecessary extra empty lines. could be removed"
"Optimisation of the below code could be done using switch"
"dead code : unnecessary else block could be removed "
"Number of remaining lives of the player must also be displayed along with the score"
"Extra empty lines , could be avoided"
"the constants should be declared in uppercases as per the PEP-8 standards."
"Variables must be declared in a class ( PEP-8)"
"Below code not related to the execution of the game."
"Function and class  names not appropraite , their funcionality not understandable."
"not related to the game"
"Calling and declaration of variables must be done in a function as per PEP-8"
"The below code repeated ."
"jump functionality not implemented."
"fireball class and donkey are not implemented at all !"
"Too many loops , could be avoided using a second for loop and a randint function."
"multiple lives for player not implemented.game ends as soon as player looses his life."
"includes only a single level."
"ghost class implemented instead of fireball class\
"
"the board could be created in a more optimistic way  ( complex)."
"below code must be included in the board class."
"PEP-8 standards not followed , must be declared in uppercase."
"polymorphism not implemented."
"negative : dead code must be removed ."
"instead of global declaration of co-ordinates  init() function could be called."
"very long line as per PEP-8 standards."
"negative : dead code must be removed."
"second mention of getchar() could be avoided by importing the required."
"encapsulation done incorrectly,variables in init must be private."
"polymorphism not implemented."
"negative : unnecessary  lines"
"modulation can be done btwn person ,player and fireball classes"
"constants must be capitalized as per PEP-8 standards."
"no encapsulation done for person class "
"negative : trailing white lines"
"negative : trailing white spaces."
"board must be in a private variable ( not encapsulated)"
"exceptions handled "
"constants should be capitalized as per PEP-8 standards."
"error handling for input not done"
"constants should be capitalized as per PEP-8 standards."
"Class has no __init__ method"
"Class has no __init__ method"
"Too few public methods (1/2) (PEP-8)\
"
"Long Parameter List -> Code Smell\
"
"Class has no __init__ method\
"
"Access to a protected member _x and _y of a client class"
"non-descriptive constants should be avoided."
"should be per instead of per3 in the above 3 lines."
"putting spaces in the places of player,donkey and fireball when the board clears is a wrong approach."
"the above method fails when multiple fireballs is implemented."
"should be per instead of per3 in the above 3 lines."
"negative -> empty lines in between the code (code smell)"
"extra white lines : PEP-8 violation."
"getting seg-fault in a case where fireball falls from a broken staircase which has a coin at the top."
"the board must be in a private variable not in public."
"player will be able to move beyond the the platform by 1 unit which should not happen."
"player not collecting the coin present at the end of his jump."
"player not loosing a life when he lands on the fireball after the jump."
"game does not end when player presses q while jumping."
"no encapsulation,variables must be private not protected."
"fireballs are only falling after reaching the edge of the platform not falling down stairs."
"player able to climb stairs even when there are '-'s instead of 'H's"
"vertical jump not included  "
"jumping left or right randomly."
"donkey's movements dependent on player's, not moving on its own."
"fireball's movements dependent on player's, not moving on its own."
"board not clearing just player shifting when player looses a life."
"meant level\
"
"OOPS concepts not used at  all"
"basically no winning ! game ends only when u lose(which is a few times)."
"game ends in only few cases where player hits a ghost"
"no levels."
"any kind of jump not working while jumping onto a staircase."
"not showing transition while climbing up or down the stairs."
"Missing module docstring (no documentation anywhere)\
"
"Should have made a generics function for checking various conditions rather than hardcoding with so many for loops"
"Polymorphism not used"
"No levels implemented"
"Cannot climb ladder up or down"
"Some classes as mentioned in requirements are not implemented (Person,Donkey, Fireball,Princess)"
"No scoring method"
"Coins sometimes appear in walls"
"Lots of whitespace errors throughout the code"
"Code is not modular. Everything in one file"
"No use of public or private variables"
"Wrong indentation"
"Coins are generated at boundaries sometimes which are not possible to collect"
"Should have used Sprite collisions instead of hard coding"
"Game crashes due to image not available"
"Missing proper docstring"
"Many unused variables from import (fImage,prImage,height,sc_width,dImage,wImage,sc_height,grey,width,black,pImage,lImage,cImage)"
"Ununsed import randint"
"Unused import sys"
"Old style class definition\
(Class does not inherit from any other class or explicitly from an object)"
"Wrong class name (not following PEP-8 standard)"
"Wrong class name (not following PEP-8 standard)"
"Wrong class name (not following PEP-8 standard)"
"Wrong class name (not following PEP-8 standard)"
"Wrong class name (not following PEP-8 standard)"
"Wrong class name (not following PEP-8 standard)"
"Importing with wildcard not recommended . Leads to many unused imports"
"Wrong class naming (not following PEP-8 standard) & mssing docstring"
"Wrong class naming (not following PEP-8 standard)"
"Wrong variable naming (not following PEP-8 standard)"
"Wrong variable naming (not following PEP-8 standard)"
"Wrong class naming (not following PEP-8 standard)"
"Wrong class naming (not following PEP-8 standard)"
"Wrong variable naming (not following PEP-8 standard)"
"Wrong method naming (not following PEP-8 standard)"
"Wrong method naming (not following PEP-8 standard)"
"Missing detailed documentation string"
"Too long line. It should be divided into multiple statements"
"Missing detailed documentation string"
"Importing with wildcard not recommended . Leads to many unused imports"
"Importing with wildcard not recommended . Leads to many unused imports"
"Wrong variable naming (not following PEP-8 standard)"
"Missing detailed documentation string"
"Wrong variable naming (not following PEP-8 standard)"
"Missing detailed documentation string"
"Line too long"
"Line too long"
"Line too long"
"Many unused variables from wildcard ('*') import "
"Time function which is not yet imported is used here"
"Jump speed is really bad (Bad functionality)"
"For motion instead of directly hardcoding values you should have created variables.\
Reusability is lost in your implementation"
"Meaningless variable names.Other persons find it difficult to understand."
"You could have named variables which implicitly tells their usage."
"Very Long Line."
"Bad practice to write conditions in this manner."
"Return Statements are used unnecessarily in the code at some points.Better implementation is possible if unnecessary things are skipped"
"Even the hard-coding isn't done well.You have a Wierd design which discourages playing this game."
"Levels aren't implemented."
"Bad code Smell : Declaration of unused function."
"Score doesn't get updated."
"PEP-08 Standards not followed."
"Memory Wastage."
"The game runs but bad way of checking the position and movements."
"It is silly to update score without having coins"
"There must be a line in between."
"Pep-08 standards not followed.Spaces skipped in between."
"init file not written.Your import is not done in the way it is supposed to be."
"Usage of public and Private variables should have been taken care of."
"position isn't  returned properly"
"The player doesn't move properly"
"At boundaries he ends up walking partially into obstacles which should have been handled"
"parenthesis is not used well."
"Modularity is not implemented correctly."
"Public and private variables not used."
"Full-Screen implemented unnecessarily leads to resolution issues."
"Coins can also be partially taken in your game which is bad"
"Lack of precision.Player isn't exactly coinciding with the ladder.\
"
"In modularisation you are not using any init function"
"This collision isn't perfect. After partial overlap collision is detected."
"There is a function for each move.Some generalised single function controlling the whole player should have been implemented."
"Variables doesn't make any sense"
"For readability variables with implicit meaning must be used."
"All the colours should have been put in a different file."
"You can encounter memory leakage."
"Gamedisplay size should not be hardcoded.It must adjust with different screen sizes."
"Update function  creates distortion on slower computers.It's not handled."
"Too much of hard-coding in this section."
"Spacings skipped in between operators violating PEP-08 standards."
"To handle collisions and boundary conditions too much of operation is done.This mathematical operations do not have reliability."
"Unnecessary looping with if conditions.Generic things should have been adopted."
"controls aren't implemented using w,a,s,d keys"
"There is no jump in the game"
"When you in the lowest level of the game with the fireballs in lowest level one cannot cross fireballs and must die"
"When you are on a ladder player cannot move left or right."
"When we press both hileft and right keys and then leave one of them player isn't moving.This must not happen"
"Some modules which are not used are also imported which is a veery bad practice."
"Player stops moving when direction of his motion is suddenly changed."
"When right and left key are both pressed and then one of them is released, player stops moving.This must not happen."
"Gravity is not implemented."
"Player rather jumps to the next level instead of climbimg the ladder."
"There is no end to the game.Nothing to do after all the coins are taken."
"drawing rectangles with this kind of hard-coding is a very bad practice.It leads to distortion when frames change at a higher  rate."
"Very bad way of starting the game in this way.There should have been  key intialisations here."
"Pygame mixer is written unnecessarily."
"score is initialised and also updated but the  updated one not being printed."
"Sprites group are declared  and only used to place images other than player sprite.Direct implementation of placing images would have been better."
"There are no broken ladders."
"Sprites add method doesn't deal boundary conditions correctly."
"If there is a wall above you can stay in air by holding space-bar which should not happen"
"Escape is used to quit the game"
"Docstrings aren't written."
"There are functions with very less task."
"There are attributes defined outside init function."
"Quit was not put in between the game"
"Space between self.y and < (Bad practice)\
\
"
"No fire balls were added.\
"
"Polymorphism not implemented.\
"
"This function  doesn't requires infact.Even the walls and bounds are not built properly."
"Scores are not getting displayed."
"Player class was done incompletely."
"Ladders are not placed properly."
"Sprite module  implementation was not done properly."
"Too many loops."
"Player icon was same even when it moving."
"Levels are not implemented."
"No class was written for other objects like donkey, prince except player."
"Clock speed should be a bit less."
"No polymorphism."
"pygame was not getting quit at all."
"Walls are not built properly."
"variables names are inappropriate"
" comments in code were not placed at all."
"Bad code smell."
"Collisions not implemented properly."
"Ladders and Broken ladders have not been added to the game.\
"
"no modularity. was done"
"Person class has not been implemented (Player should have been a subclass of the 'Person' class)\
"
"No polymorphism.\
"
"encapsulation was not there."
"This class should be placed under a super class like Board class."
"Code not executing properly"
"Lengthy classes."
"Lengthy code lines -->bad code smell."
"Function descriptions are not present"
"Polymorphism implemented is not so good."
"Fireballs have not been added to the game.\
"
"Donkey Kong has not been added to the game."
"Board class has also not been implemented."
"Negative Scores should not be displayed."
"Large class."
"No image has been uploaded."
"Bad usage of variables."
"Not getting down along broken ladders."
"Score is negative."
"Jump action is not working."
"no quit option was put."
"Player is not getting out when he is in initial position."
"Movement on broken ladders."
"No proper level implemenation."
"Movement out of boundaries."
"No stepping on ladders while crossing ladders."
"Fire ball and /donkey has same color.\
"
"Dead code should be removed.\
"
"Too much of hard code."
"Fire balls are little hard coded."
"Too many loops."
"Trailing Spaces."
"Inappropriate usage of Variable."
"Screen blit can be written as function."
"Too much usage of methods of one class in another class."
"When player is on stairs, and space is pressed, game exits, giving index error."
"When a player wins, the score is reset instead of being carried forward."
"If a player loses a life, the score remains the same, instead of getting reduced."
"There are no broken stairs in the game. It might appear so because your terminal window size is small."
"Jump hasn't been implemented properly. The transition steps are not shown. The player directly reaches 4 steps right or left."
"Should have done exception handling for the termcolor module, since it is not installed by default with python. It has to be installed separately."
"Some method names are not in Camel Case."
"Use of magic numbers : 79,29,30,80,60 etc."
"Variable names not in Camel Case. eg. isjumping"
"Incorrect format for assignment statement. Incorrect use of whitespaces"
"Code is not commented to make usage of functions clear."
"Positive : Code is well commented"
"Use of Magic numbers."
"PEP-8 standards for spacing not followed."
"Uniformity in variable naming is not there. color begin with a lowercase 'c', while Floor with an uppercase 'F'."
"The below variable names should have been in allcaps."
"Below variables have been declared in other modules as well. Should declare them in one separate module, then import it in all other modules."
"Game doesn't have broken ladders."
"Very long,extremely nested and complicated function. Difficult to read(Code smell)"
"Should have separated it into smaller functions."
"Dead code should have been removed"
"Method names not in camel case"
"magic numbers used"
"Spaces not according to PEP-8 standards."
"Not removed dead code"
"Dead code"
"variable names not in camel case"
"If 'a' or 'd' is pressed when a player is at the middle of the stairs, the program exits, saying list index out of range."
"A player never collides with a fireball if he is at the middle of a ladder. -> BUG"
"Clock functioning not specific, declared but not used.\
 "
"useless code parts should be removed! (code smell)"
"class definition isn't proper."
"Decided earlier to use, but couldn't use it later."
"docstring wasn't considered important to use then."
"Agreed! But it wasn't confusing for me."
"I didn't use any private variables in this code, wasn't needed as such."
"Code was written in a very less span of time, such standards were overlooked so."
"Code was written in a very less span of time, such standards were overlooked so."
"docstring wasn't considered important to use then."
"what is old-style? :P"
"Your comments seem to be very subjective in nature. I'll consider it though from next time."
"Hmm\
"
"typo."
"yes! It was simple this way."
"direction for fireballs."
"Motion is not controlled well"
"Well commented code! (y)"
"fixed it by the time of evaluation."
"had no time to code for score display then. :P"
"Levels were not defined. Map reset happens everytime though."
"I changed to private variables by the time of evaluation."
"import is not recommended by PEP-8"
"GLOBAL_CONSTANTS should be capitalized."
"Code smell:\
Repetitive code, simple function which draws ladders based on specification stored in a constant is preferable."
"Large number of objects drawn in each loop with no FPS enforcement."
"can not leave the game in between no quit button"
"Found indentation with tabs instead of spaces (mixed-indentation)"
"Trailing whitespace (trailing-whitespace)"
"Wrong hanging indentation."
"Unnecessary parens after 'while' keyword (superfluous-parens)"
" Exactly one space required around comparison\
			elif lev==2:\
           ^^ (bad-whitespace)\
"
