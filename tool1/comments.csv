"PEP-8 standards have not been followed."
"No modularity. Try to break long files into modules. They are easier to maintain. "
"Unnecessary parenthesis around if statements. "
"The function 'move' is very long. This is a bad code smell. Try to write smaller functions."
"'getX' and 'getY' functions are similar to ones used in 'Player' class. This is a bad code smell since the code is duplicated. Better to define these functions in their parent class 'Person' and use polymorphism."
"variable 'self__flc' has been assigned a value and is then unused. This should be avoided."
"Bad logic. Fireballs will only move when the Player moves. Fireballs should move continuously."
"Good use of colours!"
"'printh', 'printd' and 'printf' are identical functions. Only one of them is enough since you are passing the character to be printed as argument."
"Arguments 'y' and 'x' have not been used. This is a bad practice to have unused arguments in functions."
"''' are used for string statements that define the behaviour of a function. Should not be used for comments."
"Repetitive code to generate coins on each level. This is a bad code smell. Use another loop which increments i by 4 in each iteration and j is any random integer between 0 to width of the board."
"It is a good practice to write docstring for each method."
"An object of class 'Screen' has no member called 'printpm'. "
"class 'Screen' is a very long class. Long classes are difficult to maintain. Try breaking them into smaller classes."
"Unused variable 'F'. "
"Unnecessary use of a class, since there is no use of the 'self' variable. This could as well have been a function."
"Bad code smell. The moves of the Player should be implemented using a function in class 'Player'. "
"Should use a function to check for a wall."
"Last 20 lines of code are not understandable to a new user. This is a bad code smell and a function with appropriate name should be used. It is bad practice to write such code without a function. "
"Bad code. Class 'Board' is not defined in this file and thus cannot be called like this. It should be module.Board where module is the file with 'Board' definition."
"Insufficient functionality: 'Jump' for a player is not implemented."
"The five 'if' statements used can be combined into one with a better implementation, since each calls the same function. "
"The 'pygame.draw' statements should have been put under the module 'Board.py'. This makes them easier to maintain."
"Insufficient functionality: The window does not display the number of lives."
"The function 'game_loop' is a very long function and thus a bad code smell. Try breaking it into smaller functions."
"Only a single file used. This is a very bad code smell. Try breaking it into smaller files."
"It is a good practice to write docstring for each defined method."
"Bad logic. According to the code, the fireball will only move when the player moves. Fireballs should move continuously."
"Class 'player' is a very long class. This is a bad code smell and smaller classes should be used."
"Duplicate lines of code is a bad code smell. The functions 'update', 'gorights', 'golefts' are similar and it is better to use them from their parent class."
"In functions 'falldown' , 'rebound' etc, the argument 'board' is unused. This is a bad code smell."
"Argument 'object' is unused."
"Unused arguments 'board' and 'coinlist'. This is a bad code smell."
"The variable 'chose' is unused. Use of these variables should be avoided."
"Function names 'l', 'lc', 'fire', 'brick' donâ€™t make sense. Try to use better function names that encourage better understanding of what the function does."
"Function 'l' of class 'Block', function 'lc' of class Coin, function 'brick' of class 'Board' and function 'fire' of class 'Fireball' are similar functions. Try to use polymorphism and avoid code duplicity."
"For encountering a ladder, coordinates have been hard-coded. This is a bad code smell and reduces extensibility."
"Bug: The fireballs always use the ladder to go down and never go straight. This gives the user an easy cheat to avoid the fireballs."
"Similar lines. Better to use a loop and an array of objects to blit them."
"Variable 'p' is unused. Bad practice."
"Line too long and hard-coded. This reduces extensibility."
"It is a good practice to write docstring for each method."
"Function 'imgchange' is similar in all classes. Avoid repeating code and use polymorphism."
"Imports 'time', 'random' and 'os' are not used. This is a bad practice."
"Variables 'changex', 'changey', 'man' etc are unused variables. This is a bad code smell."
"Very long line. Long lines reduce readability and are a bad code smell."
"Coordinates have been hard-coded. This is a bad code smell and reduces extensibility. "
"Use functions to change coordinates of various objects. Changing them directly is a bad practice."
"Function 'game_loop' is a very long function. This is a bad code smell. Try breaking it into smaller functions."
"Some general guidelines:4 spaces should be used instead of tabs for indentation to conform with the PEP 08 standards.The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.A line shouldn't be too long. It should be < 80 characters long.There should be no trailing whitespaces."
"There should be a function docstring, describing what 'build_stage' does."
"There is a lot of repetition. Bad code smell. Could possibly made better with loops."
"Some general guidelines:4 spaces should be used instead of tabs for indentation to conform with the PEP 08 standards.The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.There should be no trailing whitespaces."
"Class name should start with a capital letter as per the PEP 08 standards."
"New-style class should be used: 'class person(object)'"
"Class docstring should be written describing the purpose of the class. It should be written as """""" <class docstring> """""" ."
"Class name should start with a capital letter as per the PEP 08 standards."
"Class docstring should be written describing the purpose of the class. It should be written as """""" <class docstring> """""" ."
"This class is really not doing much. Bad code smell - Lazy class."
"bug: Donkey should move randomly. But here, he is stationary."
"Some general guidelines:4 spaces should be used instead of tabs for indentation to conform with the PEP 08 standards.The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.A line should be too long. It should be < 80 characters long.There should be no trailing whitespaces."
"'time' is imported, but never used."
"There should be a function docstring, describing what 'text_objects' does."
"The function has too many branches(48), too many local variables(21) and too many statements(129).The function is too long. Bad code smell. Should be broken down into more functions."
"bug: Fireballs don't kill player."
"Some general guidelines:4 spaces should be used instead of tabs for indentation to conform with the PEP 08 standards.The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators."
"'randint' imported but never used."
"A space is required between two comma-separated values as per PEP 08 standards."
"A method docstring should be written, stating what the method does."
"Class should have a docstring explaining the purpose of the class."
"Some general guidelines:4 spaces should be used instead of tabs for indentation to conform with the PEP 08 standards.The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators."
"'randint' imported, but never used."
"Class should have a docstring explaining the purpose of the class."
"New-style class should be used: 'class Donkey(object)'"
"Too many 'if-elif' branches. Bad code smell - Cyclomatic complexity."
"Too many 'if-elif' branches. Bad code smell - Cyclomatic complexity."
"bug: Jumping from a ladder erases that particular 'H'."
"bug: Jumping to a broken ladder creates an additional 'H' if there are 2 or more empty spaces between the player and the first 'H'."
"bug: Jumping on a fireball doesn't kill the player."
"bug: Pressing 'space', 's', 's', 'w' causes the player to go into the platform below and erase the 'X' on coming out of it. This can cause the player to go out of bounds too."
"Some general guidelines:The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.Class attributes should be defined inside the __init__ method."
"bug: On pressing 'w', 'e' or 'r', another instance of the board flashes below the real board."
"'random' imported but never used."
"Class name should start with a capital letter as per the PEP 08 standards."
"New-style class should be used: 'class game(object)'"
"Class docstring should be written describing the purpose of the class. It should be written as """""" <class docstring> """""" ."
"Class has too many instance attributes(23) and is very large. Bad code smell. Try to divide into more classes."
"A space is required between two comma-separated values as per PEP 08 standards."
"Too many 'if-elif-else' branches. Bad code smell - Cyclomatic complexity."
"'set[1-6]' not good choice of variable names, not very descriptive."
"'Bare-except': no exception type specified."
"Some general guidelines:The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.Class attributes should be defined inside the __init__ method."
"Class name should start with a capital letter as per the PEP 08 standards."
"New-style class should be used: 'class board(object)'"
"Class docstring should be written describing the purpose of the class. It should be written as """""" <class docstring> """""" ."
"Some general guidelines:The variable-names, in general, do not follow naming conventions. Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names.A pair of spaces should be used around an assignment(or other) operators.Class attributes should be defined inside the __init__ method."
"'time' imported but never used."
"Class name should start with a capital letter as per the PEP 08 standards."
"New-style class should be used: 'class person(object)'"
"Class docstring should be written describing the purpose of the class. It should be written as """""" <class docstring> """""" ."
"Class should have an __init__ method."
"bug: Pressing 'a' or 'd' while on a ladder causes the player to appear from top of the level, makes the player invulnerable to fireballs, and sometimes, causes the game to crash."
"bug: Player doesn't jump."
"Class name should start with a capital letter as per the PEP 08 standards."
"Class has no public, and only private methods. These methods can(in OOP) only be called inside the class. This is bad practice. "
"A space is required between two comma-separated values as per PEP 08 standards."
"There should be one empty line before defining a new method as per PEP 08 standards."
"There should be two empty lines before defining a new class as per PEP 08 standards."
"Accessing class queen's attribute directly. Not a good OOP practice. "
"bug: While on a ladder, the player jumps through floor tiles."
"bug: Colliding with a fireball while jumping doesn't kill player."
"Too many 'if-elif-else' branches. Bad code smell - Cyclomatic complexity."
"Too many 'if-elif-else' branches in this method. Bad code smell - Cyclomatic complexity."
"Class has just 1 public, and others are private methods. These methods can(in OOP) only be called inside the class. This is bad practice. "
"Class has no public, and only private methods. These methods can(in OOP) only be called inside the class. This is bad practice."
"Too many 'if-elif-else' branches. Bad code smell - Cyclomatic complexity."
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"bug: Running the game on some systems(Fedora 22 in my case) gives error: 'pygame.error: Unrecognized music format', but that's probably a pygame error. This error is caused due to lines (DKMain.py:46-48 and 65,66). Removing these lines will make the game work on even those systems."
"bug: When the game exits, the cursor and anything that is typed in the terminal is not visible. This is probably beacause of some problem with 'tty'. Using 'reset' in the terminal fixes this."
"The objective was an ASCII game only. pygame was imported just for the background music."
"This is not a bug. The ASCII version of the game waits for a keypress, so, it's not possible for the game to run independently. "
"This is not a bug. In the ASCII version, you essentially print the level on the screen and clear it in quick succession. So, depending on your machine, this may or may not be smooth. "
"Could you please elaborate?"
"This is not a bug. Read the README file. I have implemented the jump such that gravity is turned off for 3 steps. "
"I do not agree. There is no right way to implement a jump. My jump is just a bit out of the ordinary that it gives you more freedom to move. There is such a thing as creativity."
"bug: If the player tries to climb a ladder with empty space below it, it falls down, instead of climbing."
"New-style class should be used: 'class Body(object)'"
"Attributes 'ladderCoordinates', 'coinCoordinates' and 'coinCount' should be defined inside __init__ ."
"Attributes 'levelB', 'pSpawnPoint' and 'prinPoint' should be defined inside __init__ ."
"Attribute 'bodyPos' should be defined inside __init__ "
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"'time' is imported, but never used."
"'Body' is imported, but never used."
"Above modules are relative-imported. This violates PEP 0328 standard. Should be something like - 'from .Level import Level'."
"New-style class should be used: 'class DKMain(object)'"
"Possibly too many instance attributes used(11). Bad code smell."
"The variables defined in the method 'reload' should have been defined in __init__ instead."
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"'time' is imported, but never used."
"'Body' module is relative-imported. This violates PEP 0328 standard. Should be something like - 'from .Body import Body'."
"Attribute '__donkeyPos' should be defined inside __init__."
"There should be a method docstring, describing what 'randMove' does."
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"'Body' module is relative-imported. This violates PEP 0328 standard. Should be something like - 'from .Body import Body'."
"There should be a class docstring describing the purpose of this class."
"bug: Colliding with a fireball in the spawn position and staying there takes out all three lives in 3 steps."
"Attributes should be defined inside __init__."
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"'sys', 'os', 'signal' and 'tty' imported but never used."
"'time' is imported twice and never used."
"New-style class should be used: 'class Level(object)'"
"This particular issue, I have already pointed out why I have done so. Please read comments on lines 16-19(Level.py)"
"Variable 'temp' is never used."
"There should be a method docstring, describing what 'findLadderCoordinates' does."
"There should be a method docstring, describing what 'findCoinCoordinates' does."
"The variable-names, in general, do not follow naming conventions.Follow: http://pylint-messages.wikidot.com/messages:c0103 for regex of valid names."
"'sys' and 'tty' imported but never used."
"'Body' module is relative-imported. This violates PEP 0328 standard. Should be something like - 'from .Body import Body'."
"Attribute '__playerPos' should be defined inside __init__."
"Attribute '__donkeyPos' should be defined inside __init__."
"OOP concepts, data encapsulation not implemented."
"PEP-8 guidelines not implemented."
"Doctrings absent for classes and methods."
"Wildcard imports used"
"PEP 8 guidelines not followed."
"OOP concepts not implemented properly."
"Redundant statements used for generating coloured characters. Global variables could have been used."
"Docstrings absent for certain classes and methods."
"Movement of fireball not implemented."
"Data abstraction not implemented."
"Unnecessary public variables."
"Incorrect board logic makes the game lag."
"Set tab size in IDE incorrect in accordance with PEP-8 standards."
"Security issue as it exposes project file names of other projects the user is working on."
"Missing module docstring"
"Missing class docstring"
"Class has no init method"
"Undefined variable 'Person'"
"Too few public methods (1/2)."
"Function collect_coin() not implemented."
"Invalid method name ""opposeWall"""
"Invalid argument name ""b"""
"Missing method docstring"
"Exactly one space required after comma"
"Instance of 'Donkey' has no 'updatedposition' member"
"Exactly one space required around comparison"
"Bad indentation. Found 13 spaces, expected 12"
"Bad indentation. Found 9 spaces, expected 8"
"Bad indentation. Found 13 spaces, expected 12"
"Invalid syntax for import in line 1 and line 2"
"Unused import Donkey from wildcard import"
"Missing class docstring."
"Undefined variable 'self'"
"Class Player inherited from Person class not implemented."
"get_position() and set_position() functions not implemented in Person class."
"Function check_wall() and check_collision() not implemented."
"Missing function docstring in every function."
"Exactly one space required after comma"
"Exactly one space required around assignment"
"Indentation levels do not match to the outer indentation level."
"Invalid method name ""opposeWall"""
"Instance of 'Person' has no 'newposition' member"
"Exactly one space required around comparison"
"Indentation levels do not match to the outer indentation level."
"Invalid method name ""coinCheck"""
"Unused argument 'b'"
"Game does not run ."
"class docstring and module docstring missing"
"line 2-27 : required exactly one space after comma"
"invalid syntax."
"'placing atleast 20 coins' not taken care of."
"accessing uninitialized variable count."
"Invalid Syntax."
"missing class player.py."
"class Fireball not implemented."
"Inappropriate use of encapsulation."
"main.py does not contain the code to start the game."
"'Princess' not implemented."
"class docstring missing."
"line 5-30 : required exactly one space after comma."
"Game does not run. Files 'functions.py' and 'try2.py' both give an error on execution and mess with the terminal input/output."
"Code rating : -149.74/10"
"No modularity used.layout.py and ssa.py have not been used anywhere."
"missing classes fireball and player."
"Too many unused imports ."
"E302 expected 2 blank lines, found 0.(PEP8 violation)"
"Reimport 'sys' (earlier imported in line 3)"
"E401 multiple imports on one line (PEP8 violation)"
"Put these classes in seperate modules."
"Functions get_position() and set_position() missing."
"Function check_collision() is missing."
"The function update_newposition does not do anything.Bad code smell."
"Function collectCoin() missing."
"The functions get_position and set_position should be in base class person."
"Missing method docstring."
"Arguments number differs from overridden method"
"The function move should be in base class person."
"Instance of 'donkey' has no 'new_newposition' member"
"Instance of 'Board' has no 'initialize_board' member."
"Missing method docstring"
"No value for argument 'colour' in function call."
"No value for argument 'colour' in function call."
"Invalid method name ""__setWalls""."
"lines 131 - 155 , Expected exactly one space after the comma."
"Missing function docstring"
"Exactly one space required around assignment"
"Undefined variable 'b'."
"Error : Accessing move function of uninitialized variable p. "
"Undefined variable 'b'."
"Indentation with tabs instead of spaces. (PEP8)"
"Function checkCollision() not implemented."
"move function does not do anything.Bad code smell."
"Function update position does not do anything.  Bad code smell.Functions get_position() and set_position() not present in person class."
"Invalid method name ""checkDonkey"""
"missing class docstring."
"Large Class Player. Bad code smell."
"lives of player not implemented."
"Invalid method name ""getScore"""
"Invalid method name ""incrementScore"""
"This function should be moved to base class person."
"Invalid variable name ""x"""
"This function should be moved to base class person."
"Separate move functions for donkey and Player class. move function should be present in base class Person.No polymorphism."
"get() and set() functions should be present in base class person."
"Too many conditional statements.Conditional Complexity , bad code smell."
"lines 252-277 : Exactly one space required after comma"
"No class for fireballs."
"Too many branches . Present : 14 , maximum allowed : 12."
"Too many statements in the function. Present: 53 Maximum allowed: 50."
"Exactly one space required after comma"
"line 344-370 : Found indentation with tabs instead of spaces."
"Exactly one space required around comparison"
"Missing module docstring"
"Invalid argument name ""ID"" , ""S"" ."
"Exactly one space required around assignment"
"Exactly one space required after comma"
"Exactly one space required around comparison"
"Missing module docstring"
"Old-style class defined."
"Exactly one space required around assignment"
"Invalid attribute name ""fixedMAP"""
"Attribute 'fixedMAP' defined outside init "
"Invalid variable name ""f"""
"Exactly one space required around comparison"
"Exactly one space required around assignment"
"Line too long (81/80)"
"String statement has no effect"
"Unable to import 'msvcrt'"
"Method could be a function"
"Method could be a function"
"Exactly one space required after comma"
"Unused variables 'de' and 'dw'."
"The game displays correctly only for a full-hd screen."
"Unused import Fireball from wildcard import."
"Invalid constant name ""level""."
"Invalid constant name ""score""."
"Missing function docstring."
"Too many local variables."
"Too many branches (57/12)."
"Too many statements (167/50)."
"Using global for 'level' but no assignment is done."
"Invalid variable name ""S""."
"Invalid variable name ""P""."
"Invalid variable name ""D"""
"Invalid variable name ""Balls"""
"Invalid variable name ""kb"""
"Redefining name 's' from outer scope(line 211)."
"Too many if-else statements. Bad code smell: Conditional Complexity."
"Code Duplicacy: Bad code smellshould have implemented a function for check_wall() in player."
"Exactly one space required around comparison              :-   elif P.onladder and S.fixedMAP[Ppos[0]+1][Ppos[1]]=='H':"
"Trailing whitespace"
"Exactly one space required around assignment"
"Exactly one space required after comma                     in :- for i in range(1,100000):                 "
"Line too long (117/80)"
"Invalid variable name ""Ppos""."
"Missing module docstring"
"Wildcard import ball."
"Old-style class defined."
"String statement has no effect."
"Attribute 'onladder' defined outside init"
"Instance of 'Person' has no 'collect_coin' member"
"Invalid argument name ""S"""
"Trailing whitespace"
"Attribute 'onground' defined outside init"
"Read readme.txt on how to jump properly."
"Exactly one space required around assignment"
"Instance of 'Person' has no 'jump_hordir' member"
"Line too long (81/80)"
"Exactly one space required around comparison"
"Too many instance attributes (8/7)"
"Exactly one space required after comma"
"init method from base class 'Person' is not called"
"Attribute '_direction' defined outside init"
"PEP-8 recommends using absolute imports rather than wildcard imports."
"Function docstrings are missing"
"Instead of writing one large class,it can be refactored into small classes."
"Too few public methods."
"Code smell - Rather than redefining commonly used variables(like colors) it can be put into a separate file."
"Wildcard import violates PEP-8"
"Code smell - Redefining colors again."
"Code smell Lazy class"
"Code smell - Redefining colors again."
"Function docstrings missing"
"Unused variable 'hit'"
"Wild-card imports violate PEP-8"
"Code smell - Redefining colors again."
"Too long lines are used violating PEP-8"
"Code smell - Instead of writing one large class,it can be refactored into small classes."
"Bug - Player falls from Broken ladder."
"BUG Player does not climbs ladder smoothly,sometimes it gets stucked."
"Code smell - Redefining colors again."
"Code smell Cyclomatic complexity"
"Code smell - Redefining colors again."
"Code smell - Redefining colors again."
"lazy class,does too little.It can be merged with other class."
"No public member present for this class."
"Found indentation with tabs instead of spaces"
"Exactly one space required after comma"
"Too many arguments to init method"
"All imports are not used"
"PEP - 8 standards not followed in spacing"
"Line too long according to PEP-8"
"Nice use of getX"
"Module docstrings missing"
"Mixed indentation with spaces and tabs"
"There should be at least one public method"
"Should have atleast one public method."
"Should have atleast one public method"
"Code smell - Large class,it can be refactored"
"Code smell - Some classes are very similar"
"Code smell - Different classes for each platform"
"Code smell - Individual class for each platform"
"Indentation does not follows PEP - 8"
"Code smell - This function is very long.It should be refactored"
"Too many branching"
"Indentation not according to PEP - 8"
"Docstrings missing"
"Too many parameters passed to init methid."
"Code smell - Rather than implementing different move function it should inherit these functions from 'person' class"
"Code smell - This class is very large,it can be refactored into smaller ones."
"All imported modules not used."
"Docstrings missing"
"Indentation not according to PEP - 8"
"Too long lines are used violating PEP - 8"
"Code smell - Too much branching"
"Code smell - Very small class,does very little."
"Code smell - All imported modules not used"
"Mixed indentation violating PEP - 8"
"All imported modules are not used."
"Docstrings missing"
"BUG - while on ladder fireball does not affect player's life"
"pressing 'q' button does not quits game"
"PEP-8 standard not followed.Each import should be in a new line."
"Missing method docstring."
"Rather than implementing move for each character it should use move method of parent class."
"No private  method used."
"PEP-8 standard not followed.Each import should be in a new line."
"Wildcard import should be avoided.Only required things should be imported."
"Old-style class defined."
"Exactly one space required around assignment"
"Line too long,violates PEP-8"
"Attribute 'falling' defined outside init"
"Attribute 'ground' defined outside init"
"Attribute 'falling' defined outside init "
"Too many arguments"
"init method from base class 'Person' is not called."
"Missing method docstring"
"Code smell - Cyclomatic complexity:Too many branches."
"Found indentation with tabs instead of spaces (mixed-indentation)"
"Missing method docstring"
"Code smell -Cyclomatic complexity Too many branches"
"Attribute 'vel' defined outside init "
"Attribute 'vel' defined outside init"
"Unused argument 'gameinst'"
"Missing class docstring"
"Missing method docstring"
"Line too long."
"Code smell -Long method Code can be refactored."
"PEP-8 standard not followed.Each import should be in a new line."
"Wildcard import should be avoided.Only required methods and variables should be imported."
"Missing function docstring"
"Absolute import preferred over wild-card import according to PEP-8"
"According to PEP-8 standard Imports should be on new line like:- import os import sys"
"According to PEP-8 standard each Import should be on a new line"
"Code Smell Cyclomatic complexity"
"Absolute imports are preferred over wildcard imports."
"Class has no init method"
"Missing method docstring"
"Instance of 'Person' has no 'idChar' member"
"Unnecessary parenthesis after 'if'"
"Instance of 'Person' has no 'position' member"
"Undefined variable 'position'"
"Too many branches"
"Too long statement,does not follow PEP-8 standard."
"Unnecessary parenthesis after 'elif'"
"Too long statement,does not follow PEP-8 standard."
"Redefining name 'Player' from outer scope (line 17)"
"Unnecessary parenthesis after 'if'"
"Unused variable 'i'"
"Unused variable 'rows'"
"Unused variable 'columns'"
"Unused variable 'k'"
"Unused variable 'rows'"
"Unused variable 'rows'"
"Unused variable 'columns'"
"Found indentation with tabs instead of spaces"
"Missing function docstring"
"Redefining name 'i' from outer scope (line 4)"
"Unnecessary parenthesis after 'if' keyword"
"Found indentation with tabs instead of spaces"
"Exactly one space required after comma"
"Unnecessary parenthesis after 'if' keyword"
"BUGS All required functionalities not present in the game:- 1.) Player can't jump. 2.) There is no fire balls in the game. 3.) No donkey present in the game. 4.) No princess is there to be saved in the game,therefore game never ends. 5.) No gravity present."
"Absolute import is recommended over wild-card import."
"According to PEP-8 standard Imports should be on separate line."
"Exactly one space required after comma"
"Unnecessary parenthesis after while"
"Found indentation with tabs instead of spaces"
"Unnecessary parenthesis after 'if'"
"Exactly one space required around comparison"
"Trailing whitespace"
"Code smell Contrived Complexuty"
"Too long lines used (line no.-34,43) violating PEP-8 standard. PEP-8"
"Docstrings are missing"
"Unnecessary parenthesis after 'if'"
"Old-syle class defined."
"Too few public methods."
"Function docstings missing."
"Mixed indentation(using spaces and tabs)"
"Function docstrings are missing"
"Redefining built-in bool.Better to use some other name for variable."
"No public method for this class."
"Too long lines are used somewhere violating PEP-8 standards."
"The board has been hard-coded. Stair's locations should have been generated randomly."
"Instead of typing the whole layout, the author of the code could have reduced the size of the code by using for loops."
"According to PEP-8 standards, there should be a space after each comma. At most of the places in the code, it hasn't been followed."
"This class could have been broken into small classes. That would have enhanced readability of the code."
"The constants should have been placed in a separate file to easily change them when required."
"Variables like b and p don't tell anything about them. Variables should be used in such a manner to explain their usage."
"There should be a space before and after the equal to sign according to PEP-8 standards."
"The code should be written in different classes to enhance readability. Breaking into classes also makes it easy to debug the code. Writing all the functions at the same place is a bad practice."
"This class should have been written in a separate file and should have been imported from there as a module. Writing classes in the same file is a bad practice."
"There must be a space after every comma. It is a good PEP-8 standard to follow."
"There is a lot of repetition of the code. "
"This class has too many functions. It could have been broken into more classes to enhance readability and making it easy to debug. Moreover, the code should have been written in separate file and should have been imported from there."
"There is a lot of repetition of the code."
"The fireballs follow a fixed path. The path should have been random. They only fall off the edges. They should also down the stairs."
"Variable name dd doesn't tell anything about it. Variable names should be chosen in such a way so that it explains its usage."
"This code is too large for a file. It must be broken into smaller files and modules."
"All modules should be imported in separate lines."
"All imports should be made in separate lines."
"Code smell : bad whitespaces."
"Fireballs follow a fixed path. they only fall off the edges and not the stairs. this behaviour should have been random."
"variables like ch, x3, y3 don't tell anything about their usage. The variable names should be such that they explain its usage. Using such variables is a bad practice."
"there should be space before & after the equal to sign. also there should be a space after the comma. This code performs poorly on ground of PEP-8 standards."
"if the player doesn't make a move, the fireballs also stop moving. Rather fireballs should be moving irrespective of whether the player is moving or not. This is a major bug in the code."
"excessively long function. it should have been broken into smaller functions and classes to make it easy to read and debug."
"it is not a good practice to use variables like x. The variable names should be such that they explain its usage."
"The player position should be reset after losing every life. This thing has not been implemented in the code."
"There is a lot of repetition of code. This could have been avoided by using functions and for loops."
"This function should have been broken down into smaller functions. writing such large functions makes code difficult to understand and debug."
"x, y , ch are bad variable names."
"The game board has been hard-coded. It should have been randomly generated as specified."
"Many functions have been written in the same class. These functions should have been written in separate classes."
"Good use of inheritance."
"There is a lot of repetition of code. It could have been avoided by use of for loops and functions."
"Variables like w4 and w5 don't tell anything about their usage. The names should be chosen such that they explain its usage."
"There is a lot of repetition of code."
"PEP-8 standards not followed, there should be a space before and after every equal to sign and after every comma."
"This function is very large. It should have been broken down into classes and smaller functions."
"The board layout has been hard-coded. Instead it should have been randomly generated as specified."
"A lot of code repetition."
"The basic functionality of donkey and fireballs is missing."
"pm - bad use of variables."
"Didn't implement side jumps. Player can jump only at its position."
"The number of coins was kept low. The coins were placed only on the surface and not in the air because player couldn't jump sideward."
"This file holds most of the variables used in the game. These were imported in the main program from here. The idea was to easily change them if required."
"Didn't make good use of inheritance. Some functions like move and position which were common to both player and donkey could have imported from a separate class."
"Fireballs direction has been kept to be random. Because of this, they cover whole of the board. Their direction as well as location is decided completely through randomly generated numbers. A list with five values does this for each of the fireball on the board.This is a very good feature of the code."
"The main function is too large. It could have been broken to smaller functions."
"This function has many repetitions. Many of this could have been avoided by use of functions. "
"The whole codes for situations like (to check if player has got key, if player has captured queen, if player has hit donkey) has been written in the main function. It shouldn't be this way."
"The code performs badly on account of PEP-8 standards. The main among them are - not giving proper spaces after '=', not giving proper space after ',' , indentation with tab instead of spaces, trailing whitespaces."
"The code doesn't follow PEP-8 standards. It has a pylint rating of -10."
"No space has been given before and after equal to sign. A bad practice."
"Didn't use inheritance to its best,could have inherited more functions."
"The code performs badly on account of PEP-8 standards. The main among them are - not giving proper spaces after '=', not giving proper space after ',' , indentation with tab instead of spaces, trailing whitespaces."
"The code size could have been reduced by using more for loops. That would have enhanced readability of the code."
"pep-8, standards were not followed while giving whitrespaces and naming classes"
"Long argument list, argument list is too long. The co-ordinates of start and end can be sent in a list/tuple to increase readability  "
"Naming, Constants must be in all caps"
"Readability, Line is too large and the comment is absurd and obscures the code"
"Dead code, must be be removed"
"Hard coding, Too much hard-coding in main flow. Make functions to make the flow of the program clear"
"Data clump, Lines are too long and don't explain the numerical values they use"
"Readability, Should have declared scaling variables for values like value display_width/(4*block_size)  to improve readability of code"
"Dead code, unused code must be removed"
"Naming, Class names must be in CamelCase"
"Data class, This class has no methods"
"Refused Bequest, If you inherit from a class, but never use any of the inherited functionality, should you really be using inheritance? Person neither has methods nor the init of parent is used"
"Unutilized attribute, lives attribute has no impact on the game"
"Feature envy, Position is the attribute of parent. This method should belong to person class"
"Inheritance is pointless "
"Class has no methods"
"Data class, Avoid classes that passively store data. Classes should contain data and methods to operate on that data, too."
"Dead code, remove unused code"
"Naming, Constant names must be in all caps"
"Comments, No reason for +50 mentioned in the code"
"Unused parameters, stage is unused and need not be passed to this function"
"Dead code, commented-out code between main code makes the function flow unclear"
"Readability, Line is too long"
"Fireballs are not killed causing the game to crash due to indexing error"
"Indentation, double indented code. Syntax is correct, but inconsistent"
"Should not have used a .gif file. As pygame does not supported animated images. It shows the image as a static one."
"The code has been rated at -15.29/10. The main problem with this code was not using white spaces after assignment , commas AND mixed indentations. Other than that the other errors are very minute. Removing the white space error took the score to 4.51/10"
"All imports have to be written in separate lines.Followed a good practice ! :)"
"It is not a good practice to import ""*"" from a module. Instead just import whatever is used only as this will make it clear what exactly are used from that module."
"Same thing as above. Using wildcard is not preferred unless all attributes are really being used."
"User modules should come after library modules. The actual order must be - 1) import pygame 2) import random 3) import objects 4) import person"
"Instead of ""x"" and ""y"" variable names could have been changed to make them readable and explain what these variables contain."
"Too many blank lines"
"PEP-8 standards : ""Surround top-level function and class definitions with two blank lines.""Should have left 2 blank lines."
"Good practice of leaving a line between functions in a class."
"Missing doc-string in the function."
"It is okay to have a line length of 80-100. The current line pointed has 85 characters. According to strict PEP-8 standards the maximum line length is only 79 characters."
"Your code has been rated at -15.17/10. As mentioned above the main problem was with white spaces and mixed indentation. The other errors are very few. Removing the white space error took the score to 2.50/10."
"bug : The player climbs broken ladders. And falls from the ladders on jumping."
"exit is a builtin variable. Should not have used it."
"Too many constants used. This must vary from screen size.(306 AND 120 constant numbers)"
"Only two string literals are used ""Final score"" and ""Press 'q' to quit"" . This is not a code smell."
"Absolute font size used. With varying display size the font size should change."
"display_game.get_size() called 4 times. Instead the function could be called once and the return value stored in the variable and the variable be used multiple times."
"The initial score was -17.12/10. Removing white spaces error changed into 5.17/10"
"Function and its variables not used anywhere."
"There is no problem in using global here. It is just a method, not enclosed inside any class."
"They need not be reset. The assignment specification document does not state anything of that sort. So it is upto the hands of the developer what he wants."
"Private members must be used only when necessary. Here there is no need for private members."
"Duplicated code - This code is repeated. Used for players collision. Both could have been integrated into a single function."
"The modification of levels is given to the hands of the game designer. Making it random would not allow the developer to modify a level if required.They are never generated randomly in Original DonkeyKong game too. This ensures that there is a proper level progress made. The levels are fixed. Randomly generating a level does not make sense for this game."
"This is how a game layout is made in real. The layout is hard coded(WHICH MUST BE) but the positions are not hard coded. They are never generated randomly in Original DonkeyKong game too. This ensures that there is a proper level progress made. The levels are fixed. Randomly generating a level does not make sense for this game."
"As given in WIKIPEDIA for code-smell - ""Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions."" That is what is done. This a level.txt file. It is not a ""CODE"". That is why these literals are separated into txt files for use. Code smells are seen for codes not data files !"
"Your code has been rated at 6.20/10 (previous run: -12.59/10, +18.80)The previous run was without modifying white spaces error."
"The variable-names, in general, do not follow naming conventions. http://pylint-messages.wikidot.com/messages:c0103"
"All imports have to be written in separate lines.Followed a good practice ! :)"
"Unnecessary blank lines. PEP-8 does not allow such blank lines "
"TAB-style indentation used. Instead 4 spaces indentation must be followed."
"As given in PEP-8 standards after assignment of variables there must be a white space."
"All variables are not used. Assigned unnecessarily."
"Both the if statements could have been combined into a single if condition using 'and' keyword."
"Should not have hard coded the font-size."
"This is how a game layout is made in real. The layout is hard coded(WHICH MUST BE) but the positions are not hard coded. They are never generated randomly in Original DonkeyKong game too. This ensures that there is a proper level progress made. The levels are fixed. Randomly generating a level does not make sense for this game."
"Levels are hard coded. The layout is hard coded(WHICH MUST BE) but the positions are not hard coded. They are never generated randomly in Original DonkeyKong game too. This ensures that there is a proper level progress made. The levels are fixed. Randomly generating a level does not make sense for this game."
"As given in WIKIPEDIA for code-smell - ""Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions.""That is what is done. This a level.txt file. It is not a ""CODE"". That is why these literals are separated into txt files for use. Code smells are seen for codes not data files !"
"Bad way of writing a function in an odd place without any proper structure."
"initX and initY could have instead been sent as a tuple or list."
"This module is not used at all. Included in this folder by mistake."
"Too many literals used as result of hard coding positions."
"Too many loops/conditions. Code smell : Has a very high cyclomatic complexity."
"Conditions such as None and False must not be checked using ""="" according to PEP-8 standards. Instead the keyword ""is"", ""not"" must be used."
"Check if it is none using ""is"" keyword. (PEP-8)"
"Has a high cyclomatic complexity."
"All functions should have been separated by a new line (PEP-8)"
"bug : The fireball must be eliminated at the player spawn position. But in this game they cross the player spawn position and eliminate at the corner-most point."
"not user friendly : The fireballs fall down in a very unpredictable way. That is, the falling of fireball is not a very smooth transition."
"bug : In the assignment requirements document it was clearly stated that for player movement {""w"", ""a"", ""s"", ""d""} must be used. Here instead arrow keys are used."
"You have implemented it the wrong way then. Thats why it is called as a bug :P It is of course meaningless if the person is in air !"
"As stated in the assignment requirements document the jump should have a total transition of 4 steps. 2 steps up and 2 steps down. Not 4 steps up and 4 steps down. Basically we want to limit the players jump to less than the floor height."
"bug : The total score is displayed as ""1"" before any key is pressed(Beginning of the game). Then it changes to 0 after a key-press. And similarly the Lives is shown as Lives Left:0  Could be initialization problem."
"Good practice of leaving space after ""="""
"Line too long. Has 81 characters. PEP-8 standards limits the line size to 79 characters only."
"Bad way of creating a level. Makes it difficult to modify. Instead the level could have been read from another text file and accordingly the objects could have been placed. Creating these many lists is a very bad practice.Too many literals. Code smell."
"Hard-coding all the positions with numbers makes it difficult to modify. Bad practice. Instead player's position could have been referenced from the created list itself."
"Docstring missing for this function."
"Unnecessary parentheses after 'if' keyword. C style if statement need not be written."
"Bad way of directly referring to the ASCII codes of alphabets. There should have been comments saying which code denotes which alphabet. This would improve the readability."
"dir is a built-in keyword. Use of keywords as variables in not encouraged. This will basically redefine the built-in keyword."
"Too many public methods used for this class. [ Too many public methods (21/20) (too-many-public-methods) ]"
"File is not split equally. Most of the methods are in one file, while the other two barely contain any major code."
"Importing everything from the module is bad. Only the parts which are used must be imported. Repeated once more for random."
"Bug #2 Board does not render properly on holding down movement keys."
"Spaces should be used as per PEP-8. Issue is repepeated."
"Space after comma not followed."
"Bad code smell. Extremely branced code. Code should be split into functions."
"Trailing whitespace. Not as per PEP-8."
"Code smell. Data should be kept separate from code. Data should be stored in a separate file and imported."
"Lines too long."
"Function does not exist."
"Private function should not be called directly."
"Wildcard import is bad. Only what is used must be imported."
"Constants should be in separate file for data only."
"Bad indentation. Must be 4 spaces. The following line have this error too."
"Too many variables. The function should be split into several smaller functions."
"Too many branch statements. The function should be split. Bad code smell."
"Unused variable."
"() unnecessary in python."
"List created for donkey which has only one object."
"Tabs should not be used for indentaion."
"Several bad names of variables like p, fd, ch, b, p, d, f, y etc. Variables name should be meaningful names. Code smell."
"Wildcard imports are bad and should not be used. This is also true for the random import statement."
"Spaces should be used for indentation."
"Trailing whitespace."
"Bug #1 Person's contructor is not called. "
"Should be one space around operator as per PEP-8."
"Extremely large function with too many statements. Should be split into smaller functions."
"Line too long. Split into smaller conditions."
"Line too long. It should be split into smaller conditions."
"Code duplication in above functiions."
"gameLevel variable is not used in the function."
"Bug #3 Fireballs do not fall down ladders."
"Extremely branched function. Should be split into smaller functions."
"Many bad variables like jd, fd, ab, dd. Bad code smell."
"Bugs -  Players sink down ladders. Trying to climb up a ladder causes player to shoot up and then fall down the ladder again. Bad implementation. Jumping near ladders causes player to shoot up ladder. Collision checks poor. Player often dies without any apperant overlap between sprites. Donkey Kong does not kill on collision. In fact, standing on him is a safe spot.Implementation problems -  Fireballs do not disappear at spawn point on several levels. Fireballs do not move in random direction on falling down. Donkey Kong does not move."
"Lazy class/Dead code , no use of such class."
"PEP-8 Naming convention not followed."
"Very large return statement, should be hard coded and separate from code."
"Very large return statement, should be hard coded and separate from code."
"Very large return statement, should be hard coded and separate from code."
"Import not used"
"Intendation uses tabs instead of spaces and has trailing whitespaces"
"Two blank lines between classes. PEP-8."
"Proper PEP-8 standards not followed"
"Wrong indentation. Should be 8 spaces."
"All the above shold be self.Methodname"
"3 out of 4 arguments are not used in most of the above functions."
"Most of the functions do not use any class attributes or methods and hence, are redundantly declared inside a class. Bad Code Smell"
"moveJ defined multiple times"
"Most naming standards are not following PEP-8"
"my is a bad name. Bad design to import it as my."
"sys, os and random not used."
"Class not implemented. All variables not used and functions are empty. Bad Code Smell."
"pass unnecessary."
"pass unnecessary."
"Takes two arguments, but called every single time with one argument."
"Bug #2 Fireball does not fall down ladder."
"Bug #1 Donkey gets stuck near the wall and becomes unable to move."
"Empty function. Bad code smell."
"Data has to be separated from code."
"Several methods above don't use self, and defining them inside a class is not necessary."
"Code Smell. Data should be defined in another another module, and separated from code."
"Empty method. Dead code."
"Constants not following PEP-8 standard and shold be specified separately from code."
"attrDict has no attribute x or y. This error has been repeated more than 20 times."
"Constants shold be in another module to make code more readable."
"Function extremely long. Has to be broken down into smaller functions. Entire code must be put into main function and called, instead of being run directly."
"ch1 is not initialized."
"Code smell. Dead code."
"Semicolon not necessary"
"Code Smell. Data should be separated from code."
"Wrong indentation"
"Wrong key. As per specifications, space is the key for jump."
"Bad code smell. Condition too long. Should be broken down into smaller statements."
"Protected variable called directly. OOP concepts not followed. This has been done 7 times."
"Large amount of code commented."
"Bad variable names. var, ch2, oldf1, flag 22, ct, varb var11, oldf111, f11, oldf11, l1, l2, l3, flagd, ct. Usage of these is not clear and makes code very hard to understand."
"Class names don't start with a _ as per PEP-8. _ is reserved for private/protected methods."
"Imports should be at the beginning of the module. Also, these are not used anywhere anyway."
"Import should be in the first lines of a module."
"Dead code. Commented code should be removed as it serves no purpose."
"Giant function with several if conditions. Should split into smaller functions."
"Doc string not present for any module and several methods."
"Bug: Collision with donkey kong does not result in losing a life."
"Importing * is a bad code smell, only import the parts that are used."
"There should be no space before colon as per PEP-8 standards. "
"As per PEP-8, the definition should be without space between arguments and colon."
"Several variables like f, ladcol are not used in the code"
"Commented code should be removed."
"Importing * is a bad code smell, only import the parts that are used."
"Bad code smell. Import only parts which are used."
"Bad variable name"
"Lazy class, class usage too small"
"Do you have pygame installed? The whole thing won't work if there is no pygame."
"PEP-8 Naming conventions not followed. Also, Old type class definition."
"This IS a comment block. https://www.python.org/dev/peps/pep-0008/#block-comments"
"Character class imported not used. Unused import. Code smell."
"God class. Code smell. Should be split into smaller classes."
"Bug. Coins do not always respawn after using r to reset game."
"Above function extremely branched."
"Access to protected variables. Not following OOP concept. Same for next line."
"Large function. Cam be split into smaller functions."
"This is not a bug, code smell, or bad coding practice."
"Several classes not used in import. Only used classes should be imported."
"Bad Variable Names"
"Too many Methods in one Class (Follow PEP-8)"
"Too Long Line (Follow PEP-8)"
"Space Required after '=' (PEP-8)"
"Line is too long."
"Random Called but never Used (PEP-8)"
"Missing Space after ','"
"Bug:Frame Rate reduces when Player is jumping."
"Repetitive Code."
"Missing Space after ','"
"Newline at End of File missing"
"Lazy Class"
"Newline Missing"
"Missing Class Docstring"
"Whitespace after comma required (PEP-8)"
"Very Nice Indeed ;)"
"All Imports should be declared at one time in the beginning "
"Import should be in different lines"
"According to PEP-8 Standards, There should be Whitespace after commas."
"Missing Whitespace after '=' operator (OEO-8 Standards)"
"Duplicate Code"
"Extra WhiteSpaces. Same Code as above should be avoided (PEP-8)"
"The Method defined is rendered Redundant."
"This Method does not correspond to the above Class defined."
"Missing Whitespace after '=' operator and '<' operator"
"Importing * is a bad code smell, only import the parts that are used."
"Color defined before. Should be defined in Separate file and loaded."
"The variable 's' is redefined below"
"Extra Tab Space after line is bad practice (Follow PEP-8)"
"Repetitive Code and not clear (Code Smell). Should be made flexible and implemented as a Method of Player Class. "
"Brackets not required and space to be added before and after '==' (PEP-8)"
"Tab Space after Line is bad practice...(Follow PEP-8 Standards)"
"Insufficient functionality: 'Jump' missing"
"Trailing Whitespace before ':' (Follow PEP-8) "
"No brackets required for 'if' statement."
"Bug:Fireballs penetrate the ground"
"Method very large. Modularity not implemented very well. (PEP-8)"
"Respawning coins fails after restart"
"Bug : Player hits the line when climbing ladders. Line collision not implemented well."
"Commented Code should be removed."
"unused imports"
"class has no init method"
"class has no public methods, should be atleast 2"
"unused imports"
"too many local variables 17 ,should be less than 15"
"too many statements for the function(88) maximum is 50"
"too many branches in the function(19) ,should be less than 12"
"game is not continuous or automatic it stops then we(player) stops or pauses and runs only when we move"
"levels not implemented"
"unused imports"
"no space after comma and operators"
"unused imports"
"too many branches for the function(22)"
"too many statements for the function (77) . could be simplified or split into separate methods"
"line too long (more than 80 characters)"
"straight top jump without direction for player not implemented"
"bug:while jumping and falling everything other than the player pauses or stops"
"bug: coins are not present on the floor some are lying in the air"
"multiple classes should be in different modules, bad practice"
"unused imports"
"board is hardcoded bad practice"
"lines too long, more than 80 characters"
"many unused imports , only import the necessary files or methods"
"no space after comma and operators int the code"
"many unused imports or methods"
"too many branches in this function(17), should be maximum 12"
"many unused imports and methods"
"Duplicated code : methods 'jump', 'jumpl', 'jumpr' does almost the same thing just with slight differences in data or behavior "
"unused imports from time"
"unused variables"
"6 arguments to the function max is 5"
"line more than 80 characters (109)"
"no space after '<' and '>' operator"
"just 1 public method for the above class, should be atleast 2"
"duplicated code : following 5 functions are almost identical in behaviour and data, could be avoided"
"Uncommunicative Name : names of arguments does not signify what the method does"
"line too long (301 characters)"
"line too long (358 characters)"
"duplicated code: lines 62-115 use the similar type of code 3 times, could be avoided"
"Dead code: following 6 lines are of no use in the code"
"unused variable 'div'"
"too many branches in the main function and has many lines of code, could be shortened or split into separate functions"
"unused variables white and dred"
"Bug: While falling from 1st floor the player first goes inside the ground and then comes above on the floor"
"Bug: The player stands in mid air just after the right end of a floor, If we move further left then it falls to lower floor"
"This file was uploaded by mistake, Sorry"
"Duplicated code : methods 'falll', 'fallr does almost the same thing just with slight differences in data or behavior"
"Duplicated code : methods 'jump', 'jumpl', 'jumpr' does almost the same thing just with slight differences in data or behavior"
"line more than 80 characters"
"Too many return statements(12) in this function, max should be 6"
"Too many branches in this funtion (19), maximum should be 12"
"line too long"
"no use of lead_x in above funtion"
"line too long, more than 80 characters"
"'div' variable not used anywhere"
"white, dred are not used"
"no space after 'comma' or any operator in this code (PEP8)"
"This code was not necessary its a copy of the whole game modules just combined into one big file"
"unused import random"
"multiple classes should be in different modules"
"unused import 'os'"
"Too many instance attributes of the class(14), max should be 7"
"too many branches in the function, max should be 12 (15 here)"
"jump is very short, should be little higher"
"we can't go up using 'w' key and can't go down using 's' key"
"bad code smell no init method"
"no encapsulation"
"Too few public methods (1/2)"
"Bad indentation. Found 5 spaces, expected 4 (bad-indentation)"
"bad whitespace at ==  pep-8 violation"
"Bad indentation. Found 9 spaces, expected 8 "
"Missing method docstring"
"invalid syntax (syntax-error)"
"unvalid syntax"
"no use of encapsulation"
"no use of encapsulation"
"empty file "
"random coins not made"
"syntax error"
"game does not start"
"bad whitespace occurences"
"no init code smell"
"good use of modularity"
"player.py has no class player"
"no queen class"
"invalid syntax"
"no use of encapsulation"
"coins are not random"
"PEP-8 standards violation:   Invalid function name ""generateBoard"""
"Error:   Class Board is absent"
"Hardcoding can be avoided and should be replaced by loops instead"
"PEP-8 standards violation:  Line too long max-80 chars allowed 178 present"
"PEP-8 standards violation:  Exactly one space required after comma"
"Warning:   unused imports random,curses,system"
"Bad code smell:    Too few public methods (0/2)"
"PEP-8 standards violation:   Exactly one space required after comma"
"Error/Bug:   Instance of 'Person' has no 'crt' member"
"PEP-8 standards violation:  Exactly one space required around assignment"
"Error:  Fireball and board class not defined"
"Warning:   Attribute 'previousthing' defined outside init__"
"PEP-8 STANDARDS VIOLATION:  Invalid method name ""setPrevious"""
"Absence of classes in the module"
"PEP-8 standards violation:   Missing function docstring"
"PEP-8 standards violation:  Invalid variable name and unused variable x "
"PEP-8 standards violation:  Exactly one space required after comma"
"Error:   getposition(), checkcollision(), collectcoin() functions are missing"
"Warning:   Unused import checkBase from wildcard import"
"PEP-8 standards violation   Too many whitespace errors throughout the file"
"Too much hardcoding.Loops can be used and are more efficient and require less space as well as time"
"PEP-8 standards violation:   Line too long 80 is the standard limit,326 present"
"Board has been already created in board.py"
"PEP-8 standards violation:   Invalid constant name ""board"" ,""player"",""donkey"",""gameboard"" etc"
"No display of scores,lives-not according to standards "
"Fireball not working"
"Unusual behaviour of player when near the queen.Error occurs"
"WARNING:  Unused import curses from wildcard import ,similarly many other unused imports"
"Too many arguments (5 is the standard limit,6 present)"
"Bad code smell:   Code duplication"
"PEP-8 standards violation   Too many whitespace errors throughout the module"
"Bad code smell:   Too many statements (154 present,50 is the standard limit)"
"Bad code smell:   Too many branches (40 present,12 is the standard limit)"
"Error:   Undefined variable 'enscreen'"
"Bad coding practice:  Code duplication must be avoided as far as possible"
"too many invalid variable and constant names throughout the module -should be avoided by using proper names"
"Warning:   Access to a protected member _a of a client class"
"PEP-8 standards violation:   Exactly one space required after comma"
"Warning:   Found indentation with tabs instead of spaces (mixed-indentation)"
"PEP-8 standards violation:   Exactly one space required after comma"
"PEP-8 standards violation:   Invalid method name ""getY"""
"Warning:   too many unused imports"
"Error:   class already defined (line 4)"
"Too many whitespace errors in this hard-coded region "
"Hard coding is a bad practice and must be avoided as far as possible"
"PEP-8 standards violation:   Exactly one space required after comma"
"Bad code smell:   Method could be a function (no-self-use)"
"PEP-8 standards violation:   trailing whitespace"
"PEP-8 standards violation:  Invalid argument name ""x"" ,""y"""
"PEP-8 standards violation:  Invalid method name ""checkWall"""
"Warning:   Using the global statement "
"Warning:  Unused variable 'flag1'"
"Bad code smell:  Too many statements (52 present ,50 is the standard limit) "
"Bad code smell:   Too many branches (21 present ,12 is the standard limit) "
"PEP-8 standards violation:  Missing method docstring "
"Warning:  Too many unused imports"
"Warning:   Using global for 'count' but no assignment is done"
"PEP-8 standard violation:    Invalid variable name ""ch"""
"PEP-8 standards violation:   Unnecessary parens after 'if' keyword"
"too many whitespace and mixed-indentation errors throughout the module"
"Error:  Fireballs not implemented"
"Error:   Donkey also not implemented"
"error: Player's lives are not displayed"
"Error:   Levels not implemented"
"Error:   After collectng a coin score must increase by 5 points as specified and not 1 point"
"PEP-8 standards violation:   Final newline missing "
"Error: Player cannot jump from a floor to the other"
"error/Bug:  checkCollision() function not implemented"
"Error:   Modularity not implemented"
"Bad code smell:    Too few public methods (0/2)"
"PEP-8 standards violation:   Invalid variable name ""x"" used at many places"
"Bad code smell:   Too many branches (16/12)"
"Warning:    Unreachable code "
"Warning:   Unreachable code "
"Bad code smell:   Method could be a function"
"Bad code smell:   Too few public methods (1/2)"
"Bad code smell:   Too few public methods (1/2)"
"PEP-8 standards violation:   Invalid constant name ""l"" ,""queen"",""boy"",""dragonbrother"" etc"
"Bad coding practice:    Too long if condition"
"Error:   Class 'queen' has no 'char' ,'column' and 'row' member"
"Bad code smell:   Too few public methods (0/2)"
"Warning:   Using global for 'l' but no assignment is done"
"Bad code smell:   Too many arguments(6/5)"
"Warning:   Using the global statement"
"Bad code smell:    Too many statements (82/50)"
"Bad code smell:  Too many branches (21/12) "
"Warning:  Redefining name 'board' from outer scope"
"Bad code smell:  Too many branches and statements"
"Error;  No value for argument 'fireballlist' in unbound method call "
"error:   Class 'queen' has no 'row' member"
"Many whitespace errors throughout the code"
"Many mixed indentation problems throughout the code-Violation of PEP-8 standards"
"Code Smell  Excessive use of literals, some commonly occurring literals can be defined as constants for better code readability."
"Code Smell Very similar code lines.Can be refactored to a specific function."
"Code Smell  Excessive use of literals, some commonly occurring literals can be defined as constants for better code readability."
"Bug Some coins float in midair instead of being on a platform."
"BUG Coins are getting regenerated in the same level,whenever the player is dying."
"Code Smell  Long function."
"Code Smell Cyclomatic Complexity - too many branches or loops"
"Code Smell Excessive use of literals, some commonly occurring literals can be defined as constants for better code readability"
" Code Smell   Identical code lines."
"Code Smell  Excessive use of literals, some commonly occurring literals can be defined as constants for better code readability"
"PEP8: Line longer than 79 characters."
"Code Smell  Large class: This class has grown too large."
"Code Smell Feature envy: This class uses methods of another class excessively."
"Code Smell  Literals are hardcoded."
"Class Person should not be modifying the board for better encapsulation."
"PEP8 : Lines longer than 79 characters."
"Code Smell  Excessive use of literals. Literlas are hard coded."
"Code Smell - Lazy class / Freeloader: This class does too little."
"Code Smell Excessive use of literals: these should be coded as named constants"
"Code Smell Large Class - This class has grown large."
"Code Smell  Feature envy: This class uses methods of another class excessively."
"Code Smell Inappropriate intimacy: a class that has dependencies on implementation details of another class."
"BUG The game screen flickers when we keep a movement key pressed for a long time."
"BUG On pressing 'spacebar' key only ,instead of jumping up and returning back to the same position it jumps and moves right to a different position."
"Code Smell Inappropriate intimacy: This class has  dependencies on implementation details of another class."
"Docstrings not defined for any function."
"Code Smell Feature envy: This class uses methods of another class excessively."
"No encapsulation for main ."
"Code Smell  Long method."
"Code Smell Duplicated code."
"Code Smell Excessive use of literals . Values like 1,25 can be made as constants for better code readability."
"All the sprites from this sprite sheet are not used. Only those sprites should be present in the sprite sheet which are present in the game."
"PEP8: Indent using spaces instead of tabs."
"Code Smell Feature envy: This class uses methods of another class excessively."
"Code Smell Inappropriate intimacy:This class has dependencies on implementation details of another class."
"Code Smell  Long method - Can be re-factored."
"PEP8: Indent using spaces instead of tabs."
"Code Smell Lazy class - This code does too little."
"PEP8: Indent using spaces instead of tabs."
"Code Smell Lazy class - This class does too little."
"Has too less public methods."
"Unused imports constants."
"PEP8: Provide docstring for the module."
"PEP8: Indent using spaces instead of tabs."
"Code Smell Too many arguments."
"Bug Use of super on an old styled class."
"Bug Use of super on an old styled class."
"PEP8: Indent using spaces instead of tabs."
"PEP8: No docstring for module."
"BUG Use of super on an old styled class."
"PEP8: Add a single space character after a comma."
"PEP8: Add a single space character after a comma."
"PEP8: Indent using spaces instead of tabs."
"Add a docstring for the module."
"Too few public methods."
"Code Smell Too many functional arguments."
"PEP8: Add one space after comma."
"PEP8: Indent using spaces instead of tabs."
"PEP8: Missing module docstring."
"Code Smell Too much dependency on other classes."
"Unused import ladder."
"Code smell Too many arguments"
"BUG Use of super on an old styled class."
"PEP8: Give a space character after comma."
"PEP8: Line should be within 79 characters."
"PEP8: Add a space character after comma."
"Add a newline after last line of module."
"This sprite sheet not used anywhere."
"PEP8: Docstring for module not added."
"PEP8: Indent using spaces instead of tabs."
"Code Smell Lazy class - This class does too little."
"Code Smell Identical code for LadderBlock and BrokenLadderBlock"
"Code Smell Lazy class - This class does too little."
"Too less public methods."
"PEP8: Add a space character after a comma."
"Code Smell Identical code inside Ladder class involving code for initializing block objects."
"Code Smell Ladder and BrokenLadder classes are a bit identical."
"BUG Use of super on an old styled class."
"Code Smell : Large class."
"Code Smell : Too many dependencies on different classes."
"BUG Use of super on an old styled class."
"PEP8: Put a space character after a comma."
"Code Smell : Identical or very similar code for class ZeroPlatform, FirstPlatform, SecondPlatform, ThirdPlatform."
"PEP8: Put a space character after a comma."
"PEP8: Indent using spaces instead of tabs."
"PEP8: Write a docstring for the module."
"Unused module pygame."
"Code Smell  Identical code for LevelOne, LevelTwo, LevelThree."
"PEP8: Put a space character after comma."
"PEP8: Put a space character after comma."
"PEP8:Whole code indented with tabs instead of spaces."
"Must have imported docstrings."
"Code Smell Long Method."
"Used tabs instead of spaces."
"PEP8:Wrong continued indentation."
"Code Smell This code which handles key movements can be refactored into a separate function."
"Code Smell This code within if can be refactored into a separate function."
"Better to use isinstance() instead of type()"
"PEP8:Indent using 4 spaces instead of tabs."
"PEP8: Add the docstring of the module."
"PEP8: Put a single space character after a comma."
"Code Smell  Too many parameters"
"BUG  Use of super on an old styled class."
"PEP8: Put a single space character after a comma."
"Code Smell Large class."
"Code Smell Inappropriate intimacy:  dependencies on implementation details of another class."
"Indent using spaces instead of tabs."
"Missing modules docstring."
"Unused module sys."
"Code Smell Too many instance variables.Can be re factored."
"Add space after comma."
"BUG Use of super on an old styled class."
"BUG Use of super on an old styled class."
"PEP8 : Line not within 79 characters."
"Unused variable gold coin."
"BUG  An attribute defined in this class hides this method."
"Indent using spaces and not tabs."
"Code Smell Lazy class / Freeloader: a class that does too little."
"Unused modules - pygame, constants."
"Modules pygame, constants unused."
"(BUG) Use of super on an old style class."
"In the entire code indentation done with tabs instead of spaces."
"This module was not used."
"Missing module docstring."
"Put one space after comma."
"Put one space after comma."
"Code Smell Lazy class - Has too little functionality."
"Code Smell Lazy class - Has too little functionality."
"Code Smell Cyclomatic complexity: too many branches or loops in movement() method."
"Code Smell Lazy class - Has too little functionality."
"Good use of sprites."
"Code Smell Long method."
"Code Smell Excessive use of literals.Avoid hardcoding."
"Code lines can be sent to respective classed for better encapsulation."
"Code Smell Feature envy:This class uses methods of another class excessively."
"Code Smell Inappropriate intimacy: This class has dependencies on implementation details of another class."
"The method in this class checkWall(), death() can be send to respective Player class for better encapsulation and generate() can be sent to some other class.This class does not appear as a cohesive unit but a haphazard collection of unrelated functions."
"Code Smell Excessively short identifiers(E,l,p): the name of a variable should reflect its function unless the function is obvious."
"Code Smell Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. "
"Code Smell Long method: Method has grown very long."
"PEP8: Line having greater than 79 characters."
"Code Smell Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. "
"Statements of this module should be sent to respective classes for better encapsulation."
"Code Smell Excessively short identifiers: the name of a variable should reflect its function unless the function is obvious."
"Code lines should be sent to respective classes for better encapsulation."
"Code Smell Lazy class / Freeloader: class does too little."
"PEP8: Constants should be named using only capital letters.Ex WHITE,CAGE,D_WIDTH"
"BUG Fireballs sometimes remain afloat in air even after crossing the edge of the platform, instead of falling down , and reach the other platform."
"BUG Some coins float in the air instead of being on the platform."
"Code Smell  Large class: This class has grown too large."
"Code Smell Feature envy: This class uses methods of another class excessively."
"Code Smell  Inappropriate intimacy: This class has dependencies on implementation details of another class."
"Write docstrings for modules,classes and functions."
"Code Smell Long method- This method has grown too large.Can be re-factored into smaller units."
"Code Smell Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors."
"Code Smell Cyclomatic Complexity(Lines 46 - 147), too many branches or loops;  function needs to be broken up into smaller functions, or that it has potential for simplification."
"PEP8: Line having greater than 79 characters."
"Missing Docstring"
"Too many instance variables."
"Too many statements"
"The name platform has already been used while importing. A new name should have been given to this function."
"Variable xrange has not been declared."
"Does not require this class. code smell :Lazy class / Freeloader"
"Missing Docstring"
"bug : broken ladders are not implemented"
"Code Does not Compile because there is an import error : There is no module named Board."
"Docstring Missing"
"Too many statements . too many branches"
"As the name indicates backup.py is the backup to my original maingame.py. Those 450 lines of code are vital in case my main code fails."
"As this is a backup file and is not used anywhere there is no need to find any code smells in this code."
"Too many instance attributes."
"The name platform has already been used before as a filename. Should have used another name."
"Need all the arguments since I am updating the ENTIRE BOARD."
"Module has no quit member and quit() is never called because it comes after pygame.quit() which would quit the game."
"Too few public methods."
"This function is obsolete and can be omitted from the code. "
"Code Smell : Large Class"
"motion is different for every character. And the queen does not have any motion."
"Too many arguments."
"The function ladder_motion and climb_up can be combined to make the code more readable. (Code Smell :Contrived complexity)"
"Not a bug. Collision with donkey do not result in life taken regardless of any ladders. Assignment specified that fireballs will result in life taken."
"loadimage should have been the function of the parent class because each character has an image ."
"Too few public methods.(Code Smells : Lazy class / Freeloader)"
"Too many arguments. Unused arguments : All_fireball_list , person_sprite_list"
"Too many branches."
"Bug : On the topmost ladder when you climb down , it would miss the platform and keep on falling down until it reaches the next platform."
"Bug :Player can defy gravity when jumping from a platform if the space bar is pressed rapidly."
"Bug :When climbing a ladder and if you try to move sideways when near the top of the ladder the player can disappear from the screen."
"This Image is never used."
"code rating is  -76.68/10"
"No modularity used."
"Good use of encapsulation."
"Move function seems to be very long . Can be broken down into Move-left, Move-right,Move-up, Move-down and jump."
"Do not use ""."", use "" """
"There is no declaration of  Instance fl  in Person."
"Move function seems to be very long . Can be broken down into Move-left, Move-right,Move-up, Move-down and jump."
"combine above if (line 72) and elif (line 88) in same a single if condition."
"do not use that much if else.bad code smell."
"remove these comment .Bad code smell."
"While using ""Space"" suddenly every thing is disappear for 2 sec. Use sleep command."
"When you jump from H, H disappears.Fix this Bug."
"When player jump from ladder. H suddenly disappear and P move to some point in air."
"When Player jumps from left of H, the second number of H will disappear.Fix it."
"When Player reaches at top floor ,Instead of death  Player eats fireballs. "
"When Player reaches at last floor, Player passes through Donkey (It should not be happen). "
"Player Should not eat Q."
"After eating Q game does not end."
"The jump function seems to have a bug. When the player jumps near the wall , the program throws an error and ends because of array-ovrflow. Can be corrected if Checkwaal function is called at this stage"
"Movement of Donkey is not random. It runs in particular coordinates."
"In this Player eats fireballs.This is a bug."
"Good use of encapsulation."
"unnecessary define  of flr."
"Fireballs should originate from Donkey not from fireballs."
"Fireball  and donkey should move continuously means it should not depend on input."
"After some moves fireballs eat other fireballs."
"Fireballs should move at every floor."
"It is very bad way to hard code your layout."
"use proper function for generating different layouts for different levels."
"There should be extra space after every "","" in table  (PEP-8 violation)."
"Good use of Colors for differentiate Donkey, fireballs, Player etc."
"Do not Hard code Coins. Make a function who generates coins at random position."
"code Smell.Cyclomatic complexity."
"good use of docstring. "
"there is no object named as ""printpm"" in class Screen."
"Unnecessary define of ""F""."
"No description about which function is doing what"
"pylint code rating is   -147.52/10"
"Compilation is fine but after that, it is not working at all.In short game is not working."
"No modulation at all."
"Missing classes like Player,Fireball"
"function like getposition(),checkcollision(),collectcoin() are absent. "
"All imports are used in this code.No unnecessary imports."
"It should be in a class (violation of Modulation)."
"Reimport of same module "
"There should be a separate module for Person Class. "
"unnecessary define of update_newpostion() function "
"Checkwall() function should be in board() class"
"Do not use hard code  because "
"Coin() funcion should be in Board() class."
"Donkey should be separate class not a function."
"No need of donkey function in Person() class. "
"Class name should start with a capital letter as per the PEP 08 standards.(PEP 08 violation)."
"class donkey and its Instances nowhere used in this code(except defining). "
"Good use of encapsulation."
"no use of getscore in class donkey."
"No description about which function is  doing what."
"use extra space after every  "" , ""  (PEP 8)"
"Colors add to the view. Nice effect."
"Good use docstrings. "
"Too many blank lines (Code Smell)"
"too many loops."
"Generalize coin generator function for whole game not for each floor."
"donkey,fireballs are not implemented."
"unused import."
"level no. ,  no. of lives missing."
"Unused Imports"
"Class has no init method."
"Missing function docstring."
"Invalid variable name ""fd""."
"Invalid Variable name x and y"
"Code Smell Too many loops used"
"Not all the imports have been used, disregarding PEP-8 standards."
"too many branches for the function(22) Code Smell"
"Board is hard-coded which is a very bad-practise"
"Missing module docstring (missing-docstring)"
"No separate function to generate Coins"
"Exactly one space required after comma for such instances"
"Nice Job. Board is created by a randInt function "
"Use of Bad -whitespaces overall."
"many unused imports , only import the necessary files or methods.Curses module has been imported but is unused"
"No comments used . Also the naming of the functions is very arbitrary and random .Can't understand what each of these functions do"
"Too many modules imported but unused"
"Bad Practise . Board has been hard-coded"
"Can't understand why the board has been created twice. Board has also been created in board.py."
"Impressive!!! threading module used but seem to work only for Donkey . Would be better if extended to fireballs as well "
"Missing module docstring (missing-docstring)"
"Exactly one space required after comma. def init(self,threadId,name,donkey,board,playerThread):   (bad whitespace)"
"Too many arguments."
"Invalid method name ""getThreadName"" (invalid-name)"
"Missing module docstring (missing-docstring)"
"missing whitespace around operator"
"expected 2 blank lines, found 0"
"Combinitorial Explosion  The long if and else part does the same thing with a tiny variation"
"CodeSmell Very Long Method used "
"Global variables should be avoided"
"Code is quite similar in If and Else part. Could Use a separate function CheckFloor"
"CodeSmell Conditional Complexity . A lot of if , Else statement used"
"Firemv could be used  as bool having values Left and Right . It''s difficult to understand with current situation"
"CodeSmell No comments found . Bad Practise."
"No comments found"
"Too many branches used . "
"Bad Practise . Board should not be Hard-coded"
"Code is Repetetive. Duplicated code"
"This is so because the screen gets cleared and the whole board prints again which takes a bit of time. This is the scenario with almost all the people who have implemented it on the terminal and not used Pygame."
"It 's not a bug actually . The implementation is such that the game can process only 1 keypress at a time . So jump cannot be furnished with the Right arrow key. When The spacebar is pressed player jumps 2 steps to the right.at any situation. "
"BUG If the Player Jumps near the wall the player crashes into the wall with index out of range error"
"Bug Multiple Fireballs have not been implemented"
"BUG Only Right Jump has been implemented for the Player"
"PEP-8 standard violation: Imports should usually be on different lines."
"PEP-8 standard violation: Imports should always be put at the top of the file, just after any module comments and docstrings, and before module globals and constants. "
"PEP-8 standard violation: Imports should usually be on different lines."
"PEP-8 standard violation: Class definition should be surrounded by 2 blank lines."
"PEP-8 standard violation: Exactly one space is required after each comma."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"Code Smell (Long Function): A function should ideally be <=20 lines"
"Error: 'Person' class has no '_a' member.Basically attribute, '_a' should have been declared and defined inside class's init function."
"PEP-8 standard violation: Found indentation using tabs instead of spaces."
"PEP-8 standard violation: Class definitions should be surrounded by two blank line."
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification. "
"Code Smell (Long Function): Too many statements, 229!"
"Code Smell (Oddball Solution): There should only be one way of solving the same problem in your code. Here, it is a case of poorly duplicated code."
"Error:"
"Unnecessary trailing whitespace. "
"PEP-8 standard violation: Line too long. 147 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 145 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 145 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 121 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Found indentation using tabs instead of spaces."
"PEP-8 standard violation: Line too long. 82 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 84 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 84 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 84 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 81 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 83 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 83 characters present instead of the standard limit of 79 characters per line."
"Bug:Also, undefined variable 'self_Person' used."
"PEP-8 standard violation: Line too long. 83 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation:Function names should be lowercase, with words separated by underscores as necessary to improve readability. mixedCase is allowed only in contexts where that's already the prevailing style, to retain backwards compatibility. However, as per assignment-1 requirements, function names can be in mixedCase and hence the correct name of the function should be checkWall."
"PEP-8 standard violation: Unnecessary blank line left. As per PEP-8 standard,Method definitions inside a class are surrounded by a single blank line. "
"PEP-8 and PEP-257 standard violation: Missing class docstring."
"PEP-8 standard violation: Line too long, 102 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Class definitions should be surrounded by two blank lines."
"PEP-8 standard violation: Class names should normally use the CapWords convention. "
"Code Smell (Long Function): Too many statements (55 statements)."
"PEP-8 standard violation: Method definitions should be surrounded by a single blank line."
"PEP-8 standard violation: Unnecessary blank line left."
"PEP-8 standard violation: Class definitions should be surrounded by two blank lines."
"Each 'board' character should be present on a new line to improve readability."
"PEP-8 standard violation: Method definitions inside a class should be surrounded by a single blank line. "
"Code Smell: Duplicate Code : identical or very similar code exists in more than one location."
"Code Smell (Dead Code): Unused variable j. Unused code must be deleted."
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 standard violation: Line too long. 162 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation:  Exactly one space is required after each comma."
"Each 'board' character should be present on a separate line so as to improve readability of the code. "
"PEP-8 standard violation: Unnecessary blank line left. As per PEP-8 standard, Method definitions inside a class are surrounded by a single blank line."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"Bug: 'Board' class has no '__setBoard' member."
"PEP-8 and PEP-257 standard violation: Missing module docstring."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 standard violation: Function definitions should be surrounded by a single blank line."
"PEP-8 and PEP-257 standard violation: Missing function docstrin"
"Code Smell (Long Function): A function should ideally be <=20 lines. This function has 109 statements!"
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification."
"PEP-8 standard violation: Top-level functions should be surrounded by two blank lines."
"Bug: By default, the player should be credited with 20 points at the beginning of the game, as per assignment-1 requirements."
"PEP-8 standard violation: Found indentation with tabs instead of spaces (mixed-indentation)"
"PEP-8 standard violation: Exactly one space is required after each comma."
"Unnecessary trailing space."
"PEP-8 and PEP-257 standard violation: Missing module docstring."
"PEP-8 standard violation: Class definition should be surrounded by 2 blank lines."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"PEP-8 standard violation: Found indentation using tabs instead of spaces."
"PEP-8 standard violation: Method definitions inside a class should be surrounded by a single blank line."
"PEP-8 standard violation: Exactly one space is required after each comma."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 standard violation: Line too long. 91 characters present instead of the standard limit of 79 characters per line."
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification"
"Code Smell (Long Function): A function should ideally be <=20 lines. This function has 265 statements!"
"Code Smell (Oddball Solution): There should only be one way of solving the same problem in your code. If you find an oddball solution, it could be a case of poorly duplicated code."
"PEP-8 standard violation: Line too long. 274 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"Bug: Ladder character, 'H', disappears when player jumps from the base of a ladder."
"PEP-8 standard violation: Line too long. 97 characters present instead of the standard limit of 79 characters per line."
"Bug: Redefining name 'prev' from outer scope (line 1) (redefined-outer-name)"
"Code Smell (Dead Code): Unused variable 'prev'. Unused code must be removed."
"PEP-8 standard violation: Unnecessary blank line left. As per PEP-8 standard, Method definitions inside a class are surrounded by a single blank line."
"Code Smell (Dead Code): Unused variable 'gamelevel'. Unused code must be removed."
"PEP-8 standard violation: Line too long. 91 characters present instead of the standard limit of 79 characters per line."
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification."
"Code Smell (Long Function): A function should ideally be <=20 lines. This function has 60 statements!"
"PEP-8 standard violation: Class definition should be surrounded by 2 blank lines."
"Bug:Ladder character, 'H', disappears when fireball and player collide at the base of a ladder."
"PEP-8 standard violation: Unnecessary blank line left. As per PEP-8 standard, Method definitions inside a class are surrounded by a single blank line."
"Code Smell (Cyclomatic Complexity): too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification."
"Code Smell (Long Function): A function should ideally be <=20 lines. This function has 94 statements!"
"PEP-8 standard violation: Line too long. 102 characters present instead of the standard limit of 79 characters per line."
"Code Smell - Orphan Variables and Duplicated code.Colors declared again and again, outside the class as globals. "
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"Unused global variables: A lot of global variables are never used in the code. Only white, black, pink and purple out of 12 variables are used. Very poor use of variables."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"Code Smell Lazy class / Freeloader: a class that does too little."
"Code Smell Contrived Complexity and Duplication of code: A lot of duplication of code from 19-45. Use of classes and functions unnecessary."
"Code Smell - Duplicated variables."
"Unused global variables: A lot of global variables are never used in the code. Only 1 out of 12 declared variables are used. Very poor use of variables."
"PEP-8 and PEP-257 standard violation: Missing class docstring."
"Code Smell Lazy class / Freeloader: a class that does too little."
"Code Smell - Contrived Complexity - Useless function."
"PEP-8 and PEP-257 standard violation: Missing class docstring."
"Code Smell Duplicated code. Same init as parent class."
"Code Smell -Orphan Variable or Constant class: a class that typically has a collection of constants which belong elsewhere"
"PEP-8 and PEP-257 standard violation: Missing class docstring."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"Prefer Absolute imports over wild card imports."
"Error: File not found."
"Classes not defined. Doesn't use encapsulation,etc. No main function defined either."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"PEP-8 standard violation: Unnecessary blank line left."
"PEP-8 standard violation: Invalid variable names used. (a1,a2,a3,a4,a5,s,x3,x_change,y_change)"
"PEP-8 standard violation: Invalid variable name used. s1,a"
"Code Smell Duplicated code: identical or very similar code exists in more than one location."
"Code Smell Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification."
"Code Smell Contrived complexity: forced usage of overly complicated design patterns where simpler design would suffice."
"check_wall not implemented. Functional requirements lacking."
"Error: Board function not defined."
"Code Smell Contrived complexity: forced usage of overly complicated design patterns where simpler design would suffice."
"PEP-8 standard violation: Line too long. 90 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Imports should usually be on different lines."
"An import error exception is defined explicitly for that case. "
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 standard violation: Exactly one space is required after each comma."
"PEP-8 standard violation: Invalid variable name used."
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side."
"PEP-8 standard violation: Unnecessary blank line left. "
"PEP-8 standard violation: Binary operators should be surrounded by a single space on either side"
"PEP-8 standard violation: Invalid variable name used."
"PEP-8 standard violation: No space allowed after bracket"
"PEP-8 standard violation: Unnecessary parenthesis after 'if' keyword. (Superfluous Paranthesis)"
"PEP-8 standard violation: Unnecessary parenthesis after 'if' keyword. (Superfluous Paranthesis)"
"PEP-8 standard violation: Unnecessary blank line left."
"PEP-8 standard violation: Unnecessary blank line left."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"Attributes defined outside the init function"
"Correction - 83 characters and not 100."
"Code Smell : Too many parameters: a long list of parameters is hard to read, and makes calling and testing the function complicated. It may indicate that the purpose of the function is ill-conceived and that the code should be refactored so responsibility is assigned in a more clean-cut way."
"PEP-8 standard violation: Line too long. 89 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 85 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 83 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 113 characters present instead of the standard limit of 79 characters per line."
"PEP-8 standard violation: Line too long. 113 characters present instead of the standard limit of 79 characters per line."
"No exception type(s) specified (bare-except)"
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"PEP-8 standard violation: Line too long. 88 characters present instead of the standard limit of 79 characters per line."
"PEP-8 and PEP-257 standard violation: Missing function docstring."
"Player does jump  -> Jump right R and jump left E. The commands are different but have been included in comments long with the code. "
"Code Smell - Cyclomatic Complexity - Too many if - else statements"
"Bug: player doesn't jump"
"Thanks :)"
"PEP-8 standard violation: Invalid variable name used."
"PEP-8 and PEP-257 standard violation: Missing class docstring."
"PEP-8 standard violation: Class names should normally use the CapWords convention."
"Too many looping statements.Could have avoided using it using some global variables(Application level smell - code duplication)."
"Lazy class-class doing very little work(code smell)."
"Line strength could have been less ,well beyond PEP-8 Standards."
"Too much branching and loop conditions. Cyclomatic Complexity(class level smell)."
"Excessive use of literals should be avoided."
"Wasted comments should have been avoided to make the code more readable."
"At the start of the game, whenever any key is pressed, a new board is loaded along with the previous one(should have cleared previous instances of arena)....a serious Bug."
"Too much branching. Cyclomatic Complexity"
"Queen has been hardcoded..should have used randint..bad practice."
"Found indentation with tabs instead of spaces (mixed-indentation)(Violates PEP-8 standards)"
"Exactly one space required around assignment ...bad whitespace (violates PEP-8)"
"jump function is having many bugs.It is not working properly.There is a problem with the keys, we need to give 4 key inputs in order to complete one jump"
"Jump causes a player to eat the staircases as well as the platform.Also jump is of two kinds- 1 level and 2 level jumps with uncertanity of their occurence."
"Could have used modulation to avoid code being too large and repetitive,(class too large -application level smell)."
"Line strength is too much ...(81) proper PEP-8 standard is violated."
"In lines 18 & 20 , line strength violates PEP-8 standard but its done in order to properly comment to the user about the functionalities achieved below"
"Application level smell (Duplication of code) could have used another argument to the function and hence avoid the repetition of code."
"A unique approach to handle jump operations..the person has used 4 different keys for both left and right operations "
"Whenever we are giving input J from keyboard, the controller automatically determine the direction  by locating last side ward movement ."
"As person enters J and direction is left then 4 keys are automatically inputted to the code (M,N,B,V) and hence execute the jump."
"No clear assurances are provided what would happen if we give one among these 4 keys as input without J, this is causing the player to move randomly and player's movement is destroying the arena."
"Its done for handling both left and right jump."
"Lazy class-class doing very little function"
"GOD Object - gameDisplaySetup class  is holding 80-90% of the functions.(code smell)"
"Found indentation with tabs instead of white spaces (mixed indentation). Line above is empty (should have been deleted).(bad code smell)"
"Random coin generator is not so random(it is using fixed set of methods to put coins on the arena)."
"Only a single level is used (not fulfilling the assignment criterion of using multiple levels) "
"Could have used another module for updating the staircases.(Bad code smell)."
"Missing method Docstring(violates PEP_8 standard)."
"No proper messages are displayed regarding player scores when the game ends or moves to higher level."
"Proper comments should have been given at the start of each method,Function Docstring missing(should be provided)"
"Uses of literals should be as limited as possible.(bad code smell).Localization is a good approach over declaring a variable globally and using the same variable again and again in different functions."
"Modulation can be used to a to prevent the code being too long and unreadable."
"Jump function is not able to control player's movement beyond the walls.it goes on and generate errors and game is terminated.Also if there is no platform, player lands in air and remains stagnant as it  is unable to move afterwards(direction keys are not working)."
"Access to a protected member _a of a client class (protected-access)..(violates PEP-8 standard)"
"Application level smell,Too much duplication(should be avoided by using methods and proper flag values for each functionalities)"
"Exactly one space required after comma (not according to PEP-8 standard)"
"Found indentation with tabs instead of spaces (mixed-indentation)"
"There is only one level (few levels should have been implemented) "
"Hardcoded arena..Definitely a bad practice as there is no further scope of new level generation(should have used proper modules and random function to implement this task)."
"Screen Display is nice and page refreshing looks awesome. Thumbs Up for this."
"Too much space left unused.(not a good practice).(Bad code smell)"
"Too many loops and branching.(Cyclomatic Complexity)"
"No reference to donkey and its movement.Donkey is not implemented (one of the must features of the assignment)"
"No reference to player lives.NOT IMPLEMENTEDPlayer has no lives."
"Follow PEP 8 standards while naming methods and functions . https://www.python.org/dev/peps/pep-0008/#function-names"
"All imports should be made at the top of code .. its bad practice to load them near functions "
"Maximum line length exceeded . PEP8 standards violated . better split the sentence using backslash "
"PEP 8 naming standards not followed"
"In readme better include the details of modules written.  Also include the requirements like having pygame module installed etc in readme /"
"wild card imports is not a good practice . Try to avoid it "
"docstring which describes the purpose of the class is missing."
"Unnecessary blank lines used PEP 8 standards violated "
"New-style class should be used: 'class commander(object)'"
"Fair amount of Conditional complexity in the statements . Bad code smell. "
"More nested if statements Bad code smell "
"class should have docdtring describing the purpose of the class."
"class should have docstring describing purpose of class."
"docstring which describes the purpose of the class is missing"
"Invalid attribute name ""mv"" (PEP 8)"
"Class should have a docstring explaining purpose of class."
"class should have a docstring explaining the purpose of the class."
"Invalid constant name ""length"" (PEP 8)"
"Invalid constant name ""width""(PEP 8)"
"Invalid constant name ""mod"" (PEP 8)"
"Class should have a docstring describing the purpose of the class."
"Unused variable 'sys'  and unused variable 'tty' "
"invalid variable name ""fd"" (PEP 8)"
"invalid variable name ""ch"" (PEP 8)"
"Too many branches."
"Very light weight (Lazy Class) class . Bad code smell. "
"Instead of hard coding the values . Must have used variables so that they can be modified"
"Missing blank line after function definition . PEP8 standards violated. "
"Almost useless method . Not required much .. Must have added more functionality .. Bad code smell"
"Instead of using numbers directly must have written them in variables and must have used them here. Then code becomes re-usable and maintainable easily."
"BUG: When climbing a ladder if i press 's' key at last but it will fall down through the floor "
"BUG : In the first floor at some position where there is ladder on the second floor player is able to move up even though there is no ladder in first floor in that position  Image contains more details (https://bitbucket.org/repo/ggyGkg/images/4055209879-ananya.png)"
"Image attached for more clarity(https://bitbucket.org/repo/ggyGkg/images/2783912190-ananya1.png)"
"BUG : On the Top Floor if we continue pressing 'w' key  even after we climbed the ladder the player continues to go up and he gets stuck. All these are because the gravity is not implemented Image attached for more details"
"Many cases of mixed indentation found .. Use a better text editor "
"missing class docstring"
"missing method docstring"
"Unused argument 'pl_list'"
"line too long"
"class docstring which describes the purpose of the class is missing"
"class docstring which describes the purose of the class is missing"
"invalid argument names 'x1' and 'x2' (PEP 8)"
"method docstring missing"
"unused import ->code smell"
"class docstring missing"
"invalid argument names 'ix' and 'iy' "
"missing method docstring "
"missing class docstring."
"missing class docstring"
"Unused import"
"missing docstring which describes the purpose of the class"
"missing method docstring"
"New-style class should be used: 'class Character(object)'"
"New-style class should be used: 'class MainGameClass(object)'"
"Unused variable 'j'"
"Unnecessary use of parenthesis in conditional statements. (superfluous-parens)"
"Does not follow the standard method. (PEP-8 violation)"
"Directions of player movement could be implemented individually instead of the whole move function. Makes it difficult to understand the code."
"Too many branches and statements make the code difficult to understand and intensely complex."
"Protected member has been accessed. (protected-access)"
"Unnecessary use of parenthesis have been made. (Superfluous-parens)"
"Indentation has been done with tabs instead of spaces. (mixed-indentation)"
"Donkey and Fireball functionality have not been implemented. ( Improper functionality)"
"The arguments x and y have been declaed but are not used further in the function. ( unused arguments )"
"Many conditional statements and loops have been implemented which in return increases the complexity of the code."
"Hard-coded maze limits from further developments and challenges. Hence, not a good practice."
"Code has been indented with tabs instead of spaces. ( mixed-indentation)"
"Variables 'flag' and 'count' has been declared globally but the values have not been assigned. (Global variable not asssigned)"
"Bad practice of assigning variable names. variable names should be self explanatory"
"variable name should be better and comments should be written to specify the work of variable."
"checkCollision,checkCoin are related to moves of player or donkey better to write these functions at some other place not in board class."
"Better to take both x and y in a list in same function."
"Mixed indentation i.e 4 spaces at some places and more at some places( line no 14)."
"PEP-8 violation. Line too long."
"No spaces allowed before :"
"Line too long."
"There should be space around comparision"
"Unnecessary trailing whitespaces."
"There should be a space around assignment"
"There should space around assignment"
"There should be a space around assignment"
"Unnecessary paren used"
"There should be a spaec around comparision"
"Unnecessary newline"
"Unnecessary space before '('"
"Unnecessary parens in the if statement"
"Too many if conditions.Use a better logic"
"Unnecessary parens in if condition"
"Wrong contitued indentation(bad continuation) "
"Unnecessary space before bracket"
"Unnecessary newlines"
"Bad way of continuation"
"There should be a spcae around assignment"
"Priting of board is not smooth is doesn't give a continuos perception of borad"
"Why paren in print "
"Mixed indentaton one space at some place and 4 spaces at some places."
"There should be a space around assignment"
"BUG Player doesn't jump on pressing space"
"BUG fireballs comedown only when they fall they don't come down from stairs"
"Line too long PEP-8 standard violation"
"Bad logic. Instead of hard coding some good logic must be used"
"code rating 2.84/10"
"No comments written.Comments must be written to specify the work of code"
"Coins are getting generated by randint so they are randomized."
"Too much assignments in one line , better to do in seperate line"
"Curses not used"
"crt method not specified in person. It should be specified and then overloaded in the other classes"
"Assignments as well as definiton is outside init. Good practice is to define in init and then assign in other funciton."
"Unnecessary use of semicolon"
"unnecessary use of semicolon"
"Unnecessary parens in the if condition"
"Line too long PEP-8 standards violation."
"Line too long PEP-8 standards violation."
"Variable x is not unused it waits and takes the input from user"
"It is importing classes functions and threadmodule"
"This is not file for implementing functions rather it is for creating threads"
"It works for the player also."
"Donkey defines the attributes and funcitons of donkey whereas the Donkey is the thread class of donkey which is helping donkey to move irrespective of the player"
"They are not simply classes rather the two threads"
"endscreen is not undefined it is the function of curses module"
"PEP-8 violation. Line too long."
"Used method names of existing module here. Do not have any other choice.Other than that, identifiers of adequate length."
"Variable being used to iterate over loop 35 times, i.e. to generate 25 random coins."
"Bad code smell. Large Class"
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Indentation contains mixed spaces and tabs."
"PEP-8 Violation : Missing whitespaces around operator."
"IndentationError: unindent does not match any outer indentation level"
"Code smell : Large Class"
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Indentation Mixed tabs and whitespaces."
"PEP-8 Violation : Missing whitespace around operator."
"PEP-8 Violation : Indentation Error, unindent does not match any outer indentation level."
"Code Smell : Cyclomatic Complexity. Can make smaller functions to define ladders and floors separately."
"Bad code smell. Import at the class level."
"Code smell. Too many parameters"
"Code Smell Lazy Class"
"PEP-8 Violation : Expected 2 blank lines, found 0."
"Code smell. Should have used method overriding for donkey movement rather than having a separate function for it."
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Expected whitespace after ,"
"Code smell. Using lazy class unnecessary."
"Indentation contains tabs."
"PEP-8 Violation : Missing whitespace around ="
"Unrelated junk file present here"
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Line too long>79"
"PEP-8 Violation : Multiple imports in one line."
"PEP-8 Violation : Missing whitespaces around ="
"PEP-8 Violation  : Missing whitespace after ,"
"Code smell. Large class."
"PEP-8 Violation : Expected 2 blank lines, found 0."
"PEP-8 Violation : Found Tabs in indentation."
"PEP-8 Violation : Missing whitespace around operator."
"PEP-8 Violation : Missing whitespace after ,"
"PEP-8 Violation : Unindent does not match with outer indentation level."
"Code Smell. Should import at class level."
"Should have single if condition here."
"Code Smell : Should have single if condition here."
"Code smell. Cyclomatic Complexity."
"Code smell. Should have used move function of parent board items class(method overriding)"
"Code smell : Duplicated Code"
"Code Smell : Code not used anywhere"
"PEP-8 Violation : Expected 2 blank lines. found 0"
"PEP-8 Violation : Line too ling >79 chars"
"Code smell. Should have board definitions separately "
"conditional complexity.. not cyclomatic"
"missing docstring (PEP-8 Violation)"
"Platform can be generated better instead of repetitive calling of self.platform_list.add(self.platform), etc code smell: Long method"
"Unnecessary trailing space (PEP-8 Violation)"
"Duplicated code, colors used repetitively"
"Missing docstring"
"PEP-8 Violation, requires space after ','"
"Attributes are all public code smell: Indecent exposure"
"Gravity function defined in multiple classes, could have been implemented code smell: Duplicate code"
"Misisng docstring (PEP-8 Violation)Also, collision method could have been inherited and used by player only to check for collision with donkey or fireball or wall"
"Code smell: Indecent exposure"
"Line too long (PEP-8 Violation)"
"Unresizable pygame window. Assignment gave specifications to make window size around 30x80, but game window for this game is blown up over the screen so Mario and the lower levels arent seen."
"Too many spaces between lines of code makes it difficult to review"
"Missing docstring (PEP-8 Violation)"
"code smell: duplicated code"
"Init() function missing"
"Invalid method name"
"code smell: Conditional complexity"
"Missing Docstring in the beginning of module (PEP-8 Violation)"
"Missing Docstring for method Invalid Method name ""printDonkey"" (PEP-8 Violation)"
"we do not need getX and getY if accessing parameters of the object itself If an external object needs to access parameters of class, then functions like getX and getY are required. Direct use of attributes allowed"
"Invalid Method name ""fmove"" (PEP-8 Violation)"
"Code smell: Conditional Logic Huge dependency on too many if-else and nested if-else conditions"
"Line too long (more than 80 characters) (PEP-8 Violation)"
"Trailing white space Unnecessary and increases number of lines of code (PEP-8 Violation)"
"Here prevchar is initilised with self.prevChar because if flag==1 (line 95) then self is deleted. and then next IF condition to check for 'P' gives error because self.prevChar doesnt exist anymore"
"Code Smell: Subtle duplicated code/Refused bequestDonkey calling getX and getY when they are already inherited from Person class. Unnecessary inheritance"
"Yes, Player is not supposed to fall from paltforms. Which is why I have made restrictVertical functions. Not a bug."
"Fireball movement is random. Assignment PDF says fireballs should move towards bottom left of screen. It is doing precisely that."
"Lives do not go 0. Condition set where if lives==0, mario.reset is called."
"Here is my proof that lives dont go negative: 1. http://postimg.org/image/uxhalhyjp/ 2. http://postimg.org/image/5e3oobs43/ 3. http://postimg.org/image/3lskkaxxn/"
"How can you quit when you're jumping?One space= one jump (involves 4 steps where input is not taken) Fail bug report."
"I have disabled inputs while jumping. Not a bug."
"A software bug is an error, flaw, failure, or fault in a computer program or system that causes it to produce an incorrect or unexpected result, or to behave in unintended ways.I've intended q to be disabled while jumping. "
"Imports unnecessary and extra modules, when only system function is used from import os (PEP-8 Violation)"
"It's there in the assignment that it's a win if you're on the level of the princess. So it's not required to check movement or collision with queen "
"Atleast 1 space required between assignment operator and operands (PEP-8 Violation)"
"Sorry, thought you wanted this as functionality. Yeah, it's a bug which occurs at the base and that too at extreme corner right, yes?"
"Nice!"
"Trailing whitespaces  (PEP-8 Violation)"
"Code smell: Conditional complexity Too much dependency on multiple if and nested if-else statements"
"Mission Docstring in the beginning of modules (PEP-8 Violation)"
"Function size is too big (max 80 lines) (PEP-8 Violation)"
"Returns ans only on conditionality doesnt return anything otherwise Bad coding methods"
"Code smell: Conditional complexity Too many if-else dependencies in one function"
"Line too long! (PEP-8 Violation)"
"Additional functionality implemented for jumping and coming out the other end. but, Game quits with an error?"
"code smell: Long class"
"Multi-type indentation(mix of tabs and spaces) Wrong Indentation method (PEP-8 Violation)"
"Unnecessary Trailing spaces (PEP-8 Violation)"
"Code smell: Speculative Generality Code is checking for an X just because board is protected class Could have been implemented in a better and more functional way"
"Line too long (PEP-8 Violation)"
"Code smell: Combinatorial Explosion Does similar functions as checkBrokenStairs and checkPlatform but could have been combined into 1 function for better implementation"
"code smell: Indecent exposureSimply giving access to a protected attribute of class"
"Extra indentation (PEP-8 violation)"
"Missing readme file End-user would not know how to play game"
"Invalid attribute names (PEP-8 Violation)"
"Space required after ','"
"Missing docstring (PEP-8 Violation)"
"code smell: Indecent exposure all variables are global, no private attributes"
"Missing docstring, and space after ',' (PEP-8 Violation)"
"Line too long (PEP-8 Violation)"
"Donkey on collision with player does not lose lives. Lives not implemented"
"while compressing the file for uploading, files were compressed instead of the folder so files got renamed and gave ^import error.."
"code smell: Conditional complexity Too many if-statements"
"Code smell: Long Method"
"Assignment PDF mentioned scores should be incremented by 25 points and not 1"
"Unnecessary bracket (PEP-8 Violation)"
"BUG: No broken ladders implemented"
"Avoid using from import * methods as it imports unnecessary modules."
"Code smell: Indecent exposure All variables are public and hence easily accessible by class object Spoils purpose of data hiding"
"Code smell: Long parameter list Makes your code volatile"
"(PEP-8 Violation) Space required after ','"
"Missing docstring (PEP-8 Violation)"
"Line too long, Too many argument dependencies (PEP-8 Violation)"
"Invalid method name (PEP-8 Violation)"
"Missing docstring (PEP-8 Violation)"
"Code smell: lazy class"
"Code smell: Lazy class Missing docstring (PEP-8 Violation)"
"Code smell: Indecent exposure"
"Invalid method name!(PEP-8 Violation)"
"Line too long (PEP-8 Violation)"
"Invalid attribute name (PEP-8 Violation)"
"code smell: Conditional complexity too many if-else"
"Unnecessary trailing spaces (PEP-8 Violation)"
"Invalid attribute names (PEP-8 Violation)"
"code smell: lazy class Could have combined all objects like ladders, coins, etc into one"
"mixed-indentation used"
"code rating : -11.69/10"
"too few public methods used"
"line 37 , 40 are too long "
"bad whilte-spaces used; no white space allowed before : "
"Exactly one space required after comma"
"use new-style of class; old-style class used"
"no module or class docstring; nothing to state what module or classes do"
"use new-style of class"
"too few or no public methods used "
"attributes are defined outside init"
"none of the imports used "
"docstring of module and fuctions should be present , stating what it does"
"variable time not defined"
"lines 24,29 too long"
"exactly one space required after comma , use of bad white-spaces"
"docstrings are absent"
"too many undefined variables"
"plentiful of white-space errors"
"code rating: -1523.75/10"
"import-error: unable to import classes, functions, threadmodule"
"use new-style class (old-style class has been defined)"
"unecessary use of parenthesis in if/elif statements"
"docstrings missing"
"import-error: unable to import Person, Player and Screen"
"use of undefined variables and global variables are not assigned"
"absense of module docstring "
"old-style of class used; use new-style class"
"import-error:unable to import pygame"
"import-error: uable to import pygame,character and objects"
"presence of undefined and unused variables"
"attributes have been defined outside init"
"docstring of module and methods are absent"
"use of undefined variables"
"too few public methods used"
"class board is very large. Bad code habit."
"Add one space after comma in whole class board."
"Each line must contain less than 79 character but here it is greater then 79."
"class donkey(person) look like as lazy class."
"Add one space after comma, in whole function."
"class fireball is well maintained."
"too many if else statement (cyclomatic complexity)"
"Above line contain more then 79 character."
"Add one space after comma wherever not use."
"modulation is missing."
"Modulation is missing."
"Add one space after comma, in if statement."
"class player(person) is too large, bad code smell."
"too many branches or loops (Cyclomatic complexity)."
"when p moves downward through stairs then after reaching on platform p eats last one stair. #bug"
"In if else statement their should be one space after comma.But this is missing in the whole class."
"long method. bad code smell."
"jumping function is not working properly, at the end of the wall it should be jump on lower platform but it jumps in air and remain in air.#bug"
"At the of wall (boundary) when we press space butten for jumping then it gives an error.#bug"
"At boundary wall if we press space then it gives an error.#bug"
"Movement of fireball is dependent on player move.#bug"
"fireball eat another fireball #bug"
"In the starting of the game p eats the lower ladder on pressing the upper Arrow key, and still p able to move upward. #bug"
"Too many if else condition (Cyclomatic complexity)."
"fire ball is only moving on top floor."
"Some times p eats the fire ball.#bug"
"The whole board is hars coded its bad code habit."
"Each line in table contain more 79 character, but according to pep8 we can write less then 79 character."
"''Generate Coins randomly on the board"" is not working it is totally hard coded."
"long method bad code smell."
"F has no meaning."
"After saving Q game does not end.#bug"
"Level of game is not define."
"Indentation here is according to pep8 good"
"Indentation is not according to pep."
"modularity is not used."
"All import should be in different line."
"sys module import again."
"setwalls is unused here."
"layout is hard coded , bad habit."
"chek_collision and collect coin is not implemented#bug"
"lazy class bad code smell."
"it does not do anything."
"jumping of person is not considered.#bug. "
"get score function does not work."
"move function should be in base class person."
"no instance in donkey named as new_position and chekwall."
"here i am not including ladder#bug"
"large class bad code habit."
"Here is missing method docstring."
"firball class ie missing."
"board is hardcoded, bad code habit."
"set wall is useless here (no meaning)."
"random coin generator fun is absent #bug"
"in one line maximum character should be 79 but here it is greater then 100."
"code is not running, when  execute."
"According to pep8 import should be on separate lines."
"class Player(Person) is too large class that is bad code habit."
"no use of incrementScore(self)"
"Here ' . ' is wrong because in donkey_kong  ' . '(sign) never comes . #bug"
"Here ' . ' is wrong because in donkey_kong ' . '(sign) never comes . This should be space('   ')"
"Again Here ' . ' is wrong because in donkey_kong ' . '(sign) never comes . This should be space(' ')"
"class donkey is also too large. This is bad code habit."
"same mistake  ' . '."
"variables names is too large."
"Spaces should be used according to  PEP-8."
"Too large function. It should divided in to some more classes."
"too many if else statement bad code habit"
"space should be used for indentation not tab."
"Every row of table has more than 79 character, recommended  length is 79."
"ladders are missing in this table.#bug"
"Here in game board we can see only '  ' ,'X' ,'P', 'C','D' and 'Q' is coming but in above classes use wrong symbols like ' . ' etc . Thats why code not run.#bug"
"Here ' . ' is wrong because in donkey_kong ' . '(sign) never comes . This should be space(' ')"
"game level is well maintained."
"In whole code concept of fireballs and ladder is missing.#bug"
"class controller is too large bad code smell."
"here indentation is not according to pep8."
"while pressing downward key, person moves  downward and break the wall."
"Lot of  PEP-8 rules voilation"
"Unnecessary parenthesis after ""if"" keyword. Not required."
" Trailing whitespace"
"Access to a protected member _Person__y of a client class (protected-access)"
"Rating - > -17.93/10 "
"Unused imports"
"PEP-8 Standards voilation"
"Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstringPEP-standard voilation"
"Missing method docstring. Used when a module, function, class or method has no docstring."
"-19.38/10 rating on pylint. PEP-8 standard voileted at many places"
"Board Hardcoded which led to many voilation of rules"
"Lot of functions implemented  in same class."
"Rating ->  -32.08/10 At various place PEP-8 standard rules are violated. Code contains large number of invalid names."
"Unused import"
"2 blank line"
"To large space."
"Line too long (126/80)"
"Found indentation with tabs instead of spaces"
"No space allowed before "":"" ,PEP-8"
"Exactly one space required after assignment"
"Exactly one space required around assignment"
"Unused argument 'GameObject','GameSetup','myBoard'"
"Invalid method name ""moveJ"""
"BUG1: Player stops if it reaches at end of floor.Well it should drop from floor it there is not floor below player. BUG2: Jump function is not implemented BUG3: Game ends if player get the Queen Well it should replay BUG-4 : Signals  stops working like ctrl+d ,ctrl+c  BUG5: Only one level implementet BUG-6:Multiple fireballs not used(not in accordance with the assignment specifications). there are lot of statements which violated PEP-8 standard rulesAnd there are lot of invalid  names Rating ->  -27.04/10"
"Unused imports"
"too long line PEP-8"
"Redefining name 'myBoard','lengthOfBoard',breadthOfBoard  from outer scope"
"Invalid variable name ""y"",""x"""
"Redefining name 'j'"
"Redefining name 'l2'"
"Redefining name 'l3'"
"Invalid constant name flag"
"Invalid constant names from 170 to here"
"Unnecessary semicolon"
"Invalid module name ""takeInput""Unused variable 'sys',ttyl"
"Invalid variable name ""fd"""
"Rating - >-24.24/10 Violates PEP-8 standard rules a lot."
"Many unused imports like shuffle etc."
"Unused imports"
"Invalid argument name ""sc"""
"Invalid constant name ""fl"" "
"Unnecessary parens after 'if' keyword "
"Rating - > -24.22/10 on pylint.Donkey emits only one fireball Donkey emits only one fireball.Lot of Problems with PEP-8 standard"
"Unused imports"
"Global variable should not be used "
"Missing method docstring"
"Found indentation with tabs instead of spaces"
"Trailing whitespace"
"Trailing whitespace -> PEP-8 standars"
"getPosition() is not in code."
"only left jump is implemented , right jump and straight top jump is not implemented"
"Wildcard import donkeykong"
"Invalid constant name ""firemv"""
"Board is hardcoded which is bad practice."
"1)Player remains in the air when jumps from end of stage. 2) if left or right key pressed when on ladder codes gives error 3) Donkey is continuously moving forward. Infact It should moves forward-backward-forward. 4) When on ladder if a player jumps it removes the stage and jumps and then remain high in air.  and so on.. Proper error handling has not been done. Player moves through walls etc."
"Rating - (-13.43/10) on pylint Lot of statements are violating PEP-8 standards rule"
"Invalid class name ""coins"".PEP-8"
"Invalid variable name ""x"""
"Invalid argument name ""y"""
"Rating on pylint -> -7.50/10"
"Unused import copy"
"Invalid constant names PEP-8"
"Rating ->  -11.60/10 Various statements violates PEP-8 standards rules"
"Unused import random"
"Unused import fireball"
"Invalid class name ""donkey"""
"Redefining built-in 'dir' .BAD coding practice"
"Too much of duplication."
"Rating  ->  -13.75/10 Lot of unused imports"
"Fireballs sometimes disappear in the right side which is not supposed to happen"
"Unused import player"
"Invalid class name ""fireball"" PEP-8"
"Invalid argument name ""x"" ""y"""
"BUG1 -> The game stops if I don't press anything. BUG2 -> When I am on the top of a ladder,I can't move anywhere BUG3 -> I canâ€™t also fall of a broken ladder BUG4 -> Fireballs sometimes disappear in the right side which is not supposed to happen BUG-5 -> Coins must be at least 20 in a level as specified in assignment"
"Unused import donk_dir from wildcard import,Unused import donk_x from wildcard import"
"Unused variable 'y'"
"Excessive use of literals.Use it as named constants to improve readability."
"Overall Score : -17.65/10"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225]"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - score = 0"
"Rather than declaring global variables, it is better to declare an init method inside the classes to initialize the variables"
"Not according to PEP-8 standards missing whitespace around operator [E225] No whitespace after ',' [E231]should be like - color1 = (random.randrange(180, 250), random.randrange(0, 250), random.randrange(0, 250))"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - self.lead_y_change = 0"
"Method definition not according to PEP-8 standards expected 1 blank line, found 0 [E301]"
"Bad Coding practice Different classes must be separated into different modules"
"Comments not according to PEP-8 standards Inline comment should start with '# ' [E262]"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225]"
"Comments not according to PEP-8 standards Inline Comment should start with '# ' [E265]"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Bad Coding practice Different classes must be separated into different modules"
"Class is too big Can be divided into multiple different classes such as Board, Collisions, Walls etc Bad Code Smell"
"Method definition not according to PEP-8 standards expected 1 blank line, found 0 [E301]"
"Not according to PEP-8 standards continuation line with same indent as next logical line [E125]"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Dead code left unnecessarily which not a comment Bad code smell "
"Dead code left unnecessarily which not a comment Bad code smell "
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - if event.key == pygame.K_a or event.key == pygame.K_d:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - check = ""none"""
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - if event.key == pygame.K_w or event.key == pygame.K_s:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - if event.key == pygame.K_SPACE:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - check = ""none"""
"Not according to PEP-8 standards No whitespace after ',' [E231] should be like - self.User.getChange(0, 0)"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - elif(check == ""down""):"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - if(self.checkladder(self.User) != 0 and( self.checkladder(self.User) - self.checkfloor(self.User, 0) != -1)):"
"Method definition not according to PEP-8 standards expected 1 blank line, found 0 [E301]"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - Y1 = self.User.lead_y"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - Y2 = temp.lead_y"
"Not according to PEP-8 standards missing whitespace around operator [E225] missing whitespace around modulo operator [E228]should be like - self.tempball.when = (self.tempball.when + 1) % 300"
"Not according to PEP-8 standards No whitespace after ',' [E231] should be like - self.checkcollision(self.donk, 0)"
"Not according to PEP-8 standards No whitespace after ',' [E231] should be like - self.checkcollision(self.queen, 1)"
"Not according to PEP-8 standards No whitespace after ',' [E231] should be like - self.Coin.swallowcoins(self.User.lead_x, self.User.lead_y, self.User.block_size, self.screen)"
"Bad coding practice Local  variable temp is assigned but never used [F841]"
"Method definition not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Good statement declaration Nice Job!!"
"Bad way to call the method Ideally the entire method must be under a class ""Main"" and then the class must be called under above"
"Overall Score : -5.00/10"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Function not used anywhere"
"Overall Score : -6.67/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : 7.75/10"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards Missing whitespace after ',' It should be like - random.randint(0, 1)"
"Bad coding practice Local  variable temp is assigned but never used [F841]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : 1.62/10"
"Bad code smells"
"Bad coding practice sys is imported but never used [F401]"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Old convention to raise error should be like - SystemExit(message)"
"Method definition not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Deprecated form of raising an exception It should be like - SystemExit(message)"
"Method definition not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Bad Code Smell Too many arguments in the function"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -18/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Not according to PEP-8 strandards Backslash at the end of line is redundant between the brackets [E502]"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Not according to PEP-8 standards No whitespace after ',' [E231] It should be like - donkey = load_image('facebook.png', -1)"
"Not according to PEP-8 standards No whitespace after ',' [E231] It should be like - return [coin, block, prince, stair, donkey, queen, fire, exit]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -18.40/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Not according to PEP-8 strandards Backslash at the end of line is redundant between the brackets [E502]"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -18.40/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Not according to PEP-8 strandards Backslash at the end of line is redundant between the brackets [E502]"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -0.70/10"
"Bad code smells"
"Bugs -"
"Bad coding practice os imported but never used [F401]"
"Not according to PEP-8 standards, multiple imports on one line [E401]"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Bad coding practice Multiple statements on one line (colon)"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards comparison to True should be 'if cond is True:' or 'if cond:' [E712]"
"Not according to PEP-8 standards missing whitespace around operator [E225] it should be like - % (score)"
"Not according to PEP-8 standards comparison to True should be 'if cond is True:' or 'if cond:' [E712]"
"Not according to PEP-8 standards missing whitespace around operator [E225] it should be like - %  (score + self.score)"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Bad coding practice local variable 'collisions' is assigned but never used [F841]Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Not according to PEP-8 standards missing whitespace around operator [E225] it should be like - % (score + self.score, lives)"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards Line too long (>79 characters) [E501]"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -1.48/10"
"Bad code smells"
"Bad coding practice 'math' imported but unused [F401]"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Class declaration not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Not according to PEP-8 standards missing whitespace after ',' [E231] should be like - self.changeSpeed(5, 0)"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Bad coding practice local variable 'xcoor' is assigned to but never used [F841]"
"Not according to PEP-8 standards missing whitespace after ',' [E231] should be like - return [xccor, ycoor]"
"method declared here but never used in the file"
"method declared here but never used in the file"
"Bad coding practice Blank lines at end of file [W391]"
"Overall Score : -16.51/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -9.41/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -16.09/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Bug: Fireballs unexpectedly multiply on coming down the ladders, although there is nothing as such written in the code"
"PEP-8, Line too long (>79 characters) [E501]"
"Overall Score : -10.77/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -14.46/10"
"Bad code smells"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -16.29/10"
"Bad code smells "
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -19.11/10"
"PEP-8, Line too long (>79 characters) [E501]"
"Bad coding practice PEP-8, Blank lines at end of file [W391]"
"Overall Score : -22.05/10"
"Bad Coding practice Should not import all the methods and classes from a module [F403] Only import the ones that are needed"
"Overall Score : -18.13/10"
"The module declared is redundant, its classes and methods have already been declared above in separate modules The entire module is unnecessarily big and is unreadable."
"Bad code smells"
"Bugs:"
"Bad coding practice time is imported but never used [F401]"
"Method definition not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Method definition not according to PEP-8 standards It must have 2 blank lines above it [E302]"
"Bad coding practice Multiple classes must be separated into different modules"
"Bad coding practice Multiple classes must be separated into different modules"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards No whitespace after ',' [E231] should be like - def move(self, frame):"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - if self.lead_x == frame.block_size:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - if self.lead_y == frame.display_height - 2*frame.block_size:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - lead_x = 0"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - lead_y = 0"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - lead_x_change = 0"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - lead_y_change = 0"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - self.lead_x_change = -self.lead_x_change"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - if self.lead_x == frame.display_width - 2*frame.block_size:"
"Not according to PEP-8 standards missing whitespace around operator [E225] should be like - self.lead_x_change = -self.lead_x_change"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - if frame.checkfloor(self.lead_x, self.lead_y) == 1:"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - x = random.randrange(0, 3)"
"Comments not according to PEP-8 standards inline comment should start with '# ' [E262]"
"Comments not according to PEP-8 standards Block Comment should start with '# ' [E265]"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225] should be like - black = (0, 0, 0)"
"checkCollision() function has not been implemented"
"Overall Rating : 5.09/10"
"Bad coding practice Multiple classes must be distributed across different modules"
"Bugs - "
"Overall Rating : 6.73/10"
"Too many methods in the Class MainGameClass"
"Its better to make static variables to private or protected Good coding practice"
"Multiple classes declared in the same module, Bad coding practice Must be distributed across various different modules"
"Overall Score : -2.71/10"
"Overall Score : 0.21/10"
"Not according to PEP-8 standards No whitespace after ',' [E231]"
"Not according to PEP-8 standards missing whitespace around operator [E225]"
"Overall Score : 0.49/10"
"Overall Score : -2.00/10"
"Bugs :"
"Not according to PEP-8 standards missing whitespace around operator [E225]"
"Not according to PEP-8 standards No whitespace after ',' [E231] missing whitespace around operator [E225]"
"Dead code lying around Comment provides no useful information"
"Dead code lying around Comment provides no useful information"
"Overall Score : -6.50/10"
"There is no checkCollision() function"
"Bug: Jump motion is not implemented properly"
"Bad coding practice Mulitple classes declared in a single module Must be spread across multiple modules"
"Bad coding practice Mulitple classes declared in a single module Must be spread across multiple modules"
"BUG: impossible situation are generated in game.."
"fireball duplicated after falling ffrom a platform after some timeimplement it properly"
"fireball instead of falling , diappears and appears on the platform"
"game is taking 5 sec to load..unnecessarily delay in loading"
"while jump scoreboard disappears..."
"space is not working "
"player is not jumping on pressing SPACE"
"BUG: cant jump across ladder"
"PEP8: line too long"
"same function is called again and again better to put in a loop"
"Codesmell too musch use of literals"
"no public functions"
"no public function"
"no class for fireballs"
"no function checkWall"
"it should be abstracted and should be put in any class"
"too much branching"
"PEP8: line too long"
"line too long"
"BUG: a key for backward movement not working"
"BUG: s key for descend ladder not working"
"BUG: w key for asscend ladder not working"
"BUG: d key for moving forward not working"
"BUG:  fireball are not randomised"
"BUG: fireball never descends ladder"
"BUG: there is no condition for collision between fireball and fireball"
"BUG: there is no condition for collision between fireball and wall"
"BUG: player can ascend a ladder from the middle"
"BUG: game quits automatically"
"BUG:player is immortal"
"BUG: reaching to the princess is not changing the level, or showing any message you rescued queen"
"BUG:not showing player's life"
"bad practice of unnecessary comments"
"lacks modularity"
"What has not been followed, specify?"
"Docstring missing for class and methods"
"No Encapsulation"
"No private members, "
"they are there to fascinate the player"
"this is too score more"
"no encapsulation"
"Docstring missing for class and methods"
"Docstring missing for class and methods"
"No encapsulation"
"no private members"
"Docstring missing for class and methods"
"No encapsulation"
"No private members"
"line too long"
"no condition to deal when fireball falls on fireball"
"fireball duplicates too fireall after some time BUG "
"It is accompanied with previous direction as cliccked by the user"
"Docstring missing for class and methods"
"No Encapsulation"
"No private members"
"line too long"
"code repeatition code smell"
"jump could be written simply without such repeatition"
"code smell class too large"
"No encapsulation"
"no private members"
"code smell. (Lazy class)"
"Docstring missing for class and methods"
"uncessarily time is used"
"game quits when player click 's' in the bottom row, where game starts"
"main is unnecessarily large "
"in the start clicking s gives error"
"input could  be sent to player movement"
"Docstring missing for class and methods"
"Docstring missing for class and methods"
"too many global functions"
"Docstring missing for class and methods"
"code smell. (Lazy class)"
"No encapsulation"
"No private members"
"Code SmellToo much use of literals"
"PEP8: line too long"
"no class for fireball"
"no public method"
"2 classes should be in different modules"
"2 classes should be in different modules"
"These function should be abstracted, should be put in respective classes"
"No function name with checkCollision"
"function collectCoin is missing"
"poor practice to generate board"
"PEP8: lines too long "
"CodeSmell: hardcoding too much use of literals"
"BUG: a is not working properly, player is not going back"
"BUG: q is not working properly, game is not quitting"
"BUG: w is not working properly, not ascending ladder"
"BUG: s is not working properly, not descending ladder"
"BUG very poor UX"
"BUG :there is no score board"
"BUG: player cant jump in a respective directio"
"BUG : player life is not shown"
"BUG: Game layout is not printed properly"
"BUG : Player freezes after collision with donkey"
"BUG:  Fireballs are invisible"
"How u reached the queen?"
"Docstring missing for modules"
"Why to use 2 different classes for Donkey and donkey thread"
"2 different classes should be in different modules"
"function too long, can be broken in smaller modules"
"too much branching (cyclometric complecity)"
"too few public methods"
"too few public methods"
"Code smellexcessive use of literals"
"classes should be in different modules"
"too few public functions"
"lazy class"
"should use png"
"NO private members"
"No encapsulation."
"exactly one space required after assignment"
"Code Smell  too much branching (cyclomatic complexity)"
"line too long"
"too much branching (Cyclomatic complexity)"
"Excessive use of literals"
"PEP8: line too long"
"PEP8: line too long"
"BUGFireball are not regenerated when they reaches the bottom corners"
"BUGPlayer is Generated just near the princess"
"BUG Player's life is not gone when it collides with donkey"
"BUG Fireball most of the time disappears on the rightmost part of  uppermost platform"
"BUG player's life is not displayed"
"using global here is not a good practice"
"No private members"
"No Encapsulation"
"Cyclomatic complexity"
"No randomisation in levels"
"bad practice of generating levels"
"too many local variable"
"too much branching"
"cyclomatic complexity"
"No Encapsulation"
"No private members"
"class Wall and class Ladder should be seperated in different modules"
"lack of public methods"
"Lazy class"
"No Encapsulation and private members"
"lazy class, "
"Lack of public methods"
"No private members"
"lack of public methods"
"all the classes should be in different modules"
"Class is too large"
"No data hinding "
"No encapsulation"
"these function i.e getPerson and Location can be combined to getPosition"
"PEP8: line too long"
"line too long"
"No function for getPosition"
"too many public functions"
"using global in class function is not a good practice"
"player and person should be in different modules"
"No private members"
"No encapsulation"
"No Encapsulation"
"No private members"
"too few public methods"
"No private members"
"poor practice of generating the board.."
"Hard coding"
"code smell: too many literals"
"Method is too long could have reduced it by reducing the if conditions through careful observation"
"FireBall has a seperate move function.Instead fireball ,donkey and player could have had a common move function with constraints thus providing the code with more abstraction"
"Use named constants and not literals."
"main loop method is too long could have been split into several method and could have been made more organized"
"Excessive usage of literals.Use named constants instead.Example: 1 is True -1 is False"
"Excessive usage of literals.Use named constants instead.Example: 1 is True -1 is False"
"Duplication of code.Make a list of the objects and iterate through it than repeating the same line."
"Use pi as a named constant and not 3.14"
"25: Method could be a function (no-self-use)10 Too few public methods (1/2) (too-few-public-methods)2 Unused import random (unused-import)"
"Exactly one space required after both commas (bad-whitespace) .Not according to Pep-8 Standards.Exactly one space required before assignment"
"Exactly one space required after both commas (bad-whitespace) .Not according to Pep-8 Standards."
"Found indentation with tabs instead of spaces (mixed-indentation)"
"Found indentation with tabs instead of spaces (mixed-indentation)Exactly one space required around assignment"
"Found indentation with tabs instead of spaces (mixed-indentation)Exactly one space required around assignmentExactly one space required after  both commas"
"Trailing whitespace (trailing-whitespace)"
"Found indentation with tabs instead of spaces (mixed-indentation) Exactly one space required around assignment"
"Code has too many unused imports.(The list is too long for me to mention).Creator has unnecessarily imported many modules without any usage.Bad Coding practice."
"Missing docstring in line 1.Not according to Pep-8 Standards."
"Exactly one space required after  both commas (bad-whitespace) .Not according to Pep-8 Standards."
"Exactly one space required before assignment (bad-whitespace) Not according to Pep-8 Standards."
"Exactly one space required after  both commas  (bad-whitespace) Not according to Pep-8 Standards."
"Exactly one space required after both commas (bad-whitespace) Not according to Pep-8 Standards."
"Trailing whitespace observed.Not according to Pep-8 Standards."
"Exactly one space required around assignment.Not according to Pep-8 Standards."
"Use named constants instead of literals"
"could have used the move function inherited from person instead of declaring one of its own.Use inheritance for more abstraction"
"redefinition of the same global constants,could have rather made a constants module and imported it"
"class is too small it is a lazy classCould have rather been implemented as a method"
"class is too small it is a  lazy class Could have rather been implemented as a method"
"Player cannot move on to a floor if floor has two consecutive ladders (one below and one above),he is forced to fall on to the floor,but cannot move on to the floor from the ladder.Broken stairs have not been implemented.Unnecesary printing on terminal and error handling is not done when the game finishes on pressing 'q'."
"name of a variables name should define their function.too short identifiers used"
"global variables should not be used.bad coding practice"
"Repetition of code ,could have used checkcollision function instead "
"init method is too long,could have implemented certain repetitive things in it as seperate functions"
"excessive use of literals use named constants instead"
"excessive use of literals use named constants instead"
"Board  class is too long,it is almost like a God class,"
"two similar methods almost does the same thing,could have instead implemented it as one method"
"excessive use of literals use named constants instead"
"method is too short need not have defined a seperate method"
"variable name should define its function,the identifier is too short"
"abusive language used"
"method is too long"
"Initializations are made inside init without any specifc definiton"
"Excessive use of literals.Use it as named constants to improve readability."
"Duplication of code.Could have specified the starting and ending points in two seperate lists and reduced the number of for loops"
"Cant use import statements inside functions.Should be done seperately outside"
"Duplication of codeCould have written  the last five lines  inside one if condition."
"Unnecessary could have written the if condition better. if a!=b do statement....is better thanif(a==b) pass...else do statement..."
"Cant use import statements inside functions.Should be done seperately outside"
"Cant use import statements inside functions.Should be done seperately outside"
"Excessive use of literals.Use it as named constants to improve readability."
"lazy classClass does too little"
"There is no Person class which player inheritsCreator has not sticked to the requirements"
"Excessive use of literals.Use it as named constants to improve readability."
"Cant use import statements inside functions.Should be done seperately outside"
"Excessive use of literals.Use it as named constants to improve readability."
"Initpos has same functionality as init There are two methods with similar functionality"
"Cant use import statements inside functions.Should be done seperately outside"
".Cant use import statements inside functions.Should be done seperately outside"
"Cant use import statements inside functions.Should be done seperately outside"
"Variable length is too small.Name of variable should reflect its function"
"Variable length is too small.Name of variable should reflect its function"
"Variable length is too small.Name of variable should reflect its function"
"Variable length is too small.Name of variable should reflect its function"
"Excessive use of literals.Use it as named constants to improve readability."
"Too many if conditions.Method has grown too large.Not according to pep-8"
"One method has many return statements but all of them return the same variable name.Duplication of code."
"Cant use import statements inside functions.Should be done seperately outside"
"Method is too long.Too many if conditions.Not according to pep-8"
"Clear duplication of code Creator has written the same if and else condition twice"
"Clear duplication of codeCreator has written the same if and else condition twice"
"Variable length is too small.Name of variable should reflect its function"
"Duplication of code.Creator could have called print board after the if statements."
"Both donkey and player have seperate move functions. Could have implemented them in person (or in this case boarditems(lazy class))  and could have used inheritance."
"Cant use import statements inside functions.Has to be done outside"
"fireball initial direction is not randomized"
"Method is too small does almost nothing"
"Cant use import statements inside functions.Has to be done outside"
"Could have implemented move  in person (or in this case boarditems(lazy class)) and could have used inheritance."
"Cant use import statements inside functions.Has to be done outside"
"No usage of   getters and setters to change x and y coordinatesCreator has not stuck to the requirements of assignment"
"No usage of getters and setters to change x and y coordinatesCreator has not stuck to the requirements of assignment"
"Cant use import statements inside functions.Has to be done outside"
"Variable length is too small.Name of variable should reflect its function"
"Variable length is too small.Name of variable should reflect its function"
"Pgame not used.level functionality has not been implemented.Display keeps coming on and off when user tries to move or jump.Game is not easy to play."
"Missing module docstring (missing-docstring)"
"class already defined line 5 (function-redefined)"
"init method from base class 'Person' is not called (super-init-not-called)"
"Using the global statement (global-statement)"
"Unnecessary parens after 'if' keyword (superfluous-parens)Found indentation with tabs instead of spaces (mixed-indentation)Exactly one space required after comma"
"Found indentation with tabs instead of spaces (mixed-indentation)Exactly one space required around assignment"
"Found indentation with tabs instead of spaces (mixed-indentation)"
"global variables used bad practice"
"Multiple levels have not been implemented.Board has been hardcoded.Functionality missing"
"Duplicated code .Could have been simplified"
"Too many for loops with the same operations.Could have been simplified into one"
"Too many global variables bad coding practice"
"Functionality Bugs:Major:The game stops if I dont press anything.This is obviously a bug.Sometimes ,when I am on the top of a ladder,I cant move anywhere, I am stuck.I cant also fall of a broken ladder. Fireballs sometimes disappear in the right side which is not supposed to happen.Coins must be atleast 20 in a level as specified in assignment.Criteria is not met. Minor:"
"Good.Very few have implemented this!"
"Excessive use of literals.Use it as named constants to improve readability."
"Excessive use of literals.Use it as named constants to improve readability.For instance -1 can have been named as False.1 could have been named as True."
"Global variables used.Bad coding practice"
"Creator could have used inheritance betterToo much of duplication.Person has a move function used by Player only.Fireball and Donkey have their seperate move functions,instead both of them could have used the move functions of Person with some flags ."
"Could have used getters and setters defined in Person class instead.Their declaration is proving to be redundant."
"Should have done this  entire thing inside fireballs remove method."
"Excessive use of literals.Use it as named constants to improve readability.For instance -1 can have been named as False.1 could have been names as True"
"This removes all the fireballs.Player does not have a method of how he removes a specific fireball inside FireBall class."
"Excessive use of literals.Use it as named constants to improve readability.For instance -1 can have been named as False.1 could have been named as True."
"Creator has a set screen class without any methods and instead has a print screen function outside.This function should have been implemented as a method inside it."
"Duplication of print statements for the first two .Could have instead doneprint(''\033[1m'+'\033[91m' + surface[i][j]  + '\033[0m' + ' ') with 1 if condition."
"Can remove the comma at the end of each print.There is no use of it .Each statement is an elif condition."
"Duplication of print statements for the first two .Could have instead doneprint ('\033[1m'+'\033[95m' + surface[i][j] + bcolors.BOLD + ' '), with 1 if condition"
"redundant print statement just to print newline "
"Import command should be above.Cant be done inside a function"
"Not enough abstraction.User has a set screen method.Why is al of l this being implemented outside the class,instead another method could have been added."
"Excessive use of literals.Use it as named constants to improve readability."
"Excessive use of literals.Use it as named constants to improve readability.For instance -1 can have been named as False."
"Excessive use of literals.Use it as named constants to improve readability.For instance -1 can have been named as False."
"Excessive use of literals.Use it as  named constants to improve readability."
"Excessive use of literals.Use it as named constants to improve readability."
"Excessive use of literals.Use it as named constants to improve readability."
"Duplication of code."
"Irrelevant method in this class.How does it make sense to have a method called queen captured in Person class?! Person class must have generalized methods"
"This method should be inside Player class.Also a common reset function inside Person class could have been implemented.Inheritance not used properly"
"Class set screen does not have  any methods other than init.The print screen method should have been inside this class.(It has been declared outside all classes)"
"Excessive use of literals.Use it as constants to improve readability."
"Too much of duplication.Could have initialized the values in a list clearly defining the positions and done it in less number of for loops.Cyclomatic Complexity."
"Excessive use of literals.Use it as constants to improve readability."
"Wildcard import. Bad practice. Should import only those parts which are required."
"Indentation using tabs. Bad practice. Must use 4 spaces per indentation level."
"Unused variable j."
"Whitespace not as per PEP-8. But use of 'if' condition without parenthesis is a good practice."
"Missing docstring. Must be added to improve readability of the code."
"Long method. Bad code smell."
"Hard-coded board. Atleast should have generated stairs randomly."
"Also after each comma, there should be exactly one whitespace. Not present here. Bad practice."
"Lines too long. Must have less than 79 characters. Not as per PEP-8 rules."
"Invalid variable name. Not as per PEP-8 rules."
"Pretty nice approach to generate coins randomly."
"I know, right? :P Thanks anyway."
"Bad approach. Only what is used must be imported."
"Invalid variable name. Not as per PEP-8 standards."
"Redefined outer name sys."
"Missing function docstring. Not a good practice. Adding docstring improves readability of the code."
"Excessively short identifier. Method level code smell. Bad practice."
"Invalid name for a variable. Such instances are very often in the code. Very bad practice."
"Again unnecessary of parenthesis in 'if' condition. Bad practice. "
"Parenthesis not necessary. Not as per PEP-8 rules."
"Unused variable."
"Unnecessary use of list. Since the number of donkey is just one in the game, no need to create a list. Bad practice."
"No need for a parenthesis in 'if' condition. Bad practice."
"Exactly one space should be added after a comma."
"Using tabs is a bad practice for indentation. Use spaces."
"Good. Haven't used a parenthesis. Followed PEP-8 standards finally."
"Good practice to provide instructions during the game. Allows the user to play the game comfortably."
"Large class. Bad code smell. Must have used several sub classes."
"Missing docstring. Must be added to improve readability of code."
"One space should be added after each comma. Not as per PEP-8 rules."
"Must have imported this class from a separate file. Multiple classes in same file is a bad practice."
"Long line. Bad practice. Multiple parenthesis in 'if' condition. Bad practice."
"Too many branches. Code smell. Cyclomatic complexity."
"Certain cases have been repeated. Not a good idea. Must have tried to analyze all the cases and then implemented accordingly."
"Line too long. Bad practice."
"Line too long. Bad practice."
"Again multiple classes have been used inside the same function. Bad practice. Must use separate files for each classes."
"Class docstring are missing. Reduced readability of the code."
"Fireball do not fall down the stairs."
"Multiple method docstrings are missing. Reduced readability of the code."
"Excessively short identifier. Method level smell."
"Bad name for a variable. Also one spaces on each side of operator must be added."
"True that."
"Module name is invalid. Plus module docstring is missing."
"Line too long. Not as per PEP-8 standards."
"At multiple instances, excessively short literals and identifiers used. Bad code smell."
"Bad whitespace. Not as per PEP-8 standards."
"Unnecessary use of multiple 'for' loops."
"Unused variable. "
"Unused argument mv. Bad code smell."
"Invalid classname. Class Docstring missing. Not a good practice to add multiple classes in a single file."
"Lazy class. Does way too little."
"Method and class docstring missing in multiple places. Not a good practice."
"Too long method. Method level smell."
"Cyclomatic complexity. Too many if elif branches. Must be avoided."
"Invalid class name donkey. Plus docstring missing."
"Just a single level in the game. Multiple levels have not been implemented."
"Jump function has been implemented in a weird way. You can only jump in the direction of your previous move. Not flexible and user-friendly."
"Unused variable sleep and os."
"492 lines have been duplicated in the whole program. Bad practice."
"Wildcard import is not a good practice. Only import those parts which are required."
"Too long method. Method level smell."
"Too many branches. Cyclomatic complexity."
"Whitespace rule has been violated quite a lot of times. Not as per PEP-8 standards."
"Unused import os. Waste line."
"Wildcard import. Not a good practice. Must import only those stuffs which are required."
"Nice, have added docstring but the line is too long and is violating PEP-8 standards."
"Use of invalid variable name and extremely short identifiers at multiple instances. Bad code smell."
"Old style definition of a class. Init method for the class is not present."
"Docstring not present. Must be added to improve readability of the code."
"Invalid variable names. And excessive use of literals. "
"Too long function. Method level smell. Should have divided into sub-functions."
"Line too long. Not as per PEP-8 standards."
"Too many loops. Code smell (Cyclomatic Complexity)."
"Bad whitespace. Must add exactly one space after comma. Not as per PEP-8 rules."
"Missing module docstring. Should be added to increase readability of the code."
"Bad indentation practice. Must use 4 space per indentation level.(PEP-8 standards)"
"Invalid variable name 'fd'. Not as per PEP-8 standards."
"Good practice to add class docstring. "
"Nice. Added a space after comma."
"Exactly one space required around assignment. "
"Must define separate classes in separate files. Bad practice."
"Missing class docstring."
"Nice. Added method docstring."
"Exactly one whitespace should be added after coma. Not followed here. "
"Bad whitespace. Not as per PEP-8 standards. Must add exactly one space around comparison."
"No need for a parenthesis in 'if' statement."
"Too long method. Method level code smell."
"Cyclomatic Complexity. Too many if elif branches."
"There are no such cracks in floors for the player to fall through. Also gravity is not present. So player actually never falls."
"Module name is invalid."
"Invalid constant names rows, columns, blank, layout."
"Invalid function name. Not as per PEP-8 standards."
"Wildcard import is considered as a bad practice. Only import those stuffs which are required."
"According to PEP-8 standards, the constant name is invalid."
"Bad practice. Not a valid variable name. "
"No donkey present. No obstacle present. Game is incomplete."
"No queen present."
"Player moves fine except, the fact that it does not fall when it finds edge of the floor."
"Player climbs the ladder without any dis-functionality."
"The intermediate steps of a player jumping are not being displayed. "
"Player 'P' is not able to jump on its spot."
"Player 'P' is not able to jump off the floor edge."
"Player Does'nt die by the fireballs or the donkey, instead 'P' eats the fireballs or lets them pass."
"Player only jumps in the direction of motion, which should not be the case."
"Large class. (Player(person))"
"Classes 'Player' and 'Person' can be modified to share common methods. Much better use of inheritance can be done. "
"Refused Bequest"
"Conditional Complexity"
"Comments have no meaning."
"Conditional Complexity"
"long method used : All other things being equal, a shorter method is easier to read, easier to understand, and easier to troubleshoot. Refactor long methods into smaller methods if you can."
"long method used : All other things being equal, a shorter method is easier to read, easier to understand, and easier to troubleshoot. Refactor long methods into smaller methods if you can."
"Instance of 'Player' has no '_Person__y' member (no-member)Instance of 'Player' has no '_Person__x' member (no-member)"
"Donkey does not kill the player while coming in contact with the player."
"Donkey produces fire balls in pairs. "
"Donkey does not move randomly, it has a specific path which it follows."
"Donkey does not jump."
"Fireballs are fired in pairs."
"Fireballs are not going forward after a point on the top floor. They dont fall from the top floor."
"Fireballs eat the top lower 'H' of top floor starecase."
"Paired fireballs merge into the already fixed fireballs (which are not going forward)."
"long method used : All other things being equal, a shorter method is easier to read, easier to understand, and easier to troubleshoot. Refactor long methods into smaller methods if you can."
"A random board generator function could have been used."
"Thanks!"
"It made things easy for me while coding.! Makes things easy while designing your code.!"
"Uncommunicative Name: any random user cant really distinguish between 'printf', 'printd' and 'printh' from their names. The name does not explain the method well enough."
"long method used : All other things being equal, a shorter method is easier to read, easier to understand, and easier to troubleshoot. Refactor long methods into smaller methods if you can."
"The same code has been used many times. Its not a healthy practice."
"Too many return statements "
"PEP-257 standard violation: Missing method docstring."
"PEP-257 standard violation: Missing function docstring."
"Score is incremented by 5 every time the player 'P' collects a coin 'C' .!"
"Player never dies!Also there's  no provision of ""Game Over"".! (which might happen when the player dies)"
"3 stages of the game not definedAnd therefore there's no way that player will win the game.!"
"Score is displayed after every move and it works just fine."
"bad whitespacing - PEP8 violation"
"imports need to be done in separate lines not by commas.  PEP8 violation "
"imports need to be done in separate lines not by commas.   PEP8 violation"
"Invalid variable name ""ch"".  PEP-8 standards."
"Too many branches and too many statements being used."
"Bad whitespacing"
"indentation with tabs instead of spaces (mixed-indentation)  PEP8 Violation"
"bad whitespace is not a code smell"
"indentation with tabs instead of spaces PEP8 violation"
"indentation with tabs instead of spaces PEP8 violation"
"Exactly one space required after comma required PEP8 violation"
"Which I have left un-mentioned"
"Different lines should be used to make imports. PEP8 standards"
"Mixed indentation"
"Conditional Complexity in the move function."
"Repetitive code. Could have been in a better way."
"Invalid variable name 'x'"
"Invalid variable name 'y'"
"imports must be made in separate lines rather than in just one line.!  PEP-328"
"Code rating : -311.55 / 10"
"Invalid argument names 'x' , 'y' , 'x1' , 'y1'.  PEP8 violation"
"Method could instead be a function. There is no reference to the class, suggesting that the method could be used as a static function . BAD code smell"
"When we execute the code, it asks for difficulty level. As soon as we enter a difficulty level (1/2/3) it does not display anything. "
"Improper Functions and Classes, bad execution of code."
"PEP-257 - Missing function docstring"
"W0311 -  Bad indentation. Found 16 spaces, expected 4 (bad-indentation)"
"PEP-8 - Invalid variable name 'p' "
"Warning: ""Redefining name 'sys' from outer scope"""
"PEP8 : Invalid variable name 'fd'"
"PEP8 : Invalid variable name 'ch'"
"C1001 - Old style class defined"
"Invalid argument name 'b'"
"if condition for Jump functionality of the player not implemented in the move function.!"
"CheckCollision() function not implemented."
"PEP257 - Missing method docstring.!"
"PEP257 - Missing method docstring.!"
"PEP 8 - Invalid variable name 'y'"
"Instead of using ' ' use '.' ,while you hard-code as , in other functions like : move , setcoins etc you've used '.' instead of ' '."
"position of the player 'P' should not be hard-coded (even if you decide to hard code the entire board). Instead ,the initial position of 'P' must be defined separately. And from there-on the position of 'P' must be updated by the ""update_updatedposition(self,b,inp)"" function"
"Player board hard-coded, bad programming practice.!"
"PEP8 std violation - Missing method docstring"
"Invalid variable names :- 'x','y','numofDonkeys','retforplayer','gh','g','p','b'. PEP-8 standard violation. "
"Random stair ,floor , coin generations have been implemented. Good Job! "
"Trailing white space PEP8 violation"
"Line too long! 80 characters. PEP8 violation"
"Conditional Complexity : too many if-else-elif statements."
"Unnecessary Parenthesis after elif condition, was not required.!"
"invalid variable names : 'a' , 'ps' , 'MAXX' , 'MAXY'. "
"Warning : attribute 'ps' is defined outside init.!"
"Player does not jump on the spot (vertically up)"
"Conditional Complexity"
"BUG - When the player in the middle of the ladder and you press 'a' or 'd' , the player falls across levels and the game terminates with TRACEBACK error.!"
"Whenever the the player encounters an edge it falls on the lower floor. Its working perfectly."
"BUG - When the player starts climbing stairs (i.e if we press 'w' on the first stair) it directly goes onto the (top-1) stair without showing the intermediate climbs made. So if you want to access the middle of the staircase you first have to go up and then come down."
"Non-working game functionalities:1) Does not show the player jumping.2) The player does not fall off the different layers when taken to the edge.3) Levels not implemented.4) Eats one of the ladders on the way.5) game does not finish when the player reaches the queen.6) The player does not come down the ladder sometimes.7) The fireballs do not go down the first layer.8) Eats fireballs at times."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is -76.68/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Invalid class/attribute/method names have been used throughout the code, disregarding PEP-8 Standards."
"Unused Imports."
"Code Smell:No Modularisation."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Missing class docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Unnecessary parenthesis after 'if' keyword."
"Unnecessary parenthesis after 'elif' keyword."
"Unnecessary parenthesis after 'not' keyword."
"Code Smell: Too many branches (33), should be <= 12."
"Code Smell: Too many statements (229), should be <=50."
"Move function could be implemented in a better way."
"Line too long (143), should be <= 80. Unnecessary parenthesis at places."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is -17.93/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Not all the imports have been used(threading, copy,sys, person, time), thereby disregarding PEP-8 standards."
"Missing class docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Old-style class defined, thereby disregarding PEP-8 standards.New-style classes inherit from object, or from another new-style class.class NewStyleClass(object): pass class AnotherNewStyleClass(NewStyleClass): pass Old-style classes don't.class OldStyleClass(): pass"
"Invalid argument name ""x"", ""y"", ""ch"".PEP-8 Standards."
"Missing method docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Code Smell:Multiple classes should be in different modules, which has been neglected here. This is bad coding practice."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces, tabs) which I have left un-mentioned.Pylint rating of the code is -19.38/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Arguments number differs from overridden method."
"Not all the imports have been used(threading, copy,sys), thereby disregarding PEP-8 standards."
"Missing class docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Old-style class defined, thereby disregarding PEP-8 standards.New-style classes inherit from object, or from another new-style class.class NewStyleClass(object): passclass AnotherNewStyleClass(NewStyleClass): passOld-style classes don't.class OldStyleClass(): pass"
"Code Smell:Too many branches (22), should be <= 12."
"Code Smell:Too many statements (77), should be <= 50."
"Instance of 'Player' has no '_Person__x' member.Instance of 'Player' has no '_Person__y' member."
"Unnecessary parens after 'if' keyword, not required."
"Unnecessary parenthesis after 'elif' keyword, not required."
"Unnecessary parenthesis after 'if' keyword, not required."
"Unnecessary parenthesis after 'elif' keyword, not required."
"Unnecessary parenthesis after 'if' keyword, not required."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces, tabs) which I have left un-mentioned.Pylint rating of the code is -311.55/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Unused imports (threading,time,os)."
"Missing class docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Old-style class defined, thereby disregarding PEP-8 standards.New-style classes inherit from object, or from another new-style class.class NewStyleClass(object): passclass AnotherNewStyleClass(NewStyleClass): passOld-style classes don't.class OldStyleClass(): pass"
"Invalid attribute name ""_a"".PEP-8 Standards."
"Hardcoding of the board has led to just too many problems and conflicts with PEP-8 Standards."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is -0.36/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Many attributes defined outside init.The idea behind this message is for the sake of readability. We expect to find all the attributes an instance may have by reading its init method."
"Unused import random."
"Unable to import 'msvcrt'."
"Missing function docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring"
"Code Smell:Too many instance attributes (23), should be <=7."
"Invalid class name ""game"", disregarding PEP-8 standards."
"Old-style class defined, thereby disregarding PEP-8 standards.New-style classes inherit from object, or from another new-style class.class NewStyleClass(object): passclass AnotherNewStyleClass(NewStyleClass): passOld-style classes don't.class OldStyleClass(): pass"
"Unnecessary parenthesis after 'if' keyword."
"Unnecessary parens after 'elif' keyword."
"Code Smell:Line too long (100), should be <= 80 characters. PEP-8 Standards."
"Code Smell:Too many branches (13), should be <=12."
"Code Smell:Too many branches (17), should be <=12."
"Code Smell:Line too long (100), should be <= 80 characters. PEP-8 Standards."
"Code Smell:Too many branches (15), should be <=12."
"No exception type(s) specified (bare-except)."
"Bad indentation. Found 16 spaces, expected 12."
"No exception type(s) specified (bare-except)"
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is 0.61/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Many attributes defined outside init.The idea behind this message is for the sake of readability. We expect to find all the attributes an instance may have by reading its init method."
"Invalid class name. PEP-8 Standards."
"Old-style class defined, thereby disregarding PEP-8 standards.New-style classes inherit from object, or from another new-style class.class NewStyleClass(object): passclass AnotherNewStyleClass(NewStyleClass): passOld-style classes don't. class OldStyleClass(): pass "
"Invalid attribute names. PEP-8 Standards."
"Too many instance attributes (10), should be <=7.PEP-8 Standards."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is -19.31/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Many attributes defined outside init.The idea behind this message is for the sake of readability. We expect to find all the attributes an instance may have by reading its init method."
"Non-working Functionalities:1) Player does not jump."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Unused import time."
"Invalid class name ""person"".PEP-8 Standards"
"Missing class docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Missing method docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Invalid class name ""player"".PEP-8 Standards."
"Code Smell:   Too many arguments (6), should be <= 5"
"Code Smell: Method could be a function (no-self-use)."
"Code Smell:The whole game is in a single file, which is a bad coding practice, defying all PEP-8 standards."
"According to PEP-8 Standards, there are a lot of indentation problems(white-spaces) which I have left un-mentioned.Pylint rating of the code is -19.54/10 on a scale of -infinity to 10. Code with rating between 5 to 10 is considered good code."
"Game functional problems:The jumping part is not as desired. The player jumps in only one direction."
"There were too many invalid variable names used throughout the code that I have left un-mentioned."
"Missing module docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Missing function docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Invalid variable name ""ch"" according to PEP-8 standards."
"Invalid ""class"" name according to PEP-8 Standards."
"Code Smell:Too few public methods (0), should be atleast 2."
"Missing method docstring.Used when a module, function, class or method has no docstring. Some special methods like init() don't require a docstring and for those, this message is not raised if they have no docstring."
"Redefining name 'board' from outer scope(line 278)."
"Code Smell:Unused argument 'board'."
"Unnecessary parenthesis after 'if' keyword."
"Unnecessary parenthesis after 'elif' keyword."
"Unnecessary parenthesis after 'if' keyword."
"Class 'queen' has no 'row' member."
"Unnecessary semicolon."
"Unnecessary parenthesis after 'elif' keyword."
"Unnecessary parenthesis after 'if' keyword."
"Redefining name 'l' from outer scope (line 337)."
"Unreachable code.  You returned from the method by using break. Anything after that is unreachable."
"Unreachable code. You returned from the method by using break. Anything after that is unreachable."
"Code Smell:Too many branches (16), should be <= 12."
"Unnecessary parenthesis after 'while' keyword."
"Code Smell:Method could be a function (no-self-use)."
"Code Smell:Too few public methods (1), should be >= 2."
"Code Smell:Too few public methods (0), should be >= 2."
"Invalid class name ""fireball"". PEP-8 Standards."
"Too few public methods (0), should be >= 2."
"Using global for 'l' but no assignment is done."
"Code Smell:Too many branches (15), should be <=12."
"Redefining built-in 'quit'."
"Code Smell:Too many branches (21), should be <= 12."
"Code Smell:Too many statements (82), should be <= 50."
"Used builtin function 'input'."
"Code Smell:Too many branches (22), should be <= 12."
"Code Smell:Too many statements (71), should be <= 50."
"No value passed for parameter 'fireballlist' in function call."
"Unused variable 'chose'."
"Function checkWall() and collectCoin() have not been implemented."
"Class Board is too big.(code-smell:Large Class)"
"Function jump should be placed inside the player class."
"Bug: jump only works when when pressed along with some other keys like ('W','A','S','D')"
"Bug: while jumping the game pauses except for the player. The fireballs stop moving."
"Function move should be inside the player class."
"Bug: Fireballs get stuck at some places at times like , above a ladder."
"Bug: Fireball gets removed from both sides of the lowest platform. It is only supposed to be go away from the spawn point of the player."
"PEP-8 standards are not followed."
"This class is too big, should be made smaller by automatic generation of walls instead of hardcoding or declaring it somewhere else.(code-smell:Large Class)"
"Similar code used too many times.(Duplicated code)"
"All objects like coin,fireball,etc could have inherited from a common class called objects having functions to set the image and its position since they are common to both of them."
"This function could have been modular, movement of the player could have been done in the player class."
"This part should have been in the fire ball class."
"Too many operations are taking place in main, it should be more modular."
"Function getPosition() does not exist."
"Function CheckWall() does not exist."
"PEP-8 standards have not been followed."
"The game exits when the downkey is pressed ""S"".(bug)"
"The player does not jump up when just spacebar is pressed without any other key."
"Bug: While jumping the entire game stops except for the player. Fireballs stop moving."
"All compulsory functions have been implemented."
"functions getchar(), print_board() and checkWall() should be put in one class."
"Code duplication, this same function exists in global.py also."
"Function getchar() should be in a class."
"Function print board should be put in a class."
"PEP-8 standards have not been followed."
"Donkey and coins have not been implemented."
"Jump Bug: Player does not fall when jumping of a platform."
"Increment of score is not according to the question.(each coin is worth 5 points)"
"Lazy class.(code smell)"
"Too many parameters.(code smell)"
"PEP-8 standards are not followed."
"The function for getting position should have been in the person class , since Player and Donkey inherit from it.(code-smell:Duplicated Code)"
"Initializing the position of the character should also be in this class.(code-smell:Duplicated Code)"
"Objects like door,ladder,coins should have been inhertied from a class, which coud have the method to initialize the images and its position."
"PEP-8 standards not followed"
"Documentation string is missing."
"There is a trailing whitespace. PEP-8 not followed."
"Constatnts should be upper case."
"There should be one space after every comma and there should be no space before "":""."
"Trailing whitespace."
"There should be space after comma."
"The line is too long, length of line should be at most 80 characters."
"line 34,36,37 space missing after comma."
"spaces shuld not be there before "":"""
"There should be a space after the the comparison,."
"Unnecessary parenthesis , if statement does not require parenthesis."
"There should be no space before "":""."
"Parenthesis is not required for print statments."
"Too many parameters.(:code smell)"
"common guidelines:"
"player can't jump,fireballs don't destroy the player,fireballs don't terminate,while we play the game it terminates without quit prompt,check collision() not present."
"Duplicated coding practice"
"common guidelines:"
"Class name should follow this regex [A-Z_][a-zA-Z0-9]+"
"Freeloader class"
"Donkey is not inheriting any move function from person in class donkey its position is fixed"
"common guidelines:"
"High cyclomatic complexity (not a good coding practice)"
"while playing game there is error i.e. index crosses the range and the game terminates"
"GENERAL GUIDELINES 1.  Trailing white spaces found at some places. 2. It's a good practice to give indentation using 4 spaces rather than tab 3. Spaces are not present correctly around operators like comma,assignment operator etc. 4. Usage of docstrings for modules,methods,functions is a good coding practice. 5. Classnames,Variablenames,Constantnames should follow proper PEP-8 standards. 6. There are unused things in the code i.e. randint. 7.  it's a good coding practice that the class has a init() function. 8.   Public functions should be in good number."
"cyclomatic complexity"
"GENERAL GUIDELINES 1.  Trailing white spaces found at some places. 2. It's a good practice to give indentation using 4 spaces rather than tab 3. Spaces are not present correctly around operators like comma,assignment operator etc. 4. Usage of docstrings for modules,methods,functions is a good coding practice. 5. Classnames,Variablenames,Constantnames should follow proper PEP-8 standards. 6. There are unused things in the code i.e. randint. 7.  it's a good coding practice that the class has a init() function. 8.   Public functions should be in good number. 9. some classes are following the old style defining methods"
"As we run the code the board reappears after every fixed time gap freezing the scoreboard.There is a error in the display process (Logical error)"
"This code cannot handle broken stairs"
"rating of this file is 5 which is good"
"Here os module is not required"
"Here module msvcrt is not being imported."
"Rating is -9.31"
"Rating is -5.71"
"PEP8 line too long"
"Too much hardcoding in making stage and coins"
"Intialising of pos_x and pos_y to 0 is not necessary"
"Temporary field Code Smell :  cc variable is not used anywhere in the code"
"The code has been rated -1.96/10 mainly due to spaces and variable names which dont follow PEP8 standards."
"Comments Code Smell : There are no  comments to explain the functionality of each part of program"
"No organisation of code every thing is done straight below one another and only in continuous if statements( too many of if statements)"
"Commented Code should be removed and it is too much"
"PEP8 : Line too long"
"Fireballs don't get destroyed which cross the limit of screen and create an error in program"
"After restart of game by reaching queen, collected coins are not replaced on the stage."
"Levels are optional feature and not showing any message after reaching princess doesn't mean it is a BUG, It was mentioned is Assignment that game must reset and score must be incremented by 50."
"Improper indentation in lines 275,276 and 188"
"No docstring to explain the work done by function"
"Missing whitespace after ',' according to PEP8 standards"
"whitespace around operator is missing violating PEP8 standards"
"Bug : Player jumps and falls down to lower floor if ladder is climbed too fast"
"PEP8 : there should be no whitespace before ')'"
"Missing whitespaces around '=='"
"PEP8 : comparison to True should be 'if self.check is True:' or 'if self.check:' "
"PEP8 : Multiple spaces after print"
"Bug : Fireballs dont reset after player is dead."
"Bug: In Level 1 , if the donkey crosses the spawn point of player and releases fireball to the right, then the fireball doesn't get destroyed and keeps continuously moving."
"Position of Score and Lives are hardcoded which is a bad practice."
"checkNotWall function is implemented which does the same thing. checkCoin() does the work of collecting the coin"
"too many public methods"
"too short class(bad code smell)"
"does the one on the platform still remain on the platform?"
"it is not disappearing and appearing, it is falling. i hv not implemented stepwise falling.it falls at one go"
"avoid wildcard imports"
"imports should be in separate lines"
"method is too long(bad code smell) and too many branches"
"repitition of code"
"what should a space do?"
"it should not jump across the ladder(except the broken ones). that's how it is implemented."
"because i have put it on sleep for 0.5 seconds so that the jump is visible"
"there should be space between statement and comment"
"bug: fireball falls down the stairs at one go. not step wise"
"bug: the player is safe at stairs"
"extra variable not needed"
"bad-whitespace"
"The board has been hardcoded"
"Bug: the player jumps only in the direction of its previous movement. "
"avoid wildcard import"
"code repetition(code smell:duplicate code)"
"line too long (106 characters)"
"line too long"
"make use of getPosition() of base class(person)"
"repitition of code. already there in gen.py"
"declare class attributes as private"
"self not passed as argument"
"imports should be in separate lines"
"superfluous parenthesis "
"2 blank lines required according to PEP8 standards"
"super init not called (of person class)"
"2 blank lines need to surround class definition according to PEP8 standards"
"super init not called( of base class donkey)"
"declare the class attributes as private variables"
"avoid direct use of the attributes. make use of getX()"
"fireball is able to fall from broken ladders"
"avoid using wildcard imports"
"imports should be in separate lines(PEP8)"
"variable never used(code smell : excessive use of literals)"
"fireball disappears after collision"
"block comments should start with #"
"entering 2 does not exit the game.instead game continues and lives become -1"
"person class already contains getX(). make use of it."
"person class already has getY(). make use of it."
"superfluous parenthesis"
"2 blank lines should surround the class definition according to PEP8"
"Code Smell Contrived Complexity, this could have been done in a shorter and simpler way by making a list of lists and looping through the list and getting the arguments from the list."
"Too many Branches"
"this function is unnecessary and not required, self is not used anywhere"
"Code Smell : Code Duplication, Exists here even though getPosition has been inherited from Class Donkey"
"BUG : ""Time stops for the Player to jump"" and so do the fireballs and donkeys, after jump fireballs and donkeys move one step. So basically the game can be easily completed by jumping throughout(pausing time) and only ""playing the time"" after every jump(for one step) and when climbing the ladder."
"BUG: when on base(lowest) platform, making the player go down by pressing 'S'  anywhere(other than ladder) gives error index out of Range"
"Method too long Code smell"
"Too many Branches and too many return calls, Code Smell: Contrived Complexity, should be broken into smaller pieces, scope for simplicity"
"no Use of self in this function, the code could easily be placed wherever it is to be used without declaring it as a useless method in another class, no update to variables of this class"
"BUG : collision with queen has not been checked, collision with the platform on which queen is in marks the end of level."
"BUG : Coins are created in places which cannot be reached by player. This can be corrected by placing coins while keeping Boundary of each platform in mind."
"Code Smell Duplicated Code, line 95-99, 105-109,117-121, lines can be condensed."
"Missing module docstring"
"Missing class docstring"
"Too many Arguments, there are 6 arguments, should be 5"
"Missing method docstring and invalid-name s, constant variable's name should be in uppercase"
"attribute not defined outside init, should be defined in init and updated here and invalid-name no, constant variable's name should be in uppercase"
"attribute fire defined outside init, should be defined in init and updated here"
"Same as donk.py as is backup of donk.py"
"Missing module docstring"
"unused wildcard import"
"Missing class docstring and Too few Public methods"
"Code smell Lazy class"
"invalid-name lb and ub since constants should be uppercase by PEP-8 standards"
"one space around both sides of = sign like x = y and Exactly one space required after comma like : x = [(x1, y1), (x2, y2), (x3, y3)]"
"Exactly one space required after comma like : (x1, y1), (x2, y2), (x3, y3), "
"Exactly one space required after comma like : (x1, y1), (x2, y2), (x3, y3)]"
"one space around both sides of = sign like x = y and Exactly one space required after comma like : x = [(x1, y1), (x2, y2), (x3, y3)]"
"Exactly one space required after comma like : (x1, y1), (x2, y2), (x3, y3), "
"Exactly one space required after comma like : (x1, y1), (x2, y2), (x3, y3)]"
"there should be no trailing whitespace like there is in line 46"
"Missing method docstring, too many branches and too many statements"
"one space around both sides of = sign like x = y"
"one space around both sides of != comparison sign like x != y"
"there should be no trailing whitespace like there is in line 61"
"one space around both sides of = sign like x = y"
"one space around both sides of == comparison sign like x == y"
"one space around both sides of = sign like x = y and it should be = instead of == and since its working with == even though = was meant without any visible anomalies, the statement seems to have no effect."
"one space around both sides of = sign like x = y"
"line too long > 80 violating PEP-8"
"one space around both sides of = sign like x = y"
"one space around both sides of == comparison sign like x == y"
"one space around both sides of = sign like x = y"
"one space around both sides of == comparison sign like x == y"
"one space around both sides of = sign like x = y"
"one space around both sides of == comparison sign like x == y"
"one space around both sides of = sign like x = y and Exactly one space required after comma like z = z(x, y, w), and line too long => 88 characters, should be 80 characters"
"one space around both sides of = sign like x = y and Exactly one space required after comma like z = z(x, y, w) and line too long => 83 characters, should be 80 characters"
"one space around both sides of = sign like x = y"
"Attribute troy defined outside init. It should have been initialized in init  and updated here."
"line too long, should be <= 80 according to PEP-8 standards and unnecessary parenthesis after if keyword"
"line too long, should be <= 80 according to PEP-8 standards"
"line too long, should be <= 80 according to PEP-8 standards"
"Missing method docstring"
"attribute text defined outside init. the statement here is however required but it should have been initialised in init"
"line too long, should be <= 80 according to PEP-8 standards"
"Missing method docstring"
"Missing method docstring, even though the statement on line 270 looks like it, it still doesnt explain the function adequately"
"Attribute rightbound defined outside init. It should have been initialized in init ."
"Attribute leftbound defined outside init. It should have been initialized in init ."
"Trailing whitespaces and line too long including them, should be <= 80 according to PEP-8 standards"
"Invalid constant name ""Main"" (invalid-name), it should be uppercase since its constant according to PEP-8"
"this file is a temporary backup file and same as the above file main.py"
"missing module docstring"
"unused wildcard import"
"code smell lazy class"
"missing method docstring and too many arguments, 5 is the limit but there are 6 arguments"
"invalid-name l, b, x, y since constants should be uppercase according to PEP-8"
"missing method docstring and no-method-argument as no arguments passed to the function and invalid method name getPosition"
"undefined variable self, forgot to pass self to this function but didnt need this function throughtout the program and was just for testing purposes"
"missing class docstring"
"missing method docstring"
"missing method docstring and to many branches and return statements "
"same as purse.py since is backup of purse.py"
"unnecessary outer parenthesis with if keyword, according to Python syntax"
"unnecessary outer parenthesis with if keyword, according to Python syntax"
"Agreed with Allen"
"BUG : Collision with queen not checked, rather any movement in the queens platform is considered a win, also in the case of using mario to make ladder bug on donkeys platform touching the upper boundary also proves to be a win"
"too many branches, code smell"
"Making a ladder at the end of a platform which goes to another platform and a little higher above, This is no functionality whatsoever as the little higher above ladder is an incomplete ladder, if one would really want to make it as game secret, they would make the ladder stop once it reaches the higher platform, and even worse, the player is able to walk on a platform-less surface if he creates the ladder on a platform such that the platform above doesnâ€™t cover the entire width, i feel this is a bug"
"ya, also at higher platforms which cover the entire width of the screen completely"
"BUG: If the player goes to the end of any complete platform(Platforms that cover the entire width) the player can create ladder by pressing 'w' and keeps on going up after which it can fly horizontally"
"How is this not a bug ? , the ladder can be extended more and the player can walk on vacuum."
"Code smell: Cyclomatic Complexity, Too many Branches and too many statements, could be broken into smaller pieces"
"Person init function is not called by either Donkey or mario classes which inherit it and isnt used throughout the program. This is nearly a dummy function."
"BUG: Only on platforms attached to boundary on either one side (Platforms which do not cover the entire width). If the player goes left/right to the boundary and jumps on the border the player can go to the other side and stand on an 'invisible' platform => there is no platform there but there is to the far right/left OR The game quits with an error => Boundaries not checked well"
"Too many return Statements in this method"
"Backup.py as the name says has not been used anywhere, its a backup file probably, thus this 450 line code has not been used anywhere."
"Missing Module Docstring"
"Too many Arguments to init function anf there are too many instance attributes in this class"
"semi colon not required in python syntax"
"platform has been used instead of the correct self.platform and hence this platform is not the variable intended to be used and is probably clashing with import platform file "
"Missing Method Docstring"
"Missing method Docstring AND self hasnt been used at all in this function that is no inclass attributes are being used or updated in this function"
"Missing method docstring and too many arguments(Code smell: Too Many Arguments)"
"BUG :  Press SPACE for long until the player reaches the top, then press SPACE repeatedly and the player will flap in the air and slowly come down. If this is done from say a higher platform and player want to jump to lower platform(Greater height hence greater flapping space) then if space is tapped repeatedly fast enough after a single jump then there is also a chance of going a little up while flapping in the air This could have been avoided by applying gravity for upward motion(as you go up speed decreases), downward motion and blocking SPACE BAR input using some flag in main.py instead of leaving the upward motion(SPACE BAR) free to press and using only gravity for downward motion."
"BUG : When at the bottom of a ladder, press space, hold it and press down button, mario will pass through the current platform and float between current and lower platform. Can be landed on the current or lower by further pressing ""S"" or ""W"". if done on the lowest/base platform game will quit giving error else this works in all other platform. Boundary has not been controlled well while in collision with ladder"
"BUG : on the topmost platform of all levels, player is ethereal only to the donkey and player's life is not damaged on collision with donkey, however fireballs damage you as usual."
"unused wildcard import"
"Code Smell : Too many Statements, Too many Branches, Too many arguments and Too many local variables are present in this function and as there are excessive arguments, line is too long, should be less than 80 character long according to PEP-8 standard"
"all_placement_list variable hasnt been used in this file. It is just initialised"
"line too long, should be less than 80 character long according to PEP-8 standard"
"Unnecessary space before : and parenthesis not required here according to python syntax with if, also space missing after comparator != therefore should be written as             if player.speed_x != 0: "
"unnecessary space before : and parenthesis is not required in if statement"
"unnecessary space before :"
"line too long, should be less than 80 character long according to PEP-8 standard"
"queenx and queeny variables are just initialized and aassigned value and not used at all"
"semicolon is not required in python-syntax"
"missing function docstring"
"line too long, should be less than 80 character long according to PEP-8 standard"
