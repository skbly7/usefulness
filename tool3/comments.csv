"why so many nested if/else ?\
this is a bad code smell.\
\
try extracting them out into different functions.",,
"Lazy class: This class has too little functionality\
\
Bad code smell",,
"Hard coding board was unnecessary",,
"Would look better with proper indentation",,
"Lazy class: This class has too little functionality\
\
Bad code smell",,
"Lazy class: This class has too little functionality\
\
Bad code smell",,
"Lazy class: This class has too little functionality\
\
Bad code smel",,
"This function can be in player class...\
Bad code",,
"very less indentation . \
according to pep-8 standards there must be indentation of 4 spaces\
Bad code",,
"Cyclomatic complexity :\
  function gameloop too big of approx 300 lines.. the function needs to  be divided into smaller functions\
\
bad code smell",,
"lazy class. \
class fireball has very less funtionality\
bad code smell",,
"Too many if statements... \
bad code smell\
must be decomposed into different functions",,
"Too many global variables.. \
rather than exposing a raw variable that is mutated directly by the caller, you should really encapsulate the operations. Having true global variables creates too much coupling and is a bad code smell",,
"function maingame is very big in size that is a bad code smell.. \
try extracting them into different functions..",,
"Too many global variables.. rather than exposing a raw variable that is mutated directly by the caller, you should really encapsulate the operations. Having true global variables creates too much coupling and is a bad code smell",,
"large part of code not within any function. bad code smell....",,
"Why do u need to update the display when there is no change in display ?? ... Instead u could neglect that part",,
"You could have named the variables appropriately .... This becomes a problem when u try to debug ur code after long period of time",,
"Why do u need to import this module when you haven't used it ??? This is a Codesmell .. You could better ignore this",,
"Try to reduce the length of lines in code ... Here You could have stored the values of parts of condition in some variable and use them instead",,
"The same while loop is used in your code previously ... This is a bad Codesmell due to duplicated code ... You could have managed this with a function and used it when necessary",,
"These functions are already present in the Person class from which this is inherited .. You could have used them instead",,
"You have used the same tuple in line-10 You could have stored it in some variable and use it further to avoid confusions in future",,
"When the second argument is negative to max , it chooses 0 and when direction is negative it crosses the wall.\
So better update it with block-size",,
"Try to use variables instead of constants as it becomes difficult to modify the code",,
"You could have mentioned about G , L , B for a better understanding in future",,
"Use appropriate variables to store the constants  for future reference",,
"Try to name the variables appropriately so that it helps you in future when to try to update your program",,
"Try to avoid using constant values instead use variables so that updating the code later becomes easy",,
"You have already declared this in previous files ... Instead you can include all the constants in a single file",,
"Why do you use this many times in your code .. Instead you could include all tuples in a tuple and iterate over them in a loop so that it reduces duplicates in code",,
"You have used a similar loop in this file ... to avoid this you could have used a function with some parameters to manage duplicate codes",,
"According to PEP 8 conventions,  No space allowed after '[' bracket, Exactly one space required after comma",,
"According to PEP 8 conventions, this is wrong way of continued indentation, ensure consistency and no extra spaces beyond the indentation",,
"bad continuation",,
"bad whitespace",,
"bad whitespace",,
"Missing module docstring (missing-docstring)",,
"Old-style class defined. (old-style-class)",,
"Unused variable 'i' (unused-variable)",,
"Missing method docstring (missing-docstring)",,
"Invalid method name, use snake case",,
"Invalid variable name (being taken as a variable not a constant)",,
"length of lines of code too long... according to pep 8 standards length should not exceed",,
"should not exceed 79 characters",,
"The same if statements are in the wall_group and ladder_group . Instead you can use a function for the same.",,
"Trailing whitespace (trailing-whitespace)",,
"Trailing whitespace (trailing-whitespace)",,
"Exactly one space required before comparison",,
"No space allowed before bracket",,
"Missing module docstring (missing-docstring)",,
"Line too long",,
"Invalid attribute name \""__sClass\"" needs to be in small case",,
"Avoid declaring unused variables",,
"Missing class docstring (missing-docstring)",,
"__init__ method from base class 'Person' is not called (super-init-not-called)",,
"Unused argument 'player' (unused-argument)",,
"Invalid method name \""UpdatePosition\"" (invalid-name)\
needs to be in snake case",,
"Arguments number differs from overridden 'getPosRight' method (arguments-differ)",,
"according to pep 8 standards top classes and functions definitions should be surrounded by at least two blank lines",,
"Instead of using saor the sameme statements multiple times although for different variables ,we can store them in some list and write some loop f",,
"Exactly one space required after comma in (1,2)",,
"Missing module docstring (missing-docstring)",,
"Missing class docstring (missing-docstring)",,
"Instead of using  constants use some variables to store them , as it becomes easy to modify them",,
"Old-style class defined. (old-style-class)",,
"Invalid method name \""getPosDown\"" (invalid-name) use snake case",,
"Missing module docstring (missing-docstring)",,
"If hero is on ladder , then value of the array is the one corresponding to ladder but here it is checking for the equality of fireball and hero positions.\
i.e If hero meets a fireball on a ladder then he won't die",,
"Warning: Wildcard import constants (wildcard-import)",,
"Old-style class defined. (old-style-class)",,
"definition of class walls is not easily visible",,
"very less indentation in function message_to_screen \
according to pep 8 standards at least 4 spaces should be given during indentation",,
"Convention error - Exactly one space required after comma in (28,2)",,
"Convention - Missing module docstring (missing-docstring)",,
"Invalid attribute name \""__sClass\"" (invalid-name), use small case",,
"Refactor - Too many instance attributes (10/7) (too-many-instance-attributes)",,
"Use white spaces in the statements and expressions",,
"Warning - __init__ method from base class 'Person' is not called (super-init-not-called)",,
"Invalid method name \""collectCoin\"" (invalid-name) , use snake case",,
"Doc-strings are missing for every class",,
"Unused variable var",,
"wildcard import \
pygame is imported in all the files and again imported here",,
"Warning - Unused variable 'pos_char' (unused-variable)",,
"Refactor - Too many public methods (38/20) (too-many-public-methods)",,
"Invalid variable name \""ne\"" (invalid-name), length >= 3",,
"Exactly one space required after comma",,
"Convention -  No space allowed after bracket",,
"Convention -  Line too long (101/100) (line-too-long)",,
"Refactor - Too many instance attributes (33/7) (too-many-instance-attributes)",,
"Convention - Invalid method name \""PyGameBasicSetup\"" (invalid-name), use snake case",,
"Refactor - Method could be a function (no-self-use)",,
"Refactor - Too many arguments (6/5) (too-many-arguments)",,
"Invalid variable name \""f\"" (invalid-name) , length >= 3",,
"Refactor - Method could be a function (no-self-use)",,
"Too many branches (15/12) (too-many-branches). Refactor to use less if statements or club parts of them in separate functions",,
"Warning - Attribute '__pressed_a' defined outside __init__ (attribute-defined-outside-init)",,
"Refactor - Too many public methods (27/20) (too-many-public-methods)",,
"Objective*",,
"Warning - Unused import BLUE, GREEN, WHITE, RED etc. from wildcard import (unused-wildcard-import)",,
"unused library",,
"####duplicate code..\
* same code structure used multiple times to generate multiple coins. \
* try using loop instead.",,
"unused variables white,red,blue.They are used in other modules.",,
"Long parameter list....\
instead of using so many parameters methods or functions can be defined to get them whenever required",,
"variable names must be sensible and named as per usage of variables",,
"position should be written in terms of screen size,block size.If we change block_size then positions will be different.",,
"Exactly one space required after all commas",,
"player movement should depend on block size",,
"Exactly one space required after all commas (Bad whitespace)",,
"used named variables.Else difficult to debug",,
"Pygame is already imported in Constants ... So this import could have been neglected",,
"Unused Variables ... Many of these colors could have been neglected",,
"You are stopping when either of the key is left but what if the person is holding down the other key? It should start moving in the opposite direction but in your case it just stops.",,
"Invalid argument names H and W",,
"Invalid argument names H and W",,
"Invalid argument names H and W",,
"Invalid argument names H and W",,
"A comment mentioning about this would help for future reference and improvising code",,
"Never use constants but use variables to hold the values and use these variable at appropriate places so that you don't have to change them at all the places.",,
"Unused variable i",,
"same type of code is used in all the above while loops.Instead using a function with some parametres to avoid duplicate codes.DRY(don't repeat yourself)",,
"never used any private variables",,
"Store the display width and height in variables and then use them here and any other place required instead of inputting manually, because if you ever need to change it, it will be quite difficult to go too all the places and change the hard coded values",,
"missing method doc-string",,
"Don't hard code values, refer above comment.",,
"Fireballs are of fixed number even after the level-up",,
"Avoid writing very long lines of code",,
"Never update multiple times in the same game loop or else some of the drawn objects gets over shadowed and may never show up on the screen by the new elements. Always draw everything and render only once at the end of the game loop.",,
"Develop a habit of writing comments for those parts of code which could not be understood by other person at first glance",,
"Try to reduce load on main function .. Instead maintain some functions and use main to call them so that people understand what you are actually trying to do",,
"You have maintained a file to include constants but why did u miss this ??",,
"initialize the variables in __init__. Involving two players,these variables will remain same for both.Not a good practice.",,
"Exactly one space required after commas (bad whitespace) on lines from 4 to 22",,
"Don't hard code the display, write loops or use maps. Makes it hard to edit later.",,
"Exactly one space required after comma (Bad Whitespace) from lines 26 to 30.",,
"Do not update until everything is finished drawing.",,
"Exactly one space required after comma from lines 33 to 37",,
"(bad whitespace)",,
"Exactly one space required after comma (Bad whitepace)",,
"Line to long (Line must have less than 70 characters)",,
"Do not use global variables for a class. Always use local variables only, or else two different instances of the object will always be the same, defeats the purpose of having a class.",,
"Unused variable i",,
"Exactly one space required after comma",,
"Exactly one space required after comma",,
"Don't use global variable. All instances will use the same values, will leads to errors.",,
"Line to long (and unrequired)",,
"Exactly one space required after comma (Bad whitespace)",,
"above two messages are on same line.Why to use two functions.",,
"Exactly one space required after comma (Bad whitespace)",,
"Don't use global variables for the player use the local variables and the init function to assign default values. Or else all the instances of the class will use the same global variable and this will lead to errors.",,
"Exactly one space required around assignment (Bad whitespace)",,
"Exactly one space required around assignment (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required around assignment (Bad whitespace)",,
"after comma*",,
"Line too long (unrequired)",,
"Same Part of code is used again in this file .. Why cant you use a function to achieve this  instead of replicating the code ??",,
"Warning: Relative import",,
"Why do you complicate the if condition Instead you can extract parts of it and use them separately ???",,
"Invalid variables x,y,w,h",,
"Fatal Error: Unable import pygame.locals",,
"Class name should begin with an Upper-case",,
"Fireball does not work. Unnecessary code.",,
"Bad whitespace",,
"never equate it to the limits. What if it is lesser than the lower limit? It fails. Always use lesser than or greater than.",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"After winning it automatically reloads.It always run \""else\"".",,
"Exactly one space required after comma (Bad whitespace)",,
"Don't use equal to. Refer above comment.",,
"Line too long",,
"Exactly one space required after comma (Bad whitespace)",,
"Space required around assignment operations",,
"Exactly one space required after comma (Bad whitespace)",,
"Don't do collision detection by equating co-ordinates. Objects can intersect even if the co-ordinates are not equal.",,
"Bad whitespace around logical operation",,
"Unused import: Random\
Warning: Relative import for globalv",,
"w, h are unused variables",,
"Invalid method name. Should be get_position and not in camelCase",,
"score should depend on coins,attacked fireballs but not on lifes. If we increase the lifes then scores will be affected.",,
"Don't use constants, store them in a variable and use the same variable at all places, or else if at you need to change the value, you need to go to all the places it is used and change it.",,
"Missing docstring",,
"Missing docstring",,
"Do not use global variables for attributes of an object. Use local variables and pass them every time. Or else different instances of the class will use these same values.",,
"Never update multiple times in the same game loop or else some of the drawn objects gets over shadowed and may never show up on the screen by the new elements. Always draw everything and render only once at the end of the game loop.",,
"same code in all while loops.Use  function.",,
"Class name invalid. Should be with first letter as an upper case one",,
"All functions related to fireball must be in the fire ball class.",,
"win is True or False case.Better use boolean( 0 or 1).",,
"You are stopping when either of the key is left but what if the person is holding down the other key? It should start moving in the opposite direction but in your case it just stops.",,
"Don't do collision detection by equating co-ordinates. Objects can intersect even if the co-ordinates are not equal.",,
"Exactly one space required after comma (Bad whitespace)",,
"Line too long",,
"Space aroud = needed",,
"Space around = needed",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Empty line - trailing whitespace should not be there",,
"Exactly one space required after comma (Bad whitespace)",,
"used tabs everywhere, use 4 spaces instead (PEP8 standards)",,
"Attributes should be defined inside init method",,
"Invalid variable name a",,
"spaces after operators and ',' (PEP8 standards)",,
"already defined on top, unnecessary redefinition.",,
"Old-style class defined",,
"already defined on top, unnecessary redefinition.",,
"First letter of class name must be in upper case",,
"Few pubic methods",,
"Docstring missing",,
"use macros and constant variables instead of numericals. that makes it easier for future use.",,
"Missing Docstring",,
"Instead of calling the append function so many times, it is better to put every line into a single text file and then print out the whole file.",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Bad whitespace: Space needed around assignment",,
"Missing docstring",,
"you can include these lines in a function to make it more readable",,
"x, y, w, h are invalid variable names",,
"A, B are invalid variable names",,
"Warning: Relative import needed for globalv",,
"Here, 34, 14,10,20 imply that the coins would be generated only for this particular configuration/size of the board. Instead, some global variables can be assigned and those variables can be changed according to the size of the board and thus changes in those variables would automatically change the values of the coinslist Lists. Else, it would be difficult to change the hard coded values as you have done here.",,
"What is the need to import pygame everywhere ?? You have already did that in constants file",,
"Again, values here are hard coded, this would make it difficult to change code for different sizes of the board.",,
"Attribute declared outside of init method",,
"Try to make them private variables and write set and get functions to access them",,
"u could have used  self.image.get_rect().size instead",,
"Attributes declared outside of init",,
"No proper explanation on what you have written .... Try to explain such big conditionals using comments",,
"Bad Whitespace  , Exactly one space is required around assignment",,
"u should have included all kinds of collisions in this function(not just with ladder sprites and platform sprites )",,
"Contrived complexity - application level code smell - Don't you think one line would suffice when it's really just 3 points of ladder breaks?",,
"Though you have explained what is X,Y,W,H ... They are invalid argument names ... Try to be clear",,
"Too many arguments... Maximum number of allowed arguments are 5",,
"Exactly one space required after comma (Bad whitespace)",,
"make it a point to return something from the function so that you can use that anywhere required. you can write get and set functions as well",,
"Unable to import pygame.locals",,
"You have missed docstring for every class ... Try to include them",,
"missing docstring",,
"Warning: relative import for donkey_kong_colours",,
"shouldn't have used same name for class variables and local variables (platform_hit_list and self.platform_hit_list)",,
"Invalid arguments x and y",,
"Extra docstring has no effect",,
"Bad Whitespace exactly one space is required around comma",,
"Unused import: Random",,
"Exactly one space is required around comparision (Bad-Whitespace)",,
"Invalid Class Name: First letter should be in uppercase",,
"unused variable n",,
"Attribute name should not be in camel case",,
"missing docstring",,
"invalid docstring",,
"Bad-Whitespace again ... here you should avoid whitespace ... since no space allowed around bracket",,
"Do you really need this class ???",,
"The display surf has dimensions of 400 and 300, thus the dimensions remain constant. This would make it difficult to change it later as the line of code that contains these dimensions can be difficult to find. Instead, it is better to have variables with appropriate and identifiable names, that when changed will change the dimensions.",,
"These constants should be defined at the module level and outside of methods... Here they have been defined inside one method and passed as argument to another method! bad code smell...",,
"Define constants at module level/separate file only",,
"This file defines many unnecessary unused constants...",,
"Coins position should be in the ratio of screen_size.Even if the screen_size changes coins should be displayed in similar manner.",,
"Shouldn't this be an attribute of a class rather than an instance of a class?",,
"return the main variables for easy access in future",,
"Feature envy class level code smell... This method of board class has been used here excessively, why not make a method of this class only that makes such a call to board class' method?",,
"Constant positions have been assigned to the coins, this would make it difficult to change positions of coins in the future as the lines of code could be difficuilt to find, also fixed number of coins have been kept. This can be modified by randomizing the positions of coins using rand and increasing the number of coins by using a list and storing positions of coins.",,
"did not follow PEP8 standards: indentation, space after operators and ','",,
"did not follow PEP8 standards: indentation, space after operators and ','",,
"Unnecessary function... Can directly make use of person class' identical method",,
"only one level",,
"tried to implement coins but failed",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Long method, method level code smell - Move left and move right methods are too long and they also look extremely similar. --> Duplicated code application level code smell. Can make a more genereal move helper function and pass a flag to it left or right... this way moveleft and move right will be small and helper will write their long parts only once. Can also break the long part into separate helper functions",,
"Space required around logical operator: Bad Whitespace",,
"Exactly one space required after comma (Bad whitespace)",,
"Space required around operations",,
"i didn't create shortcuts for moving left,moving right,movingup,moving down",,
"Exactly one space required after comma (Bad whitespace)",,
"Invalid Classname: First letter should be in upper case.",,
"Invalid variables nmaes x and y",,
"Missing docstring",,
"invalid attribute name xc and yc",,
"Missing docstring",,
"tried to implement jump but failed",,
"Exactly one space required after comma (Bad whitespace) for lines 3 to 8",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"no classes for player,person,donkey,board,fireball",,
"Mixed indentation (tabs and spaces)",,
"Don't define Unused attribute",,
"Mixed indentation",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"Missing docstring",,
"no fireballs so no no.of lifes checking",,
"Missing docstring",,
"Missing docstring",,
"Duplicated code application level code smell --- Such functions have also been defined in person class",,
"Pointless docstring statement",,
"Duplicated code application level code smell --- Such functions have also been defined in person class, donkey, player class",,
"Pointless string",,
"Should not be camelCase",,
"Invalid Class name: First letter should be in upper case",,
"if player reaches princess the game is over.ididn't write anything for this to be implemented",,
"Bad whitespace: Space needed around operations",,
"These comments don't explain anything. Remove them",,
"Bad whitespace: Space needed around operations",,
"the below is hard code which i wrote without using class board",,
"Excessive usage of methods of player and board class --- Feature envy Class-Level code smell",,
"the below is hardcode which i wrote to implement coins but failed",,
"Exactly one space required after comma (Bad whitespace)",,
"Exactly one space required after comma (Bad whitespace)",,
"Bad whitespace",,
"Bad whitespace",,
"Trailing whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Mixed INdentaton",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Inappropriate intimacy: a class that has dependencies on implementation details of another class. class level code smell --- passing self.__pos[0] + 3 .. what does 3 signify here? It depends on implementation level details of board class right?",,
"Trailing spaces",,
"Bad whitespace",,
"Trailing whitespace",,
"The above few lines of code, change the position of the fireball for fixed current positions. This means that if the dimensions of the board are changed or platform configuration is changed, the game is bound to improperly function.",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Variable i is unused",,
"Edit: Remove comment, i is used",,
"Feature envy: a class that uses methods of another class excessively. class level code smell --- using board class' methods excessively",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Long method: a method, function, or procedure that has grown too large. method level code small --- this method can be broken down into smaller parts",,
"Bad indentation",,
"Line too long. Should be <=70",,
"Line too long. Should be <=70",,
"edit: 70 to 80",,
"edit: 70 to 80",,
"Bad whitespace",,
"Bad whitespace",,
"Line should be less than or equal to 80 characters",,
"Long method, method level code smell - Move left and move right methods are too long and they also look extremely similar. --> Duplicated code application level code smell. Can make a more genereal move helper function and pass a flag to it left or right... this way moveleft and move right will be small and helper will write their long parts only once. Can also break the long part into separate helper functions",,
"Bad indentation (two tab spaces instead on one) found in this functions",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Code smell: Duplication of lines to generate heart",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"Line is too long ( should be >=80)",,
"Bad whitespace",,
"Line too long ( should be <= 80)",,
"missing method docstring",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"The code above implies that the position of ladders are fixed. This can lead to improper functioning of game when the dimensions of board are changed or hard coded positions of ladders are changed, this would lead to a cumbersome change of ladder positions. Thus hard coding could be avoided as much as possible.",,
"Bad whitespace",,
"use snake-case for methods",,
"Bad whitespace",,
"Bad whitespace ( fb % 3)",,
"Bad whitespace",,
"Similar to  the reasons mentioned above, hard coding positions can be avoided.",,
"Bad whitespace",,
"Bad whitespace",,
"Bad whitespace",,
"use better variable names",,
"Code smell: movedown and moveup have duplications",,
"Bad whitespace",,
"Bad whitespace",,
"can include the following lines in some function for more readability",,
"Bug: Should have encapsulated variables",,
"Bad whitespace around ==",,
"only one level",,
"Used multiple imports on one line (pygame and sys)",,
"no shortcut keys for move left,move right,move up,move down",,
"As seen above, instead of hard coding as done before, it would be better to use global variables that store positions of the components of the games. These global variables can be changed instead of searching for every occurrence of the hard coded values.   Any change in these global variables reflects the changes everywhere else.",,
"no classes for person,donkey,player,board,fireball",,
"since there are no classes there are no modules",,
"In syntax(a,b,c) in  above lines.  Missing space after ',' .",,
"Should have space around operator (32,34)",,
"sorry he used  those shortcuts",,
"More  than 79 charecters in a line",,
"same as above more than 79 charecters.",,
"this is hard code for to design board .you didn't use class board to implement this",,
"wasting space .check down",,
"Too long line more than 79 charecters",,
"all conditions perform same action",,
"most of the main functions for fireball class and player class are similar, so use inheritance to avoid redundancy",,
"Relative import",,
"Block comment should start with '#'.i.e there should be a space after #.",,
"lazy class - It does too little. you can inherit from  Border class",,
"Invalid class name game. G should b upper case",,
"there are no spaces before and after equal to symbol",,
"Separate move left , move right etc functions in each of the derived classes donkey and player... when both inherit from person, and logically a person would need move right and move left functions why not have then there instead? Agreed details of both will be different but the basic functionality can still be inherited and other shorter functions which use them as need be, can be defined in child classes",,
"Bug: Redefining level from outer scope.",,
"i.e Duplicated code application level code smell",,
"Invalid name ( no camelCase)",,
"Unused argument B",,
"Invalid method name: should be main_game and not mainGame",,
"Docstring statement should be a comment (#)",,
"too many lines wasting",,
"Excessive usage of methods of player and board class --- Feature envy Class-Level code smell",,
"Using macrons anld variables for postion as multiples or factors of width and height of display screen would be better.So, that the sizes and positions will change according to that",,
"indentation error",,
"Unused random, globalv, super_class",,
"line too long",,
"no space around operator",,
"Code smell: Function/method is too long with too many statements",,
"Instead of using collect# array would be better so that you can avoid these many if loops.",,
"Does this method really need to be a method? Does it really pertain to an instance of a class or can be defined as a general function?",,
"space required after operator '='",,
"No docstring specified for this function",,
"Don't use global values for player. If multiple players exist then all will use same coordinates and all will overlap with others.It will lead to errors.",,
"too many blank lines",,
"too many blank lines",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification. Can we simplify the branches somewhat? maybe write them as separate functions?",,
"Comments are out of indentation",,
"Literals passed into initializations of objects like donkey, fireball etc should be declared as constants",,
"Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions. Here variables like cnt_fireballs, mov_fireballs, mov_donkey which are compared against literals like 150, 1, 5, these literals should be declared as constants",,
"Large class: a class that has grown too large --- large class, class level code smell",,
"Inappropriate intimacy: a class that has dependencies on implementation details of another class. Why does game class need to handle details of fireball and donkey class?",,
"Excessively short identifiers method level code smell ---: the name of a variable should reflect its function unless the function is obvious.",,
"too many blank lines",,
"Here instead of using values of layout configaration using varables would be better. If there is any  change in configaration of layout then u should also change here(if u use values).",,
"Shouldn't literal 2 be coded as a constant? MAX_LIVES - 1 say?",,
"Literals passed into initializations of objects like player, donkey, fireball etc should be declared as constants",,
"Instead of declaring in theese many lines,u can declare it in oneline as global a,b,c......",,
"u can declare it as a=b=c=...=0 instead of theese many lines.",,
"Blank spaces (waste of lines :p)",,
"Code smell: The class Board is too small: (Lazy Class) and only prints the board when method could have been placed in the main function",,
"It's a good practice to encapsulate every method in classes.",,
"no spaces around operators",,
"All the above  'if' loops have same functionality.So instead of writing these many times u could have used function and arrays.",,
"Duplicated code: identical or very similar code exists in more than one location. --- application level code smell... \
self.__player.JumpNorthEast(self.__board)\
self.HandleJumpUpdate() lines written twice consecutively\
\
self.__player.CheckForFall(self.__board) can be written only one outside the if else block",,
"Bad whitespace(PEP-8) requires spaces after commas",,
"Instead of list use range(1:6).For more levels it difficult to write list.",,
"Large class: a class that has grown too large --- large class class level code smell",,
"Used separate classes for monkey,player and inherited from person class. But used different moving in x-direction for player,monkey. They should be same.",,
"Refactor - Too many public functions",,
"Don't hard code the values for walls. Use x-variable,y-variable for them so that in future it's easy to change the specification in game.",,
"Assignment operators should have spaces around them. (Bad whitespace)",,
"Duplicated code is the bane of software development. Stamp out duplication whenever possible. You should always be on the lookout for more subtle cases of near-duplication, too. Don't Repeat Yourself! Here move left helper and move right helper contain many duplicate statements. Can be merged into one method",,
"Duplicated code is the bane of software development. Stamp out duplication whenever possible. You should always be on the lookout for more subtle cases of near-duplication, too. Don't Repeat Yourself! Here move left and move right contain many duplicate statements. Can be merged into one method. Pass a flag of direction instead whenever they are different, as need be",,
"only player and donkey should be inherited from person according to question",,
"Board() has no init funtion",,
"No need to update every time. Can update all at once.",,
"Code Smell: Excessive use of print in multiple lines when it could have been written in a single line",,
"There should be a space after of every '='",,
"From lines 273 to 282",,
"Duplicated code is the bane of software development. Stamp out duplication whenever possible. You should always be on the lookout for more subtle cases of near-duplication, too. Don't Repeat Yourself! Here jump south east and jump south west contain many duplicate statements. Can be merged into one method. Pass a flag of direction instead whenever they are different, as need be",,
"Same part of code is used in previous file .... Avoid duplicated code",,
"Use better variable names.",,
"The ranges are constant, if the board dimensions are changed, the ranges must be changed, else the game would not run properly. So, it is better to store them as variables in the code and later change these variables when needed so that the changes are reflected at every occurrence.",,
"Duplicated code is the bane of software development. Stamp out duplication whenever possible. You should always be on the lookout for more subtle cases of near-duplication, too. Don't Repeat Yourself! Here jump north east and jump south east contain many duplicate statements. Can be merged into one method. Pass a flag of direction instead whenever they are different, as need be",,
"Use variables for size of game display so that you can adjust it's size.",,
"indentation contains mixed spaces and tabs and indentation is not a multiple of four",,
"Hardcoding should be avoided",,
"Line too long( should be less than 80 characters)",,
"Line too long( should be less than 80 characters)",,
"Line too long( should be less than 80 characters)",,
"Line too long( should be less than 80 characters)",,
"from lines 152 to 197, hard coding is done where comparisons are made in such a way that <statement> == 'X' or <statement> == 'Y' ., etc, so this code would work only for those case where our game map has X, H etc in it. If a person wants to modify the map, the game wouldn't function properly, as the comparisons are not satisfied. Thus hard coding makes it difficult to change/modify the code as per the needs of another viewer.",,
"Bad whitespace. Bad indentation",,
"pep8 standards violated as spaces between number and comma are absent.",,
"nomodularity",,
"Use variables for walls,floors x,y positions.",,
"Comments should be deleted",,
"Don't hard code like this. In future it's easy to change value and need not to change everywhere.",,
"sys is not used in this module",,
"Can use variables for colors so that you need not to hard code them so many times.",,
"Lines could be reduced for import",,
"Only one function and no classes.",,
"Can use the following lines in other function for better reading.",,
"no white space around equal to operator",,
"###Redeclaration of move function from person in player. ###",,
"### Redeclaration of check wall function ###\
- Function not called?",,
"no  scoreboard",,
"we shouldn't declare the size of the board by values .declare by the variables and initialize the variables.",,
"- Function not called anywhere",,
"####Random module is not being used anywhere ####",,
"use variables in terms of block_size or screen_size instead of constants",,
"- Function not being called anywhere",,
"Invalid variable name --- variable name must be appropriate and length >= 3",,
"Never use numbers in ur code ... Try to store it in a variable and access it so that when u try to update ur code it becomes easy in future",,
"Variable length must be >= 3 and must be meaningful --- invalid variable name",,
"there must be a single space around comparison operator -- bad whitespace",,
"Avoid using blank spaces in if loop unnecessarily.",,
"no white space around operator",,
"Nice :) .. For giving space around assignment operator ... This must be done everywhere",,
"This class is so big .... ( GOD class ) --- This is a bad code smell",,
"Invalid Variable Name -- Length must be at least 3",,
"This code do not display the score. It will not work",,
"The move function has been used in the parentent class, person as well. The same function has been rewritten here that is almost similar to the code in player, indicating a code smell.",,
"There are no fireballs in this code",,
"sorry, parent class person has move dunction that is same as the move function in player(child class), thus a code smell.",,
"Board is hard coded by giving the values to floors and ladders",,
"Thus, indicating a code smell.",,
"Coins are placed in fixed positions and they are not generated randomly.",,
"All above \""if\"" loops executing same type of code.Instead you can use functions and sending \""collect\""'s and \""k\""'s as arguments",,
"the gap between two floors is high.",,
"Lot of unnecessary comments in move function: Code smell.",,
"Use objects names as related to their class names",,
"No need of printing on to the terminal",,
"Use better variable names for better understanding.",,
"Can use images for better looking.",,
"No classes for person, board and fireballs. so there will be no inhertance",,
"Jump does not work properly. if we press jump twice it jumps two floors",,
"Code smell:unnecessary comment.",,
"Code smell: lines 62 66 70 73 79 82 88, unnecessary comments.",,
"Code Smell, unnecessary comment.",,
"Code smell, unnecessary comment.",,
"Code Smell;This method is too long, easy to refactor by using list and loop and reducing size of function.",,
"Leave one blank line after function as per PEP standards",,
"No encapsulation,getters and setters.",,
"Code smell, method too long and also has large number of if statements causing combinitoral explosion as there is lots of code that does almost the same thing., but with tiny variations in data or behavior.",,
"jump functioning is not correct",,
"All variables are globally declared.Therefore modulation is very difficult to implement.",,
"according to pep-8 you have to implement spaces in between. like ( 255 , 0 , 0 )",,
"Use space after every '=' operator (PEP-8 standards)",,
"no modularity , only one file",,
"no scoreboard",,
"functionality is not good because the board is suitable only for current size and cannot be adjusted for different sizes",,
"Unused lines, can be removed.",,
"again, unused lines, can be removed.",,
"application level smells , duplicated code",,
"This initializing can be done better with loops by putting all the collect's in a list.",,
"application level smells , duplicated code",,
"Code smell because of number of if statements that follow because of  combinitoral explosion as there is lots of code that does almost the same thing., but with tiny variations in data or behavior.",,
"Same initializations is repeated above.Instead use functions.Don't repeat yourself(DRY).",,
"Deadcode. We should remove the commented code.",,
"application-level smells , contrived complexity , could have been   implemented by only one function",,
"No encapsulation,getters and setters.",,
"contrived complexity ,",,
"After every class,function two,one blank lines should be lift respectively.",,
"Changing position of img in different dimensions can become difficult, so instead of using 20,20, variables can bee used with apt names which are easier to find and operate on. Changes is those variables will be reflected everywhere, so it saves time by eliminating need to search for hard coded variables.",,
"contrived complexity , too many calls to same function , separate function should be used",,
"class-level smells , large class",,
"spacing should be present after \","ramkumar.reddy@students.iiit.ac.in",
"unused import",,
"no doc_string for the class",,
"No need of writing function for just one line. You can include it in main loop.",,
"No need of writing function for just one line. You can include it in main loop.",,
"temp undefined at modulelevel",,
"too many return statements",,
"Dead code.Commented code should be removed.",,
"unused import",,
"unused collection",,
"So many nested if statements ---- Bad code smell",,
"You could have explained what you are trying to do using some comments ... So that It becomes easy for a future reference ..",,
"method level smells , long method",,
"Invalid variable name ... Variable name must be appropriate and length must be >= 3",,
"too many if statements",,
"calling same function too many times , could have used one separate function .",,
"calling same function too many times , could have used one separate function",,
"No encapsulation,constructors,getters and setters.",,
"cyclomatic complexity .",,
"cyclomatic complexity",,
"Too many extra space between two functions",,
"Invalid variable name ---- variable name must be appropriate and length must be >= 3",,
"very long method",,
"One space is required after comma (Bad Whitespace)",,
"Invalid Variable Name (no) , length >= 3",,
"cyclomatic complexity",,
"lead_x and lead_y are redeclared.They are declared in 91st line.",,
"only player and donkey should inherit from person according to the question",,
"No need of this code. Board is already hardcoded.",,
"Variables should be declared inside function",,
"Invalid method name --- When you name a function try to use snakecase",,
"Too long parameter list, use an object to combine the parameters.",,
"name of functions are easy to understand and helps in understanding code .",,
"Invalid name ---- variable name must be appropriate and length must be >= 3",,
"Many variables are globally declared.It makes modularity difficult.",,
"jump method  is so long.since it is long it is a bad code smell.",,
"don't use so many methods in one class.it will increase complexity .large class  is a bad code smell.",,
"Missing Docstring (Function should be decsribed )",,
"use of hardcorded parts (  extra whitespaces  ).",,
"where is pygame.quit( )",,
"- according to pep8 standards class names must use cap letters",,
"unnecessarily declaring sys here",,
"white spaces around equal to operator",,
"Should have encapsulation for the function",,
"Why to use a list for players when there is only  one player ? It causes confusion.",,
"- functions should be placed some class..",,
"####Import should be on separate lines####\
- import pygame,random is wrong\
- should be: \
     * import pygame\
     * import random",,
"no white spaces around operators",,
"Unused import",,
"import should be on separate lines by pep 8 standards",,
"jump method is so long .long methods is a bad code smell.",,
"import should be on separate lines by pep 8 standads",,
"For constants like white,block_size etc there is no need to declare them with global as they can be accessed and can't be chnaged in class.",,
"### code smell : duplicate code.\
- The same could be easily implemented with the help of a list that iterates over the given data and generates the given requirements.",,
"Define 1000 as a constant with a meaningful variable name. --not readable",,
"####Scrap the last comment: import should be on separate lines####",,
"Unused Variable name",,
"positionX would be a better variable name in this context",,
"the below line was too long according to pep8 standards",,
"Class could be smaller to avoid Code Smell",,
"Application Code Smell ( Too much if conditions )",,
"the above line has conditional complexity that means writing a big line in brackets of if",,
"Bad whitespace --- comma must be surrounded by a space",,
"-Wildcard imports ( from <module> import * ) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools\
- pep8 standards violated",,
"too many whitespaces used (pep-8)",,
"One space required after all commas",,
"Invalid Variable Name (length of variable should be >= 3)",,
"Avoid writing such long lines",,
"Too large class, difficult to read or trouble shoot. Class can be broken down to smaller classes.",,
"Unnessary to declare with global since they are not in any function.",,
"Assign a meaningful name (a constant variable) for state = 2.",,
"Presence of new lines in between the first method and declaration of class is appreciated",,
"repetitive imports , import should be done only in starting (pep-8)",,
"Invalid method for naming (Use Snake Case)",,
"import should be on separate lines",,
"More than 79 characters in a line.No need to declare with global.No space after \","ramkumar.reddy@students.iiit.ac.in",
"### too many nested if-else statements in one function\
- divide the function in smaller parts",,
"### too many nested if-else statements in one function\
- the function can be broken into smaller parts.",,
"Non communicative function name, checkCoinCollisions would be more apt",,
"- variable names must be kept sensible and meaningful as per their usages",,
"Inconsistent function names, playerjumpdown is present, this probably should be playerjumpup.",,
"too much dependencies , on value returned by functions of another class , can have make separate function to calculate all values .",,
"Line Too Long -> Too many characters in one line. A line must contain less than 80 characters.",,
"no doc string for the function .",,
"###BUG###\
- Ladder flag is set inappropriately\
- Due to this, if player is on top of a ladder, he will stll be in contact with the ladder\
- thus he wont be able to jump",,
"Avoid writing such big lines in code",,
"no doc string .",,
"A Code Smell is being created due to large method.",,
"Redundant code in askforrestart and confirmquit functions",,
"no doc string",,
"Too long parameter list, try to combine them to an object",,
"Large Class : This class has grown too large --- large class , Class level code smell",,
"balls dosen't move randomly",,
"Bad whitespace --- Assignment operator must be separated by a space",,
"###BUG###\
- Due to re-calling of this main game method on a new level all lives are being regenerated and player gets to start with fresh 3 lives instead of carrying over lives as should be",,
"Invalid Variable name --- Variable name must be appropriate and length must be >= 3",,
"Exactly one space required around assignment operator",,
"### main functions should be kept within proper classes\
- bad code smell",,
"too many print statements , could have written in one line",,
"- Too many if conditions creates too many branches\
- This is a code smell.",,
"Here,after releasing \""spacebar\""  key player comes down otherwise he was in the air as long as i press \""spacebar\"" key",,
"Mixed Indentation (Indentation is being done by tabs instead of spaces)",,
"Not good encapsulation practice, updatedonkey must be a method of donkey class.",,
"too many public methods (pylint)",,
"Not a good encapsulation practice, updatefireballs must be a part of fireballs class.",,
"no doc string for any of the function",,
"Bad White Space",,
"### using too many global variables is bad code practice . \
- instead proper classes must be used to encapsulate the variables and be used by calling the class methods",,
"movement of fireballs is not random .",,
"no doc string for the function",,
"Should not be too long/multiline to avoid confusion",,
"space between number and comma(,) [ according to PEP-8 standards]",,
"### no spacing left between definition of function.\
- according to pep8 standards at least 2 blank lines must be left above and below class and function definitions",,
"Use space after every '=' operator (PEP-8 standards)",,
"application levels smells , contrived complexity , random function should be used",,
"- Hard-coding Y co-ordinates make it hard to port to different screen resolutions. Also, configuration based code should be separated from game logic.",,
"class-level smells , cyclomatic complexity",,
"## very less indentation\
- according to pep8 standards atleast 4 spaces must be present for indentation",,
"cyclomatic complexity",,
"This code is redundant a lot. This part is repeated 8 times.",,
"no doc string for the function",,
"You can append all list's directly.",,
"### too many global variables\
- using too many global variables is not a good practice \
- proper classes must be used to encapsulate the variables and used by calling class methods",,
"- Function created, but never called:\
   1. move_left\
   2. move_right",,
"Unnessary blank lines in between.",,
"Bad comment indentation",,
"## code smell : duplication of code\
- five for loops are using similar code structures resulting in duplication\
- try using nested loops to remove the duplications",,
"No modularity. Everything is written in a single file and usage of too many globals is not a good practice.",,
"Reimporting  Sys is a bug.",,
"Missing Function Docstring",,
"IN line 101,105,109,113 , no of columns is more than 79",,
"Too many local variables (21/15)",,
"Exactly one space should be there after commas",,
"x, y and c can be replaced with more meaningful names",,
"### imports must be in the beginning of code\
- according to pep8 standards import of modules must be kept int the beginning of code",,
"Mixed Indentation",,
"Fire balls are displayed for some time and they are fixed . Even if the player hits the ball there is no issue of GAMEOVER",,
"Use space after every '=' operator (PEP-8 standards)",,
"'a' can be replaced with more meaning name like state or direction",,
"Invalid Module name '1.py'",,
"Function naming convention is inconsistent. (underscores for some functions and capitals for some others)",,
"Exactly one space should be there after comma",,
"Encapsulation is not shown very well. This function should be bound to player class.",,
"- ### Wildcard imports ( from <module> import * ) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools - pep8 standards violated",,
"Suppose if we want two players we use same person class.That is not possible because you declared globally.",,
"have to remove  unnecessary comments",,
"### Too many global variables\
- using too many global variables is not a good practice\
- proper classes must be used to encapsulate the variables and used by calling class methods",,
"### Wildcard imports ( from <module> import * ) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools - pep8 standards violated",,
"### Wildcard imports ( from <module> import * ) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools - pep8 standards violated",,
"This function also should be bound to player class.",,
"Unnecessary pass statement",,
"function dosen't work properly , don't detect dragon ball when coming down from stairs",,
"Unused Import",,
"Better to display in strings rather than hardcording the bottom display",,
"### no functions used for large segment of code\
- large part of code is not within any function\
- Bad code smell",,
"### Wildcard imports ( from <module> import * ) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools - pep8 standards violated",,
"List of fireballs shouldn't be global as it leads to errors. Contain it in a class",,
"Unused import sys and os",,
"Missing Docstring",,
"s is undeclared",,
"needs to be passed through functions",,
"too many branches",,
"unused import Random",,
"variable name p is non communicative. plr or player1 would be a better choice.",,
"Old style Class defined",,
"Invalid Function Name ( length should be greater than or equal to 3)",,
"variables should be returned from functions.",,
"###Bug###\
- from layout import * imports all functions and classes from layout.py\
- but there is no class or function in layout.py \
- thus importing creates a fatal error\
- variable s remains formally undeclared but is accessible",,
"Remove commented code",,
"pylint rating -5.43/10 (if remove the array layout part )\
else -58.04",,
"Inconsistent naming convention. Underscores are used in some functions while Capitals in other functions.",,
"Redundant code. Reading a character can be done in a line",,
"Blank lines unnecessary",,
"global F is not used in this function",,
"Lives and coincount should be private variables",,
"Commented code should be deleted, not all comments.",,
"Unnecessary comment, as the  comment is not necessary. It does not explain anything about the following block of code because of which it classifies as a code smell.",,
"Code is not modular. Everything except layout is written is written in this module.",,
"Parameters i and j are not used.",,
"Invalid constant name fb,f",,
"unnecessary to defind donk_y2 as it is equal to donk_y1 and both are global",,
"Declare class with '()' after class name. Don't define old class style",,
"Unnecessary comment. It does not explain anything about the following block of code because of which it classifies as a code smell.",,
"Invalid module name 'w1.py'",,
"Exactly one space required after assignment",,
"import should be in separate lines",,
"Checked in list to avoid writing longer code but line still too long",,
"Why using global D(specific donkey) after initializing name to D? Only one donkey can be used in this manner without confusion",,
"Variable and function name is same , it should be made different.",,
"self.fact initialized but not used",,
"Deadcode.Commented code should be removed.",,
"Bad whitespace",,
"There are no private and public variables",,
"Variable names too long",,
"Why so much spacing?",,
"i and j can be replaced with more meaningful variable names.",,
"Use variables in terms of block_size or screen_size instead of constants.If we change the screen size display will be different",,
"Dead code-not a good practice",,
"Why creating so many functions that just pass?",,
"Dead code- not a good practice",,
"Also, from line 228 to 232 there are multiple conditions that have to be satisfied, first, the for loop, followed by 2 nested if statements. This leads to a code smell.",,
"Unnecessary blank lines",,
"donk_y and donk_x are in display function of donkey and donk_x is in gameloop()",,
"Indentation not proper",,
"No doc string for the class",,
"Avoid hardcoding",,
"This can be done in less number of lines",,
"Invalid variable name  'x1'",,
"Invalid variable name 'WQ'",,
"Why assign values in so many lines. Wastes space",,
"Instead of using constants use variables as it becomes easy to modify the code .\
For example if we need to change the dimensions of the display , then we need to modify the entire code",,
"Dead code again",,
"Bad spacing",,
"wild card import of pygame\
It is already imported in the other files",,
"####import should be in separate lines as####\
- import sys\
- import random\
\
According pep8 standards",,
"global variables have to be defined inside every function otherwise they are not referencing to it . So  modulation in this  impossible.It is unnecessary to defined on top but not at the bottom",,
"Use doc-string to describe each method",,
"Imports must placed at top of the file according to PEP-8 standards.",,
"This class does not have _init_ method.",,
"Imported specific not wildcards from modules",,
"global variables have to be defined inside every function otherwise they are not referencing to it . So modulation in this impossible.It is unnecessary to defined on top but not at the bottom",,
"Wildcard imports should be avoided. Violates pep8 standards",,
"multiple imports in one line , (pep-8)",,
"Unused variable GREEN",,
"class-level smells (lazy class )",,
"use appropriate variables for ease of understanding of code in future",,
"Invalid variable name",,
"Code is not modular. Everything is written in single module.",,
"no doc string for the function used",,
"no doc string for the function used",,
"Unused import random",,
"- There are many bad white space errors:\
1. space after comma\
2. space around\
    * assignment\
    * logical ops\
    * operational operators\
3. trailing whitespaces",,
"Unused import layout",,
"Wall list should not be hard coded",,
"Use variables as FPS as it is needed to increase the speed in further levels",,
"cyclomatic complexity",,
"Use variables such as FPS as it is required to increase the speed for further levels",,
"Invalid attribute Name",,
"Class grown too large....",,
"Indentation is bad from lines 85 to 95",,
"Write some comments for each function/method",,
"It is suggested to use classes (encapsulation) even for main method",,
"Exactly one space required around assignment",,
"Bad indentation below",,
"no doc string for the functions",,
"too many arguments passed in the function",,
"Mixed Indentation ( Found indentation with tabs instead of spaces )",,
"no doc string",,
"4 tabspaces indentation is needed. Mixed indentation below. 8 tab spaces given",,
"class level smell , cyclomatic complexity",,
"Are these really details pertaining to the player class?? Inappropriate intimacy: a class that has dependencies on implementation details of another class....",,
"No encapsulation,getters and setters.",,
"variable name not appropriate, variable name is 'ladderimage' and image is of donkey.",,
"Many unused imports (warning)",,
"Line Too Long ( Characters should be less than 80 )",,
"too many arguments passed in function , difficult to check the functioning of the function",,
"Missing Method Docstring",,
"Can be done in less lines. Avoid hardcoding",,
"declaring variables outside __init__ in class is a bad practice",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification. ... Can you not break it down into simpler and smaller methods?",,
"Feature envy: a class that uses methods of another class excessively.",,
"Too Many Instance attributes",,
"Feature envy: a class that uses methods of another class excessively.",,
"Variable name must have atleast 3 characters according to pep8 standards",,
"Unnecessary parenthesis",,
"String statement has no effect (pointless-string-statement)",,
"Comments that don't explain anything should be removed",,
"Messy. Lines too long",,
"could have used gameOver(variable) as a check flag , no need of return -1",,
"Feature envy: a class that uses methods of another class excessively. Why not make a separate function of this class only that makes such a call to the gameInstance class' function?",,
"importing modules should be on separate lines by pep 8 standards",,
"Exactly one space required after comma",,
"Missing module level docstring and docstring for all methods.. Bad code style",,
"No scoreboard",,
"could have used gameOver as a check  flag , no need of return -1",,
"importing modules should be on separate lines by pep 8 standards",,
"All hardcoded stairs,  which makes the stairs localised during every different game",,
"Bad whitespace. Exactly one whitespace required after assignment",,
"Invalid method name convention - use snake case",,
"Lazy class / Freeloader: a class that does too little.",,
"method level smell , unnecessary return of data",,
"Coin list is hard coded",,
"Attribute 'count' defined outside __init__",,
"Lazy class / Freeloader: a class that does too little.",,
"Wrong indentation",,
"Missing module level docstring and docstring for all methods.. Bad code style",,
"too many conditions being checked on one line, also the number of characters is more than 79.",,
"no of lifes for player is only 1.Once gameover player need to press c or q as shown above to do further jobs",,
"Unnecessary parens after 'for' keyword (superfluous-parens)",,
"Stairs should had been generated randomly....would have increased the thrill in game...hardcoding makes it predictable each time",,
"method level class , very long method , difficult to check functionality of function",,
"redefining name ladder, it was already defined above (line 62).",,
"Random statements that do the basic setup of the game can be grouped into a function under the same name basic_setup",,
"Broken stairs weren't included which was the requirement of the game",,
"redefing name wall.",,
"Comment is too long (104/80) , It should be less than 80",,
"Code is not commented. Difficult to read or troubleshoot.",,
"Wildcard imports ( from <module> import * ) should be avoided",,
"Why load and transform , scale the images each time you update the board? Won't that be too heavy operation? You should do this initially once you set up",,
"method-level smell , very big part of a code under one else statement , could have used separate functions",,
"Leave two blank lines after class.",,
"The last 3 lines have unwanted comments. They have no meaning, thus we have a code smell.",,
"Put values into macros so code can be changed easily later on",,
"play sound is absolutely insignificant should have been removed instead of commenting it out",,
"prev_x is defined outside init.",,
"Can be declared in less number of lines so it is easier to navigate through the code",,
"binary operators should be surrounded by variables only on one side .",,
"coins are also hardcoded while the game requirement was to make them random",,
"invalid constant name coin_list",,
"binary operators should be surrounded by variable on either side (pep-8)",,
"no doc string",,
"Fixed spacing between each of the horizontal levels",,
"Redefing name queen",,
"According to pep8 standards, exactly one space required around assignment",,
"defining name donkey",,
"fire balls are stationary",,
"Redefining name 'sys' from outer scope",,
"Unused import getpass",,
"Player , Donkey , fireballs has same color red .it is uneasy to play the game like this.",,
"undefined variable fireball_list",,
"method level smell , excessive return of data (could have used gameOver as a check flag )",,
"###BUG###\
- Once the princess is reached, could not open YouWin.png pygame.error will be displayed\
- If the player dies, same error occurs",,
"if name == __main__ ?",,
"Missing module level docstring and docstring for all methods.. Bad code style",,
"Redefining name 'game_state' from outer scope (line 54)",,
"*redefining name donkey",,
"There shouldn't be a space between after square bracket",,
"too many public methods (pylint)",,
"Invalid Variable name ( length should be greater than or equal to 3)",,
"Comment too long. Line cannot have 80+ characters",,
"inpu variable defined outside init",,
"Unused Random Import",,
"flag variable is of no use",,
"unused variable death",,
"Don't use global values for player. If multiple donkeys exist then all will use same coordinates and all will overlap with others and there is no use of putting multiple donkeys in Advanced levels",,
"inappropriate variable name 'a'",,
"method level class , no need to return -1 can use gameOver as flag",,
"Don't use global values for player. If multiple players exist then all will use same coordinates and all will overlap with others.It will lead to errors.",,
"method level class , very long method",,
"here, mixed case naming is code. mixedCase is allowed only in contexts where that's already the prevailing style to retain backwards compatibility. However this is not proper/appropriately  done as different naming conventions are being used is this program.",,
"unneccessary blank line, it should be used.",,
"Store the display width and display height in variables and then use them at any place required instead of putting manually because if you want to change it, it will be quite difficult to go to all the places and change the manually hard coded values.",,
"class levels smell , cyclomatic complexity , use of too many loops",,
"Fireballs are not implemented whereas game demands the same",,
"PEP8 standards not followed.\
multiple imports from different modules must be in separate lines",,
"dead code . comments should be removed from it",,
"Unnecessary wild card import statements, results in high chances of name-collisions and increases startup time",,
"according to PEP8 style 1 blank line should be there after assigning value to some variable.",,
"Recommended: Always surround the binary operators with at least single space on either side.",,
"Queen is always at the fixed position each time",,
"Good Colouring",,
"too many imports in one line (pep-8)",,
"according to PEP8 style 1 blank, space is required on both side of assignment",,
"no colored output",,
"###BUG###\
self.score?\
Attribute Bug\
\
####Warning####\
- Game will crash due to this bug in the following cases:\
    * When score is greater than 25 and fireball is hit, the game crashes",,
"This module is too large and contains too many classes.\
It can be broken down to make it more clear.",,
"Documentation string missing everywhere.\
for more info read PEP 257, which describes good docstring conventions.",,
"Missing docstring for Main.py module.",,
"lots of bugs in the jump function",,
"Bad Indentation",,
"Docstring required here",,
"no check on number of coins are more than required or not",,
"line is too long (should be less than 80 )",,
"player can even walk in air when jumped off the upper bases",,
"too many arguments used",,
"have to implement spaces in between like ( 255 , 0 , 255 )[PEP-8 Standards]",,
"- i is not well defined\
- variables should be initialised in init function",,
"repetitive  call to self.x , could have called once and used multiple times",,
"screen is a constant in the program, therefore constant name must be specified in capital letters.",,
"The game takes no inputs",,
"Function is too long. It can be broken down further.",,
"should have one space on either side of the operator",,
"No multiple levels in the game thus violating another requirement",,
"###unused imports: ###\
- sys\
- random\
- pygame",,
"wrong indentation (pep-8)",,
"Jump is a combination of four types of individual movements",,
"Again clock is a constant. Should be named in capital letters.",,
"All these individual ones also persists in the game unexpectedly....which is a major bug",,
"line is too long, should be less than 80 chars",,
"line is too long, should be less than 80 chars",,
"line is too long, should be less than 80 chars",,
"Function docstring missing.",,
"line is too long, should be less than 80 chars",,
"These indivdual movements seems like the unwanted cheat codes in the game",,
"line is too long, should be less than 80 chars",,
"line is too long, should be less than 80 chars",,
"Variable must be appropriate and length must be >=3",,
"Bad indentation of comment",,
"Too large grown class",,
"Variable score_message not defined and assigned before passing to the function.",,
"These globals are more appropriate as private variables of class",,
"Variable final_message remains unused.",,
"Documentation string missing everywhere.\
for more info read PEP 257, which describes good docstring conventions.",,
"*no colored ouput , \
*bad code smell\
*many functions are too big and complex to read\
*check_collision function not working totally correct",,
"unused import GREY, HEIGHT,screen and some other,while importing from wildcard import.This file does not need them.",,
"Player can't jump off the base to a lower base....",,
"Recommended: Commas should be followed with a blank spaces. Makes code more readable",,
"Use of too-many if conditions. Could be better implemented as clearing the whole set of all sprite-lists in a separate function without the unnecessary if's.",,
"above three are unused variables.RGB values ranges between 0-255.For green you initialized with \""1550\""",,
"Constants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL .",,
"Leave two blank lines after class declaration",,
"Documentation string missing everywhere.\
for more info read PEP 257, which describes good docstring conventions.",,
"results in 277 unused imports",,
"operator should be covered on either side by space .",,
"Unused module random, there is no need to import.",,
"some classes are too big",,
"Inheritance is not used. Player and Enemy can be inherited from a person class.",,
"Missing docstring",,
"too many public methods under one class",,
"line shouldn't contain more than 79 characters.Hard coding with constants is not a good practice",,
"Unused import tty",,
"Unused import os",,
"Wildcard imports resulting in around 300 unused import occurences leading to high name-collision chances",,
"No separate jump function has been implemented",,
"Constants should be capitalised",,
"Comment too long. Line must contain 79 characters or less.",,
"Redundant same line repeated twice",,
"No class docstring",,
"scoreboard is there but it is not initialized",,
"This line is to long, according to PEP8 style maximum 79 character can be there in one line.",,
"Bad indentation. Found 12 spaces, expected 8 (bad-indentation)",,
"This line is to long, according to PEP8 style maximum 79 character can be there in one line.",,
"Exactly one space required around assignment.",,
"Line:61 destroys the code visibility and indentation. It should have been deleted or moved to inline comment. not a good practice",,
"Unused imports",,
"Missing class docstring (missing-docstring)",,
"methods must be seperated with a blank line. PEP8 standards voilation",,
"Method could be a function (no-self-use)",,
"Attribute jump is defined outside __init__",,
"###BUG###\
- Jump falldown fails if the jump ends outside of the platform. \
- This allows the player to remain mid air \
- Because it is hardcoded only for 6 units\
- Only when the user presses right or left will the player fall down",,
"Unused variable 'dw' \
Invalid variable name ( Length should be greater than or equal to 3 )",,
"line to long.",,
"This code is redundant and common for Enemy as well as Player. (Inheritance can solve this problem).",,
"Class has no __init__ method (no-init)",,
"Too many attributes. Also a lot of common attributes such as width, height, position(x,y) is common to various classes in the game as in Fireball, Player, Coin, Ladder, etc. Hence it would be better if these classes could be derived from a superclass holding those common attributes.",,
"It's a good practice to use classes even for main functon",,
"unnecessary imports(pep-8)",,
"Invalid argument name \""y\"" (invalid-name)",,
"no doc string",,
"Redefining name 'game' from outer scope (line 2)",,
"Documentation string in wrong format.\
for more info read PEP 257, which describes good docstring conventions.",,
"class levels smells , cyclomatic complexity , too many loops",,
"Bad Indentation",,
"Don't compare boolean values to True or False using == .\
Yes:   if greeting:\
No:    if greeting == True:\
Worse: if greeting is True:",,
"### Minor BUG ###\
- Because of sleep.time(2) and clock.tick(30) when we continuously jump, everything else slows down due to sleep\
- This is buggy as it allows player to cover more distance while the fireballs slow down",,
"Too complex lines of code.",,
"Missing method docstring (missing-docstring)",,
"Don't compare boolean values to True or False using == .  \
Yes:   if greeting:  \
No:    if greeting == True:  \
Worse: if greeting is True:",,
"Bad indentation above",,
"Break it down.",,
"Leads to __lag__",,
"unnecessary imports(pep-8)",,
"Donkey moves replicating the moves of the player",,
"Code smell detected in Jumpleft and jumpright below due to repeating lines",,
"When player reaches one of the ends the donkey still keeps moving if the move button pressed for player",,
"Code smell detected in jumpright_player and jumpleft_player due to duplication of lines.",,
"Could be separated into separate function named \""ScreenEmulate\"" to avoid breakdown of logic.",,
"The argument 'l' is passed for a purpose and it is for completely different purpose.\
Please use new variables for different purposes.",,
"no doc strings(pep-8)",,
"Don't compare boolean values to True or False using == .  \
Yes:   if greeting:  \
No:    if greeting == True:  \
Worse: if greeting is True:",,
"- All variables __must__ be declared in classes init.\
- Encapsulation must be practiced",,
"import in different lines should be practiced according to pep8",,
"Too many flags and conditions",,
"too many public methods",,
"Code Smell due to repeated lines in function \""moveright_player\"" and \""moveleft_player\""",,
"Hardcoding can be dagerous",,
"again hardcording",,
"import on different lines",,
"complex functions used , which make it difficult to debug and understand code",,
"Old-style class defined.",,
"Declaration of variables outside of init is a bad practice",,
"Don't compare boolean values to True or False using == .  \
Yes:   if greeting:  \
No:    if greeting == True:  \
Worse: if greeting is True:  \
  \
PEP8 Recommendation",,
"Exactly one space required after comma",,
"Duplicated coding: Identical codes at different places",,
"operator should be surrounded by whitespace on either side",,
"import should be done on separate lines",,
"Don't compare boolean values to True or False using == .  \
Yes:   if greeting:  \
No:    if greeting == True:  \
Worse: if greeting is True:  \
  \
##PEP8 Recommendation##",,
"Mixed-indentation",,
"operator should be surrounded by whitespace on either side",,
"##Documentation string missing everywhere.##  \
For more info read PEP 257, which describes good docstring conventions.",,
"BUG: There is no remove member for the Fireball class. This was expected to remove the fireball at the corner. Doesn't happen.",,
"These modules are unused; the need not have been declared",,
"Names assigned to the variables here are too uncommunicative.",,
"Too few public methods (0/2)",,
"Declaration of variables should take place inside ____init____",,
"Bad Indentation",,
"method level class , too many arguments , making it difficult to debug and check functionality",,
"I have not mentioned such errors in the code, but summarised what i observed in comments below",,
"you can use images for good looking",,
"Too many public methods (26/20)",,
"class level smell , cyclomatic complexity , function should be broken into small parts",,
"Game runs fine....it seems here and on gedit that it's unindented but absolutely fine on terminal",,
"bad way of writing code",,
"Too many branches (20/12)",,
"## Code is not properly seperated into logical paragraphs. Bad practice, not recommended",,
"function should have been broken into small functions and implemented so that it would have become easy to read and understand",,
"The variables should be replaced with more meaningful ones.",,
"many lines in the code crosses limit of maximum of 79 charecters",,
"unused variable j",,
"Meanings of characters in the files are not explained anywhere.",,
"There is no polymorphism in this code",,
"impossible to make MODULATION because of declaring global variables.",,
"Large Class: a class that has grown too large ---large class , Class Level Code Smell",,
"multiplayer option is not there",,
"there are no further levels in game .one and only one level in the game.Once player goes to the prisioner game over",,
"i have to use space before and after the usage of binary operators",,
"who is hensden?",,
"unnecessary semi colon",,
"Unused import sys",,
"Lazy Class Code Smell.",,
"Not a BUG. Reported incorrectly. remove is function derived from pygame.Sprite.sprite class from which this class is derived",,
"Lazy Class Code Smell",,
"Unused import random",,
"lower case letter 'l' is avoided [according to PEP- standards]",,
"class-level smell cyclomatic complexity , too complex function",,
"no doc string",,
"method-level smell , too many arguments passed to a function",,
"Too much nesting",,
"Cyclomatic complexity",,
"name of variables are not easy to understand according to game",,
"l -- attribute name too short",,
"bad indentation (pep-8)",,
"Documentation string missing everywhere.  \
For more info read ##PEP 257##, which describes good docstring conventions.",,
"Cyclomatic complexity",,
"Missing module level docstring and docstring for all methods.. Bad code style",,
"Only half of the half boarders are drawn in game",,
"##Contrived complexity:  \
Forced usage of overly complicated design patterns where simpler design would suffice.",,
"method level smell , too many arguments , making it difficult to understand and debug",,
"module name pacman, not a good",,
"Code refactoring required essentially",,
"lower case letter 'l' is avoided [according to PEP-8 standards]",,
"Class grown too long(code smell)",,
"Unnecessary parenthesis",,
"module name pacman, not a good module name for donkey-kong game",,
"module name 'A.py' not a good module name",,
"Use global constant variables instead of inline ones. This makes code very much readable and easy to follow in future.",,
"Hardcoding is a bad practice",,
"Large class Code Smell",,
"class level smell , too complex function",,
"class too long",,
"yes, i meant in the second comment that long/ multiline comments should be deleted",,
"bad way of writing code",,
"Single class containing large number of objects",,
"Yes,",,
"##Contrived complexity:  \
Forced usage of overly complicated design patterns where simpler design would suffice.",,
"#Excessively short identifiers:  \
The name of a variable should reflect its function unless the function is obvious.",,
"Decreased Readability of code",,
"Exactly one space required after comma",,
"class level smells  , feature envy",,
"Mentioned it in comments",,
"Mentioned in comments",,
"Exactly one space required around assignment",,
"should have broken function into smaller functions , which are easy to understand and debug",,
"Bad code style according to PEP 8 conventions",,
"inappropriate intimacy (class level smells )",,
"Large number of loops used",,
"cyclomatic complexity",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"- Lines can be reduced by loading and scaling only once in  a separate class that can perform this specific task.\
- This can be an implementation of polymorphism which seems to be very sparse in this code",,
"Warning - Bad indentation. Found 16 spaces, expected 12 (bad-indentation",,
"Edit: __time.sleep__",,
"bad indentation and no doc-string for the class",,
"Unused score variable",,
"Modularity is not used. Everything is written in a single file.",,
"Not clear that the statement prints a coloured letter. Appears to be gibberish. Comment the colour name or use macros",,
"There is no Full ladder between level 4 and level 5. So player can't move to level 5.",,
"You should have used variables in the place of constants as it becomes to modify the code to a different resolution",,
"Invalid attribute name \""gameOver\"" (invalid-name), use snake case and length >= 3",,
"class level smells , use of too many loops",,
"No doc-string for the method",,
"Incorrect indentatation",,
"Leave two blank lines after declaration of class",,
"Instead of so many if statements try to extract them out to functions",,
"Do not consider this comment. Added by mistake.",,
"Function name is uncommunicative -- code smell",,
"Invalid attribute name \""r\ ","rehas.sachdeva","rehas.sachdeva@students.iiit.ac.in"
"Avoid writing such long lines of code",,
"Too many branches above. This is a bad code smell ( reduce number of if conditions used)",,
"Convention mistake: Old-style class defined. (old-style-class)",,
"Documentation string missing everywhere.\
\
For more info read PEP 257, which describes good docstring conventions.",,
"Use proper variables for better understanding of code in future",,
"Bad Indentation and try to use trailing spaces after a comma",,
"coloured arena is missing",,
"Parameter names are uncommunicative.",,
"Use more no of lines instead of cluttering -- code smell",,
"The ranges used in these loops are better coded as constants... Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions.",,
"Try to avoid bad whitespace convention errors as mentioned in comments below",,
"Convention mistake - Missing module docstring (missing-docstring)",,
"Leave blank lines between functions -- PEP-8",,
"Convention mistake - Missing method docstring (missing-docstring) everywhere",,
"Ignore parenthesis if not required -- PEP-8",,
"Encapsulation not implemented... these variables can be declared as private",,
"Class has only on major function ( lazy function ) is a bad practice and a code smelll",,
"Mixed indentation",,
"Unnecessary comment, out of indentation",,
"Unnecessary comment, out of indentation",,
"Missing class docstring (missing-docstring)",,
"Define meaningful variables for constants",,
"edit: __dangerous__",,
"Why the if statement and pass",,
"Invalid argument name \""GameInstance\"" (invalid-name) use snake case with all lowercase letters, length >= 3",,
"Board should ideally be randomized.",,
"Too long lines...must be less then 79 characters(pep-8)",,
"method level smells (long list of parameters)",,
"No functions are bound to player class -- no encapsulation.",,
"Unused import sys",,
"Invalid variable name \""Dposition\"" (invalid-name), use snake case with all lowercase letters, length >= 3",,
"Attributes jump_flag and standing_flag should be defined in __init__.",,
"method level smells (  too many parameters , difficult to debug  )",,
"Jump is not proper",,
"Fails to work correctly in some of the cases",,
"Unnecessary blank lines",,
"Inappropriate intimacy: a class that has dependencies on implementation details of another class.",,
"Maintain spacing --PEP-8",,
"No doc-string for the class",,
"Missing module docstring (missing-docstring)\
 Missing class docstring (missing-docstring)\
Missing method docstring (missing-docstring)",,
"Missing Module Docstring",,
"Function too long. Break it down. -- Code smell",,
"No doc-string for the method",,
"Unused import sys (unused-import",,
"Wildcard Imports may result in name collisions.",,
"Function too long. --Code smell",,
"Parenthesis must be removed if not required -- PEP-8",,
"Invalid attribute name \""FireballPositions\"" (invalid-name)",,
"Invalid method name \""GenerateFireball\"" (invalid-name)",,
"unindent doesn't match outer indentation level(pep-8)",,
"Warning - Using possibly undefined loop variable 'i' (undefined-loop-variable)",,
"Too large class. Hard to troubleshoot. -- Code smell",,
"Same statements are repeated as above \
Instead you could have used functions if necessary",,
"too many methods in the same class",,
"Bad code smell",,
"Imports should usually be on separate lines",,
"Missing module docstring.",,
"Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions.",,
"Better comment whats going on here",,
"Unnecessary wildcard imports may result in name collisions",,
"Too large function, hard to troubleshoot -- Code smell",,
"Missing class docstring",,
"Doc string is missing for this class ...",,
"name of variables and functions  are not easy to  understand  like jimmy , harry , chill",,
"Invalid variable name \""X\"" (invalid-name)",,
"Doc string missing for this method",,
"no colored output",,
"Try using variables instead of using constants",,
"Encapsulation not implemented",,
"Invalid method name --- Use snake case to name a method",,
"too long lines (403>79)..(pep-8)",,
"use of too many public methods",,
"#### Jump not implemented####",,
"Try to avoid using many blank lines",,
"Unused variable j. Variable number could directly be used for that purpose.",,
"Use appropriate variables for easy understanding of code",,
"Do not import many modules in a single line",,
"Inappropriate intimacy: a class that has dependencies on implementation details of another class.",,
"####Fireball not implemented####",,
"Missing module docstring.",,
"Hardcoded arena",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"Warning: Wildcard imports can result in name collisions and increase startup time",,
"time and space could be saved using smaller loops",,
"Exactly one space required around assignment",,
"Bad whitespace ---- assignment operator must be separated by a single space",,
"Trailing whitespace (trailing-whitespace)",,
"Missing Module Docstring",,
"Invalid variable name --- length must be >=3",,
"Unnecessary wildcard imports may result in name collisions and increase startup time",,
"Found indentation with tabs instead of spaces (mixed-indentation)",,
"Line too long (116/100) (line-too-long)",,
"unnecessary imports (pep-8)",,
"No space allowed before bracket",,
"Avoid using too many blank lines",,
"Wild card import as random is already imported in fireball",,
"Exactly one space required after comma\
            pygame.draw.rect(screen,BLACK,[ (MARGIN + WIDTH)*j + MARGIN,(MARGIN + HEIGHT)*i + MARGIN,WIDTH,HEIGHT] )\
                                   ^ (bad-whitespace)",,
"No space allowed after bracket",,
"Exactly one space required after comma",,
"You are using spaces and tabs for indentation .... Try to maintain same indentation everywhere",,
"No space allowed before bracket",,
"Missing module docstring (missing-docstring)",,
"Line too long (112/100) (line-too-long)",,
"Too many attributes to define in a single class. Most of them are common to other classes too. So rather this could be implemented with the classes being a subclass of some other class containing all the common attributes and function.",,
"__init__ method from base class 'Person' is not called (super-init-not-called)",,
"warning -  Found indentation with tabs instead of spaces (mixed-indentation)",,
"A simple length function could suffice instead of using a for loop and an extra variable",,
"Duplicated code: identical or very similar code exists in more than one location.",,
"unnecessary imports , should be imported in one file (pep-8)",,
"No space allowed before :",,
"Invalid variable name --- variable name must be at least >= 3",,
"too many imports in one line (pep-8)",,
"Unused import os (unused-import)",,
"Classes, modularity, encapsulation not implemented",,
"Readme should specify the basic requirement about having python-pygame module installed in order to be able to run the game.",,
"operator should be surrounded by whitespaces on either side",,
"Increased complexity ...no need of nested loops",,
"Unused import",,
"Line too long (106/100) (line-too-long)",,
"Old-style class defined",,
"Invalid variable name --- variable name must be at least >=3",,
"This is __buggy__ because when player goes over ladder, an H is displaced",,
"Almost all the variables are static as in constants. Hence capitalization of constants is highly recommended.",,
"name of functions should be easy to understand (\""GHOST....?\"")",,
"Long method: a method, function, or procedure that has grown too large.",,
"Unused import random (unused-import)",,
"method level smell , long method",,
"2 main and Main functions?? so confusing",,
"excessive use of condition",,
"class level smell , cyclomatic complexity",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification.",,
"Access to a protected member __x of a client class (protected-access)",,
"Because this line is commented out, nothing happens when the player reaches the princess.",,
"This is wrong sample uploaded by mistake.",,
"warning - Wildcard import pygame.locals (wildcard-import)",,
"Too many return statements in the function/method",,
"It is a bad practice to leave code that is commented in  the main program as it reduces readability and here, causes __bad indentation__.",,
"feature envy: a class that uses methods of another class excessively.",,
"Invalid constant name \""screen\"" (invalid-name)",,
"Unused import os (unused-import)",,
"Invalid function name \""DisplayBoard\""",,
"It is better to use range(1:n) as it becomes difficult if we move higher",,
"Invalid argument name \""ourGame\""",,
"Invalid function name \""DisplayJump\""",,
"Exactly one space required after comma",,
"unnecessary leave of empty lines in between (pep-8)",,
"Redefining name 'Win' from outer scope (line 24) (redefined-outer-name)",,
"Refactor - Too many local variables (16/15) (too-many-locals)",,
"Line too long (84/80) (line-too-long)",,
"unnecessary imports(pep-8)",,
"Refactor - Too many branches (20/12) (too-many-branches)",,
"Unneccesary comments and also using variables would be better",,
"Avoid writing such long lines (>79 characters)",,
"Refactor - Too many statements (75/50) (too-many-statements)",,
"Unused Person imported from Person (unused-import)",,
"class-level smells , lazy class",,
"Unused wildcard import is mentioned",,
"Old-style class defined. (old-style-class)",,
"I used it to differentiate. (May not be an unnecessary comment)",,
"Too many local variables (21/15) (too-many-locals)",,
"Bad Whitespace",,
"too large class grown..(code smell)",,
"Line too long (104/100) (line-too-long)",,
"The function load_image is not specified. It exists in helpers.py file and when running DonkeyMain.py both modules get imported so an error is not visible, but nevertheless the function should be imported into this module so as to ensure correctness of the module indiviually",,
"Too many branches (16/12) (too-many-branches)",,
"too many methods in the single class",,
"Using possibly undefined loop variable 'i' (undefined-loop-variable)",,
"No doc-string for the class",,
"No doc-string for the method",,
"Refactor -  Too many branches (17/12) (too-many-branches)",,
"Unnecessary wildcard import may result into name collisions. Avoid using wildcard imports",,
"Avoid writing lines with length > 79 characters",,
"too many characters in the line...176>76(pep-8)",,
"pardon...176>79",,
"Violates PEP-8  standards very long line of code",,
"Too many return statements (7/6) (too-many-return-statements)",,
"Unused argument 'y' (unused-argument)",,
"Unused argument 'x' (unused-argument)",,
"Wait, we are coding in python, right? Oh yeah, forgot that Python ignores unnecessary SEMICOLON;",,
"Mixed indentaion",,
"use of * led to excessive imports",,
"Use snake case method names",,
"imported module 'time' of no use",,
"149>79 chars(pep-8)",,
"Btw...what is the use of this regex..?",,
"21 occurences in this file itself",,
"PEP 8 convention:  Class names should normally use the CapWords convention.",,
"use of * led to excessive imports",,
"PEP 8 : instance variables/methods should have lowercase letters with words separated by underscores",,
"self.x and self.y have been  accessed too many times within the function , instead should have stored in a local variable .",,
"operator should have been surrounded by  whitespace on either side",,
"Instead of using a whole array 'D'  for the movement flying sprites, a simple numeric manipulation could be easy. As in a single variable as a flag that determines whether the motion is upwards/downwards and a counter that toggles flag after specific interval.",,
"^(pep-8)",,
"Missing module docstring",,
"too many whitespace (pylint)",,
"Wildcard imports may result in greater chances of name-collisions.",,
"__  Found indentation with tabs instead of spaces (mixed-indentation) throughout the code __\
- This does not satisfy PEP-8 standards",,
"Documentation string missing everywhere.\
\
For more info read PEP 257, which describes good docstring conventions.",,
"__ It's usually a good practice to encapsulate all methods __",,
"__ Too many blank lines left between classes __",,
"Hardcoded arena and ladders",,
"__ Lazy Class: does very little __",,
"It is recommended to define only new-style classes, because they are properly integrated into Python's type system. Check [Here](https://www.python.org/download/releases/2.2.3/descrintro/)",,
"__Line is too long. Should be less than 80 chars __",,
"No broken ladders present",,
"same intialisation are used in more places.Use a function to make it better instead of initialising every where.",,
"__Bad whitespace __ : There should be space after commas",,
"too many characters in the line(>79  pep-8)",,
"method level smells-too many arguments",,
"Dead code . Commented code needs to be removed",,
"Class names should normally use the CapWords convention. (pep 8)",,
"Too many attributes exist for a single class. Redundancy can be reduced as some of the atrributes are common to most other classes and hence can be a derivative of a superclass containing all these common attributes",,
"Dead code . Commented code needs to be removed",,
"__ According to the PEP-8 norms indentation should have 4 spaces. 8 have been used throughout the code __",,
"Modularity is not used.All variables are globally declared it is hard to implement modularity.",,
"##Convention mistakes: \
* Exactly one space required around assignment\
* Exactly one space required after comma\
* Trailing whitespace (trailing-whitespace)\
* Bad indentation. Found 9 spaces, expected 4 (bad-indentation)\
*  Missing module docstring (missing-docstring)\
*  Everything in one file No classes, modularity, encapsulation, polymorphism, Inheritnace",,
"Inheritance is not used.",,
"Contrived complexity : (application level smell) no need of elif...pass , instead of that just put a condition on else statement .",,
"defining a variable that has no use in the first place is not recommended. Variable 'deltat' occupies unnecessary space",,
"class level smell : cyclomatic complexity",,
"This whole above thing could be written in a function using lists and using variables.",,
"Old-style class defined. (old-style-class)",,
"* No space allowed before comma\
* Exactly one space required around comparison\
* Found indentation with tabs instead of spaces (mixed-indentation) (warning)",,
"Warning: _jump is an protected member of a client class being accessed out of the private scope",,
"__ This class is too big (Large code smell) __",,
"Unnecessary use of same comments for a person may result into personal collisions. Avoid using duplicate sentences.",,
"*Line too long (108/100) (line-too-long)\
*Bad indentation.",,
"_life: Accessing a protected member. Should not access any protected members.",,
"White space not needed",,
"_last_direction: Accessing a protected member. Should not access any protected members.",,
"Line too long (101/100) (line-too-long)",,
"variable names should be of length>=3",,
"variable declared twice",,
"Sorry,\
By mistake",,
"too many white spaces",,
"It would be better if these variables be global instead as in it gets instantiated every run of the game. Instead, it could be made global and cleared every run of the game.",,
"Invalid constant name \""white\"" (invalid-name), Follow this convention -  	(([A-Z_][A-Z0-9_]*)|(__.*__))$   i.e. use uppercase and underscores",,
"No exception-type specified: As in what kind of exception should the game raise when the try block fails.",,
"* Though importing a module multiple times would not cause any overhead (python is more intelligent than you and me, and would ignore duplicate imports), but still its not a good practice to import a module every where.  \
\
* If minimal sentences suffice your logic and code functionality then its better to use it.\
\
##There is something known as inheritence, probably my code is a victim of it.",,
"__There needs to be a separation between functions. __",,
"Also these variables if defined locally at all, due to some reason, must be enclosed in __init__() rather than outside",,
"- __ Imports should be separated __ \
- __sys is reimported on line 11. from line 1 __ \
__",,
"Method could be a function (no-self-use)",,
"__ Wildcard imports (from gameboard import *) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools. __",,
"I would suggest you have a quick reading of \
##PEP 0257 -- Docstring Conventions \
stated at webpage https://www.python.org/dev/peps/pep-0257/  \
If you have any confusions regarding the definition then contact me pinkeshbadjatiya@gmail.com.  \
You can meet me personally as well.",,
"Wildcard imports (from <module> import *) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools.",,
"Exactly one space required around assignment",,
"Wildcard imports (from <module> import *) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools.",,
"Wildcard imports (from <module> import *) should be avoided, as they make it unclear which names are present in the namespace, confusing both readers and many automated tools.",,
"IMports should be on separate lines",,
"This may suffice for your code functionality just fine, but still the module itself is incorrect on its own, as in what is ideal is that seperate modules should remain as independent as possible, but it is a must to be fully functional on its own to avoid any inconsistencies.",,
"__ Invalid variable name. Var name should be of length >=3 __",,
"__missing docstrings __",,
"__ Invalid variable name. Var name should be of length >=3__",,
"Each line of a block comment starts with a # and a single space (unless it is indented text inside the comment).(pep-8)",,
"It is a convention and you are not supposed to follow, but is recommended. No offence meant. Peace",,
"__ _person_ variable not used anywhere __",,
"__ in this _init_ function __",,
"Documentation string missing everywhere.\
\
For more info read PEP 257, which describes good docstring conventions.",,
"__ Method names should be named in snake_case and not as camelCase __",,
"should have used a block comment(pep-8)",,
"Missing Module string",,
"__ If player(person) has already been used to show inheritance, why do __init__(person)? It will redefine person. Moreover, person.__init__() has not been called __",,
"The specified argument 'start_group' remains unused throughout the scope of the update function.",,
"###Bug \
Using variable 'ladders' before assignment (used-before-assignment)",,
"use of * led to excessive imports",,
"###Bug \
Undefined variable 'lead_' (undefined-variable)",,
"__ Redefining gameOver from line 457. This leads to orphan variables (class code smell) __",,
"__ check_collision_ball is the right way of naming a function (snake case) and not camel case! __",,
"Unused argument event",,
"Class names should be with context to the its functioning",,
"Unused argument gravity",,
"Even python ignores unnecessary whitespaces after a line, should i not care about it.\
\
# Python ignores .....  \
* Trailng whitespaces after a line, should i not care about it. (PEP8 standards)  \
* Space between function name and paranthesis (ex. 'func()' and 'func ()'), then what is good coding practice. recall PEP8  \
### PEP 0008 -- Style Guide for Python Code  \
  Caps Class names, should i care about it as well or sue the writers of above page.\
* ### Long method:  \
  A method, function, or procedure that has grown too large.\
* ### Too many parameters:    \
   A long list of parameters is hard to read, and makes calling and testing the function complicated. It may indicate that the purpose of the function is ill-conceived and that the code should be refactored so responsibility is assigned in a more clean-cut way.\
* ### Lazy class / Freeloader:  \
  A class that does too little.\
* ### Contrived complexity:  \
  Forced usage of overly complicated design patterns where simpler design would suffice.\
* ### Excessively short identifiers:  \
  The name of a variable should reflect its function unless the function is obvious.\
* ###  if Polymorphism not implemented.\
* ### if Encapsulatio not implemented.\
\
  \
    \
My sole purpose is to help to understand that we should follow good coding convention even if someone (in this case, unfortunately python) ignores it.  \
And yes, even i do ignore spam comments.",,
"class named \""player\"" could not be found",,
"###Recommended usage: \
raise SystemExit(message)",,
"__ gameOver is unused: You could return that instead of -1. Bad code smell: using too many litrals\
 __",,
"Unused import error (unused-import)",,
"Too few public methods (0/2) (too-few-public-methods)",,
"__BAD practice to use global flags __",,
"Attribute 'ctx' defined outside __init__ (attribute-defined-outside-init)",,
"__Use of global variable redefines it from outer scope: Bad practice __",,
"No exception type(s) specified (bare-except)",,
"**",,
"Line too long (346/80) (line-too-long)",,
"Exactly one space required after comma",,
"__Method level smell : Too many params __",,
"Too many instance attributes (8/7) (too-many-instance-attributes)",,
"unused variable i",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification.",,
"###Above this line###\
- __ Long method code smell __\
- __ Duplicative code and cyclomatic complexity __\
- Other bad whitespace / PEP 8 violations",,
"only one level implemented",,
"__ This class is too long and could have made into another file for modularity __",,
"block comments should be followed by a space after#",,
"Please remove comments which don't explain anything",,
"__ Sometimes -1 is returned sometimes nothing. Always return one type of data. Either an integer always or nothing at all and create an encapsulated flag __",,
"Please remove comments which don't explain anything",,
"__ Line is too long. Should have less than 80 chars __",,
"Python removed the notion of semicolons for a reason, I suppose. And if using unnecessary whitespaces isn't according to conventions, so is using a semicolon. Remember, I'm not here to scrutinize your code, I have not that much capability or competence to do such thing, I'm doing this for a reason and not here to offend the sanctity and correctness of your code.",,
"__where is inp being used? __",,
"too many if else condition",,
"Should use 4 spaces not 12",,
"Invalid variable names (invalid-name), Follow this convention - [a-z_][a-z0-9_]{2,30}$  i.e. use snake case and lowercase",,
"imports should be on separate lines(pep-8)",,
"__ Too many branches. 12 are allowed. this is the 19th __ (Cyclomatic Complexity)",,
"__ i is unused.  __",,
"__ use a while loop in such situations to avoid unnecessary variables __",,
"modules should not be imported inside the function",,
"__ Too many print statements could be condensed to 1 (using echo and comma)__  (Application code smell)",,
"j should be declared in class",,
"class __init__ *",,
"Unused variable j",,
"Bad indentation",,
"unused i variable",,
"invalid argument name : a \
should be >=3 in length",,
"FYI, Pylint sees unnecessary uses of semicolons as a Warning.",,
"i is unused",,
"Docstring is missing",,
"i is unused",,
"Unused variable j",,
"invalid syntax, ':' missing",,
"###No right boundary has been set. Game crashes due to IndexError: list index out of range ###",,
"OS should be imported and screen should be cleared at each step for better view",,
"syntax error (due to indentation)",,
"syntax error (due to indentation)",,
"__init__ method from superclass not called",,
"init method from superclass not called",,
"Unused variable prev",,
"__init__ method from superclass not called",,
"Unnecessary use of variable rect, Instead simply accesing the 0th index of the iteratable object that load_image returns, would make things better.",,
"This method does not need to be a method of this class as not actually dependent on the instance of class being called from. May as well be a function to avoid confusions",,
"Same errors as in the file level1.py: method should be a function, rect variable unused",,
"Same errors as in the file level1.py: method should be a function, rect variable unused",,
"Long Method\
Refactor long methods into smaller methods if you can.",,
"smaller methods are easier to read and understand (Code smell)",,
"too many if staments",,
"### Convention mistakes:\
* Exactly one space required around assignment\
* Exactly one space required after comma\
* Trailing whitespace (trailing-whitespace)\
*  Bad indentation. Found 6 spaces, expected 12 (bad-indentation)\
*  Missing module docstring (missing-docstring)\
*  Everything in one file No classes, modularity, encapsulation, polymorphism, Inheritnace",,
"Missing function docstring (missing-docstring)",,
"nvalid constant name \""white\"" (invalid-name), Follow this convention - (([A-Z][A-Z0-9])|(__.__))$ i.e. use uppercase and underscores",,
"i.e. Uncommunicative Name (code smell)",,
"should have used list comprehension (code smell)",,
"Invalid variable names (invalid-name), Follow this convention - [a-z][a-z0-9]{2,30}$ i.e. use snake case and lowercase, length >= 3",,
"Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions.",,
"should have used separate functions to update score and coins count rather then updating them in the main function",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification.",,
"Excessive use of literals: these should be coded as named constants, to improve readability and to avoid programming errors. Additionally, literals can and should be externalized into resource files/scripts where possible, to facilitate localization of software if it is intended to be deployed in different regions.",,
"Better write comments on whats going on here.",,
"what is there was a coin at the final position where a player reaches after jump.\
there's no provision mentioned neither for collecting the coin nor for updating the score.",,
"bug: as soon as the fireball reaches the bottom left corner, it should die\
seems as if the feature not implemented or may be not mentioned anywhere about it",,
"Warning: Unnecessary wild card imports may result in lot of confusions and increased chances of Name collisions even for automated-tools",,
"long method : bad code smell",,
"init method from base class 'Person' is not called (super-init-not-called)",,
"avoid using wild card imports(pep-8).",,
"Too many attributes. Also many of attributes are common w.r.t other classes, hence a better implementation is usage of an superclass that initializes all the common attributes such as height, width, rect, image, etc. and all other classes be an derivative with some additional attributes",,
"Include comments for better understandability of code.",,
"Multiprocessing not used.",,
"Shouldn't this be self.height? Anyways height variable remains unused.",,
"Variable 'sch' remains unused",,
"Too many nested-if conditions.",,
"Very long if condition.",,
"imports should not be separated by spaces (pep-8)",,
"white spaces should be given after and before equal to.",,
"unnecessary pass statement",,
"Long method: Refactor long methods into smaller methods if you can.\
(code smell)",,
"No encapsulation.",,
"Conditional Complexity(too many conditions) : bad code smell",,
"Too many elif conditions.",,
"no exception is raised. It is used to catch an exception not raise it.  'raise' is used to the the expected work.  \
\
An excerpt from http://docs.python.org.  \
### The except clause(s) specify one or more exception handlers. When no exception occurs in the try clause, no exception handler is executed.  An expression-less except clause, if present, must be last; it matches any exception.  For an except clause with an expression, that expression is evaluated, and the clause matches the exception if the resulting object is “compatible” with the exception.   \
\
And code in 'except' area is an alternate section of code that must be run at critical times.",,
"String statement has no effect (pointless-string-statement)",,
"Wild card import should be avoided(pep-8).",,
"too many if conditions",,
"Long Method. Bad code smell",,
"Thanks for pointing out the mistake I've made. Replace 'raise' with 'catch'. Or rephrasing the complete sentence: Exception-type should be specified as in upon what kind of exceptions the exception block should handle and run the block code upon failure of try block.",,
"Cyclomatic complexity. Bad code smell",,
"what if a player is at the verge/end of a structure/layer?\
Ideally on pressing 'd' in that case, the player should drop down to the next structure just below it .\
i.e. x=x+4, y=y+1",,
"Duplicated Code. Application level smell.",,
"Avoid unnecessary pass statement",,
"Shouldn't redefine variable 'dollar_list' from outer-scope.",,
"No purpose of using a variable c.",,
"wildcard imports are highly discouraged.",,
"Feature Envy. Bad code smell.",,
"Unnecessary pass statement",,
"Docstring is missing.",,
"old-Style class defined. The class must be a derivate of an object or other class",,
"while jumping , what if stairs come in between??\
Ideally the player should be on the vertical line and on corresponding base structure.\
i.e. y=y\
and x=x+k\
where x+k is the immediate following structure over which the player can walk",,
"Too many positional arguments",,
"what if a player only presses space , not followed by any character?\
Ideally the player should simply move 2 steps up and down (in the same vertical line)",,
"bug: The feature is not implemented",,
"There should be spaces around assignment operators.",,
"Spaces should be there around assignment operations.",,
"(code smell) Combinitorial Explosion: You have lots of code that does almost the same thing.. but with tiny variations in data or behavior.\
Thw two methods \""getX\"" and \""getY\"" are actually not needed.\
only a single function getposition may do the job",,
"Hard coded game layout. could be randomised.",,
"Could code more efficiently instead of for loops.",,
"Class has no initialisation method specified. __init__ is missing",,
"(code smell) Duplicated code: the codes after both \""if\"" and \""elif\"" are same.\
Istead you could have used a function and write \""this\"" piece of code and call the function wherever needed",,
"class fireball has no init() method",,
"wild card entry cannot be used according to pep-8 standards",,
"Very Big if condition.",,
"Score goes to negative values. No proper score handling implemented.",,
"Very Big if condition according to pep8 standards.",,
"inappropriate naming.",,
"game is redefined repeatedly out of the scope",,
"Princess is redefined from outer scope",,
"frequency of generating fireballs is less, its easy to win",,
"unused imports sys, game and level1",,
"could be written as a separate function instead of repeating the whole thing.",,
"Indentation is double tabs 16 spaces where it had to be 12 spaces.",,
"Could comment about variables like big,flag,gone.",,
"Method has no self use, may as well be a separate function.",,
"All these variables inside classes are practically constants. No actual need of implementing a whole class when the class is an all data class. Just plain variables should suffice",,
"Bug: According to your code, fireballs are able to drop down even through broken stairs.",,
"All these variables inside classes are practically constants. No actual need of implementing a whole class when the class is an all data class. Just plain variables should suffice",,
"should have specified the corresponding colors as per their encoded values",,
"Bug: seems as if the fireballs are not allowed to strike the walls( since check wall function is called nowhere)\
Ideally fireballs should change their direction of motion on collision with wall.",,
"Modularity can be better",,
"should have used list comprehension (pep-8)",,
"According to PEP-8 standards, indentation should be of 4 white spaces, but indentation of 8 white spaces has been followed instead.",,
"Large Class",,
"could have made a function as \""make_stairs\"" that doesthe job of making stairs, rather than writing same piece of code again and again.\
code smell: Duplicated code ( follow DRY)",,
"Feature envy. Bad code smell.",,
"too many if else conditions.",,
"spaces should be there around equal to.",,
"inappropriate naming of variables.",,
"This condition would not consider all possibilities of of donkey and person meeting, which results in improper functioning of the game. results in a bug.",,
"Bad code smell",,
"Some more conditions are required, this alone wont cover all conditions of death of player.",,
"Class naming doesnot follow PEP-8 standards.\
Class names should use CapWords convention.",,
"Score goes to negative values. \
Decrement of score hasn't been implemented properly.\
It should be checked that the score is >=0.",,
"Gravity should act in the same way on the player and the fireball. But the fireball falls straight down, whereas the player falls diagonally.",,
"Should make use of loops to do the same thing multiple times, instead of writing the same function again and again.\
\
Try to be more generalized in your approach.",,
"unused i variable",,
"Cyclomatic complexity , use of too many if statements.",,
"Missing docstring .",,
"Exactly one space is required after comma according to PEP-8 standards.",,
"Bad whitespace. According to PEP-8 standards, exactly one white space must be used in assignment of variables.",,
"Invalid variable naming: variable names must be of length >=3 according to PEP-8 standards.",,
"Invalid Method name.\
\
Use the function naming rules: lowercase with words separated by underscores as necessary to improve readability. \
\
Instead of using addSprite as your Method name, use add_sprite",,
"Many unused wild card imports have been made. They should be reduced.",,
"Bad whitespace . \
\
Exactly one whitespace should be used during assignment of variables.",,
"This line is too long. \
\
The length of a line should be less than 80 chars.",,
"Its an unnecessary pass statement.",,
"Indentation has been found of tabs instead of spaces.\
\
Proper indentation is of 4 white spaces.",,
"Trailing white spaces have been found. \
\
They should be avoided.",,
"Length of this line is too long.\
\
Length must be less than 80 characters but here its length is 145 characters instead.",,
"Indentation is bad. According to pep8 standard it should be 4 white spaces but found only 1",,
"Insteading of using '#######....\"" it would be better if you use function.",,
"Unused variable hit.",,
"Wild card entry should be avoided.",,
"Line is too long. Use less than 80 characters in one line.",,
"rather than using i,j its better if you use more explanatory variable names.",,
"There are unnecessary trailing white spaces. \
\
Try to avoid them.",,
"rather than using array use an explanatory variable name",,
"Exactly one whitespace is required in order to separate using commas.",,
"Bad indentation used.\
\
Expected no. of white-spaces : 8\
\
No. of white-spaces used : 12",,
"import should usually be on separeate line. it is voilating PRP8 standard",,
"Unnecessary parenthesis have been used after 'print' keyword.\
\
They are superfluous-parenthesis.",,
"It would be better if u indicated the values in the list in terms of display size and width and height.If you make any change in the size it will change accordingly.Other wise u want to change every value.",,
"Use of Bad whitespace can be seen clearly all over.\
\
Use exactly one whitespace to separate when using comma.",,
"there should not be space between [ and (",,
"Here first 2 parameters are same ( Images/log.png ).Insteadof storing the whole string u can store the size and coordinates in the list.And make changes accordingly in the below line.",,
"Use of unnecessary parenthesis after 'while'.\
\
The language is python and not C.",,
"Class-level smell - Class is old-style.",,
"Global variable 'temp' is undefined at the module level.",,
"Global variable 'temp' is undefined at the module level.",,
"Unused argument 'di'",,
"Invalid declaration of global variables 'c' and movement.\
\
Moreover, the length of variable name should be >=3. (according to PEP-8)",,
"Instead of storing whole thing as mentioned above you can store positions and there are two types of images here, may be extra line will be added if u store only positions.",,
"Exactly one space required around assignment ( Bad whitespace)",,
"Missing method level docstring.\
\
It should be present, as it increases the readability of code.",,
"Cyclomatic complexity.",,
"use spaces before and after '=' sign",,
"use spaces before and after '=' dign",,
"There is no 'get_position' member in the instance of person.\
\
Thats why this function doesn't work properly.",,
"Indentation with tabs instead of spaces (mixed-indentation)",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"import should be on sepeate lines.",,
"Exactly one space required around keyword argument assignment (Bad-whitespace)",,
"'foo' is a blacklisted name according to PEP-8 standards.\
\
This name should not be used.",,
"As above vars are initialized to same value u can write in a line like a=b=c....=0.",,
"each import should be written in different line",,
"Exactly one space required around assignment ( Bad whitespace )",,
"Exactly one space required after comma",,
"Invalid constant naming.\
\
Constants must be named in CAPITAL letters.",,
"use better variable names",,
"line too long",,
"Trailing whitespace",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"Found indentation with tabs instead of spaces (mixed-indentation)",,
"Bad whitespace.",,
"Exactly one space required after comma ( bad-whitespace )",,
"according to pep8 conventions use spaces after ','",,
"Length of line is too long. \
\
The length must be <=79 characters.",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"use a better variable name than img1",,
"use better variable names",,
"Snake case should be used while naming methods and functions, and not camel case. (for better readability)\
\
The name should have been check_queen.",,
"Exactly one space required around keyword argument assignment (Bad whitespace)",,
"Found trailing whitespace.\
\
Try to avoid it.",,
"it would be better it the walls and coins are randomised",,
"The variables in classes should be private for implementing encapsulation",,
"Trailing whitespace",,
"Docstring not specified",,
"At many places author has used unnecessary parenthesis after 'while' and 'print' keywords.\
\
It seems that the author is not clear about the basic syntax of python.",,
"## pep8 standards require at least 4 spaces of indentation and that much indentation is present",,
"#### according to pep 8 standards , class name must use cap letters",,
"Here instead of writing KEY_UP and KEY_DOWN in every if condition for each key.You could use if loops of each key in if loop of KEY_UP and KEY_DOWN\
\
i.e., if  ev.type == KEY_UP:\
            if (ev.key == K_RIGHT or ev.key == K_d):\
            if (ev.key == (K_LEFT or ev.key == K_a):\
........",,
"There are too few public methods used.\
0 out of 2.",,
"## according to pep8 standards max no of characters per line must be 79.\
- LIMIT EXCEEDED",,
"The variable passed 'myBoard' is unused.\
\
It should have not been passed.",,
"sys reimported",,
"Method docstring is missing.",,
"# in case there is a wall present on the left of player...  then movement towards left willnot move the player so pass",,
"gameOver has been redefined from outer scope.",,
"Docstring should be written for public class, modules, functions;",,
"Old-style class defined",,
"missing method-docstring",,
"never use single character for variable.",,
"Attribute '__prev' defined outside __init__. \
\
It is a bad practice.",,
"better maintain different files for each class",,
"LONG METHOD:\
\
Too many statements. \
\
50 are allowed.\
But 60 have been used.",,
"### as the size of game board is fixed, the loop iterates over the board not constant variables..",,
"according to pep8 standards use spaces before and after '=' sign",,
"### only 5 if statements used..... not so many....",,
"### y denotes the argument passed to set the y cordinate .. why invalid...?",,
"words separted by underscore are necessary to improve readibility for a function name.",,
"constant name should be in capital letter according to PEP8 style.",,
"### unused import sys and os",,
"The jump is not implemented properly.\
\
Sometimes while jumping, the player erases up the ladders.",,
"### unused imports",,
"avoid writing such long lines of code...",,
"missing doc-string",,
"according to pep 8  standards class name must use cap words..",,
"The collision with fireball and hasn't been implemented properly.\
\
Sometimes the player dies even when it didnot collide with the fireball and was merely close to it.",,
"the class contains only constant variables ... a seperate class isnot required",,
"The collision with fireball and hasn't been implemented properly.\
\
Sometimes the player dies even when it didnot collide with the fireball and was merely close to it.",,
"unused imports..",,
"Method could be a function (no-self-use)",,
"Attribute '__prev' defined outside __init__ (attribute-defined-outside-init)",,
"All over the code, found indentation with tabs instead of spaces.\
\
At many places whitespace has not been used properly",,
"__init__ method from base class 'Person' is not called (super-init-not-called)",,
"long lines of code.. pep8 standards violated",,
"At many places in the code import of multiple wild-cards was noticed. \
\
This increases the chances of name collisions.",,
"missing class docstring",,
"### use checkwall method to check presence of wall",,
"Using global for 'p', 'b', 'd' but no assignment is done (global-variable-not-assigned)",,
"Global variable 'd' undefined at the module level (global-variable-undefined)",,
"### repetition of code... functions jumpleft and jumpright use same code structures",,
"Constants haven't been named properly.\
\
The correct way is to use CAPITAL naming for constants.",,
"missing function docstring",,
"No value passed for parameter 'j' in function call (no-value-for-parameter)",,
"Invalid function name \""coinPosition\"".\
\
Should use snake_case instead of camelCase for method naming.\
\
The name should have been coin_position.",,
"PEP8:\
If the function has more than one word then the words should be separated by underscore to improve readability",,
"For naming methods snake_case should have been used.\
\
But camelCase has been  used instead.",,
"Unused variable 'd_x' (unused-variable)\
 Unused variable 'd_y' (unused-variable)",,
"Missing class docstring (missing-docstring)",,
"Bad code smell:\
Code eshould be encapsulated within atleast one class.",,
"Class has no __init__ method (no-init)",,
"Bad code smell:\
encapsulation of data missing, ie., no private variables declared.",,
"These blank spaces are unneccesary.",,
"variable name should not be a single character.",,
"commented code should be deleted",,
"word provided by underscore should be there to improve readibility",,
"unneccessary written comment #pass",,
"use variable instead of constant so that for changing position of coins it should be easy",,
"#Pep8\
##Unneccesary blank lines:",,
"#Separate class not required.\
## all the constants in the game should be in UPPER_CASE.",,
"#pep8\
-class name should start with a upper_case letter",,
"pep8\
#pep8\
-class name should start with a upper_case letter",,
"#pep8\
-Too many blank lines",,
"write docstring for better understanding of class",,
"#Code smell\
###Instead of declaring a separate function for movement of a player in every direction, a general function could have been declared and a direction parameter could have been passed.",,
"module docstring missing",,
"variable should not be a single character.",,
"length of variable should be >= 3",,
"Too few public methods (1/2) (too-few-public-methods)",,
"Redefining name 'j' from outer scope (line 4)",,
"Already imported time in line 9. No need for this line",,
"An attribute affected in don2 line 21 hide this method (method-hidden)",,
"time.sleep is too much",,
"After Player Died , the game does not quit. Command line prompt does not comes after game is over.",,
"Use Snake Case",,
"#### code smell\
-array fireballs not encapsulated with proper method.",,
"### code smell\
- use methods to access fireball by encapsulation \
- donot directly access fireball array",,
"indentation contains tabs. we must use 4 space indentation(PEP8 standards)",,
"the person class has been inherited but its behaviour or attributes are not used anywhere",,
"found indentation with tabs instead of spaces.",,
"Missing docstring.",,
"invalid variable name h.",,
"Unused import sys.",,
"very long line according to pep8 standards.",,
"Uncommunicative names, bad smell. Use better name for future reference.",,
"### according to pep8 standards there must at least one blank line before and after class defenition",,
"### Code smell : repitition of code\
- lines below use same code structure and is repeating \
- try using loop instead",,
"Do not use constants, set a variable and use the same at all places or else creates inconsistencies.",,
"code lags modularity. everything inside just a single file",,
"Spawn the donkey with respect to how the level is designed not static coordinates or else it may result it in falling down the top floor.",,
"This function should be bound to the fireball class and donkey class.",,
"inconsistency near stairs, randomly falls sometimes and sometime doesn't.",,
"- variable name must be atleast 3 characters long.",,
"while falling from stairs if it hits the wall on the side, it suddenly comes back up.",,
"Exactly one space required after comma",,
"Trailing whitespace (trailing-whitespace)",,
"Class names should normally use the CapWords convention. (pep-8)",,
"init method from base class 'Person' is not called (super-init-not-called)",,
"Modules that are designed for use via from M import * should use the __all__ mechanism to prevent exporting globals (pep-8)",,
"An attribute of a player. Avoid using global variables for an object attribute. May lead to errors.",,
"Exactly one space required around assignment",,
"Class has no __init__ method (no-init)",,
"Unused variable '__font' (unused-variable)",,
"Coins generated using random functions in extreme cases may give too few or too many. No consistency. try using limits.",,
"Attribute 'donkey_spawn' defined outside __init__ (attribute-defined-outside-init)",,
"Missing class docstring (missing-docstring)",,
"- remove the debugging comments after execution especially class or function defenition\
- it adds in contracting the code",,
"use sensible variable names for making a code more understinding",,
"- pygame.locals not used in the code.",,
"After second level again the same level is started with the previous score which may lead to infinite score.",,
"-  remove the debugging comments after execution especially class or function defenition\
-    it adds in contracting the code",,
"Dead code. Bad code smell.",,
"The positions of the ladders and jump positions are hard coded, this can be avoided as different game maps can have/must have different positions.",,
"CODE SMELL: Indecent Exposure:- Beware of classes that unnecessarily expose their internals. You should have a compelling reason for every item you make public. If you don't, hide it.",,
"the position of coins in coinslist is a multiple of 10, the player also moves as a multiple of 10. So the collision is done only when the player and coin perfectly intersect.",,
"CODE SMELL:  **Parallel Inheritance Hierarchies**\
Every time you make a subclass of one class, you must also make a subclass of another",,
"Line too long (97/80) (line-too-long)",,
"Instance of 'fireball' has no 'y_cord' member (**no-member**)",,
"All the variables are redeclared in every file. Bad smell and leads to inconsistencies.",,
"All the attribute functions of the object must be inside the class.",,
"Methods should be separated by new line(**pep-8**)",,
"Trailing whitespace (trailing-whitespace)",,
"Duplicated code for small changes. Bad smell.",,
"Dead code, thus a code smell.",,
"Redeclaration of variables in all files. Leads to inconsistencies.",,
"Redeclaration of variables in all files. Leads to inconsistencies.",,
"useless variables, can be removed. Code smell;",,
"Lazy Class code smell",,
"should be part of the destroy function of fireball class. No need create new class for the same. It is not an object.",,
"variable*",,
"Attribute '__string' defined outside __init__ (attribute-defined-outside-init)",,
"Manually made every wall in the game. Bad smell. Identifying and modifying any part of the wall will be quite difficult.",,
"### module os isnot used anywhere in the code",,
"An attribute of the player. Try avoiding global variables for class attributes.",,
"#### code smell\
**Refused Bequest** \
 you inherited from a class(person), but never used any of the inherited functionality.",,
"Missing module docstring (missing-docstring)",,
"You are stopping when either of the key is left but what if the person is holding down the other key? It should start moving in the opposite direction but in your case it just stops.",,
"Player jump should not stop when there is a key up event for space.",,
"the line is too long, has more than 80 characters.",,
"position is returned but not stored anywhere. Dead code. Bad smell.",,
"Many nested conditions. Bad smell.",,
"Redeclaration of variables. May cause inconsistencies.",,
"__Old-style__ class defined. (old-style-class)",,
"This class has nothing except some declared attributes. No use having player and donkey inherit from this. Dead code, bad code smell.",,
"Unused variable __'__val'__ (unused-variable)",,
"sorry its '__val'",,
"Attribute 'person_spawn' defined outside __init__ (**attribute-defined-outside-init**)",,
"Person class has nothing for the player to inherit from. Bad smell.",,
"comparison to True should be 'if cond is True:' or 'if cond:'",,
"Missing method docstring (**missing-docstring**) for all the methods",,
"The method is named get position but it only sets two attributes to a constant value. Doesn't make any sense. Bad smell.",,
"Too many nested conditions. Bad smell.",,
"Too many nested conditions. Bad smell.",,
"indentation contains tabs (Avoid as not recommended by pep8).",,
"it is not good practice to declare variables inside loops or recursive functions. \
It leads to unnecessary increase in stack size\
instead of declaring “global score” and then initialize “score=score+5”, you can write “score=5”",,
"too many blank lines, not recommended by pep8.",,
"Always use __self__  for the first argument to instance methods.(**pep-8**)",,
"Duplicated code and coins are manually generated. Bad smell. Highly difficult to locate and modify a specific coin.",,
"avoid hardcoding vars like X,Y, etc, future changes in map/code may be difficult to do so that code works properly.",,
"Do not use constants but variables or else leads to inconsistencies if you forget to change it in even one place.",,
"**Bug** : Fireball is not able to climb down the stairs.",,
"Duplicated code fireballs manually generated. Bad smell. Highly difficult to locate and modify any specific one.",,
"code doesnot follow pep8 standards. indentation contains mixed tabs and spaces . indentation should be multiple of 4 spaces",,
"**Bug** : unable to quit the game while playing. quitting is only working if all the lives of the player are gone.",,
"Player class is supposed to inherit from person. No inheritance.",,
"Duplicated code. Bad smell.",,
"Don't use global variables for the player use the local variables and the init function to assign default values. Or else all the instances of the class will use the same global variable and this will lead to errors.",,
"Don't use global variables for the player use the local variables and the init function to assign default values. Or else all the instances of the class will use the same global variable and this will lead to errors.",,
"use constant variables or macros rather than numerical values. it will make it easier for future use.",,
"Lot of duplicated code with small changes. Bad smell.",,
"The same variable *flag* has been used in two different classes *person* and *fireball* with same context, but can't interconnect their usage",,
"reinitialization of variable **flag**  in the same method",,
"You are stopping when either of the key is left but what if the person is holding down the other key? It should start moving in the opposite direction but in your case it just stops.",,
"Multiple while loops in the main game loop. Bad smell. Try using functions.",,
"Line too long (81/80) (line-too-long)",,
"Exactly one space required after comma",,
"### Dead Code\
Ruthlessly delete code that isn't being used.",,
"line too long >79 chars.",,
"**Duplicated code** (bad code smell)\
the update functions in both classes *fireball* and *player* perform the same job. Should have used a single function to execute funcitonality.",,
"**Wildcard import** pygame.locals (wildcard-import).  Wildcard imports should be avoided as they create naming confusions.",,
"pep8 not followed, > 79 characters.",,
"Missing module docstring (missing-docstring). A little bit of explanatory comments are required so that reader can connect with the code.",,
"Redefining name 'color' from outer scope (line 4) (redefined-outer-name)",,
"Unused argument 'rand' (unused-argument)",,
"**Too few public methods** (1/2) (too-few-public-methods)",,
"the board can be put into another file and then read, this way of including it in function increases the length, unnecessarily",,
"Unused argument *'num'* (unused-argument)",,
"Too many local variables (48/15) (too-many-locals)",,
"Too many branches (45/12) (too-many-branches)",,
"Too many branches (45/12) (too-many-branches)",,
"sorry , it is supposed to be 'statements' rather then branches",,
"####Dead code\
remove useless piece of code if not needed.",,
"variable names should be of length >=3 (**pep-8**)",,
"levels not implemented",,
"The code didn't use the  random module anywhere.",,
"Conditional Complexity, from line 53 to 86, thus a code smell.",,
"The *Board* class should be there in a separate module",,
"From line 53 to 86, there is lots of code that does almost the same thing.. but with tiny variations in data or behavior. this can be refactored. Thus, a code smell.",,
"declaring score each time does not increase the score.",,
"Too many conditions are checked in the blocks of code, this increases the conditional complexity.",,
"Violation of pep8, >79 lines of code.",,
">79 chars in line of code",,
"No classes implemented .",,
"Coins are getting displayed at the position of stairs",,
"should use a separate function to call all the coins related stuff",,
"such a frequently used variable has really long name",,
"lazy class - this class does very little . code smell.",,
"lazy class. code smell.",,
"Creates unnecessary wait when the game srarts",,
"the remedy[] array is used to share values between different classes....inheritance would have been better",,
"nested if-else statements are too many.",,
"Use an object.Too many parameters",,
"the movement of donkey is really arbitrary",,
"on the spot jump is not implemented",,
"The class game is too long",,
"Large classes, like long methods, are difficult to read, understand, and troubleshoot. The class contains too many responsibilities. It be restructured or broken into smaller classes",,
"useless white spaces",,
"The fall is not well animated...the player just disappears then reappears at a new position",,
"###Uncommunicative Name\
the variable name",,
"Wild card imports should be avoided.",,
"useless class, not at all being used anywhere",,
"Too many lines in one single function",,
"The variable named 'vada' is ambiguous., not clear about its functionality",,
"Bug : the player is unable to collect a coin if it happens to be at the place where stair ends",,
"The code is less modular. Should have used separate functions for checking the coin and updating the score.",,
"'xyz' is used as the name of a variable..very ambiguous",,
"method can be given a better name to suit its behavior",,
"doesn't really serves a purpose...just returns values of global varibles",,
"Name of  Variables must be atleast 3 characters long.",,
"this should have been used to initialize the event of spawning fireballs....rather than using an array in main class",,
"it is a good practice to write any piece of code within methods or functions. that also makes code readable and easy for future use.",,
"Class very long, can be restructured. Thus, a code smell.",,
"Ignore above comment, meant for another class, player",,
"Class very long, can be restructured. Thus, a code smell.",,
"the fireball re-spawns from initial position",,
"Not a single comment is present in the code.  Use comments to explain what you are trying to do.",,
"level should have been increased elsewhere..",,
"the variable 'z' should have been passed from here",,
"redundant code structure. every for loop uses similar code. could have used a function or fit all in 1 for loop . code smell.",,
"Exactly one space required around assignment\
        \
 bad-whitespace",,
"once a jump is done , the user should release direction keys then press them again to continue moving",,
"Found indentation with tabs instead of spaces",,
"position of player is passed using an array....something else should have been used",,
"for ladder sprite , you can store the positions in a list and iterate across it to add object to the sprite list. this makes the code small and neat . code smell.",,
"Again Bad whitespace.",,
"the animation shown at start of game is colorless....and in game suddenly color appears .",,
"Set variables to some values and use them in the whole code rather than using constants all over.",,
"High cyclomatic complexity for above block of code, this classifies as a code smell.",,
"unnecessary line. used the same line again in line 72.",,
"THIS IS A LIBRARY I HAVE USED TO HANDLE KEYBOARD EVENTS..",,
"Accoeding to pep8 standards space must be present between digits and \","poojitha.nandigam@research.iiit.ac.in",
"this is a library i have used...its not made by me...it just notifies me when a key is pressed",,
"all the methods try to serve almost the same purpose...hence in one class",,
"Again, lot of branches in the following block of code. So try to refactor as it is possible to do, there is high cyclomatic complexity is present. Thus a code smell is found.",,
"dont use wild card imports according to pep-8 standards.",,
"Every '=' operator has to be separated with SPACES , Bad white-space. [pep8 standards]",,
"### pep8 violation\
- too many blank lines",,
"the distribution of coins is awkward.",,
"The array could have been inherited",,
"the function ladder_maker() is there",,
"__Broken ladders absent __",,
"Use variables which are appropriate to the game for better understanding.",,
"@rahulnahata: used it in line 26",,
"BUG : You have to check collision with walls.player is going out of the layout.",,
"l1,l2,l3,l4 can be stored in 1 list. this leads to better readability and better time and space complexity",,
"instead of writing seperate conditions for key press based on x and y positions , you can write one set of event.key conditions and call a function in each which checks if the move is valid or not. that leads to better readability.",,
"wild card imports should be avoided.",,
"instead of calling pygame.draw.rect seperately each time, you can store the board coordinates in a list and use a for loop to traverse the list. this shortens the code and enhances readability.",,
"Bad code smell. Use separate functions instead of repeating the whole thing.",,
"this type of assigning values will take lot of time for debugging. can use for loops or randomisation.",,
"@pinkesh did not see the comment as did not refresh this page",,
"Old style class defined. no parens.",,
"bad code smell : repetition \
a nested loop could have been used",,
"random generation of stairs is nice",,
"line too long",,
"indentation with tabs",,
"one space is required after comma",,
"Player can go outside BOARDER in all direction and disappears from view.\
Player  can also Walk in the air",,
"Don't use global values for player. If multiple players exist then all will use same coordinates and all will overlap with others.It will lead to errors.",,
"By pressing the \""SPACE_BAR\"" key player moves down and goes outside until pressing up arrow",,
"moving up by using up arrow is possible only at ladder[both full ladder and half ladder.\
While moving down by using \""SPACE_BAR\"" key is possible at any place",,
"gameExit will never be True so game doesn't over at any time",,
"No need of printing lead_x and lead_y in the terminal",,
"Unnecessary of defining blue color",,
"doesn't enter into above if condition .",,
"As it is not used into any of the code",,
"Player moves very very slow .It takes long time for player to reach short distances",,
"speed is very high so its become very difficult to escape from fireball",,
"redundant lines",,
"fireballs should travel randomly",,
"one key press completes the entire movement",,
"jump is not good....unable to jump near stairs",,
"this is completely non essential....could have been done by loops",,
"too much repetation",,
"'O' (capital O) should have been used to designate fireballs instead of small ones",,
"bad indentation levels",,
"the small o and capital O makes it really ambigious",,
"importing modules which were not used",,
"no public or private variables",,
"no encapsulation",,
"an AND operator could have been used instead of 3 ifs",,
"makes confusion in above line .Modifying the name is better",,
"makes confusion in above line .Modifying the name is better",,
"bad code smell : repetition \
one function could have been used for forward/backward movement with parameters to control movement",,
"according to pep-8 you have to implement spaces in between like ( 255 , 0 , 0 )",,
"why are fireballs being generated in class donkey",,
"above line in the code contains more than 79 charecters",,
"why class donkey controls movement of fireballs",,
"Dead code.Commented code should be removed.",,
"Store the integers used  in above few lines into variables and then use them here and any other place required instead of inputting manually, because if you ever need to change it, it will be quite difficult to go too all the places and change the hard coded values",,
"Dead code.Commented code should be removed.",,
"Unnecessary to print lead_x and lead_y  in the terminal",,
"Unnessary blank lines in between.",,
"Don't use global values for player. If multiple players exist then all will use same coordinates and all will overlap with others.It will lead to errors.",,
"gameExit is true only when fireball touches the player .\
When player touches the donkey nothing happens.",,
"not displayed on the game with gameOver that press q to quit game",,
"doesn't mention which key to replay the game",,
"Unnecessary printing to the terminal.",,
"Only one fireball produced.",,
"No Scoreboard ,so no points",,
"If player touches the princess game doesn't over or game doesn't advances to the new level.just nothing happens during that collision",,
"ladder width and player width is same . so it is difficult to stop exactly at that region to climb ladder .",,
"Only 9 coins are there in the game with order of [2,3,2,0,2] starting from top row .that order represents 2 coins in the top row where donkey and the princess are there.and so on.",,
"No jumping facilty",,
"in coins generation first 2 represents the row which is below the row where donkey and the princess are present",,
"Dead code .too many comments in the game. comments must be removed from the code.",,
"Many lines in the code contains more than 79 charecters which is not acceptable according to the PEP-8 standards",,
"gap between levels is less and speed is very high which makes player very difficult to win",,
"there is no polymorphism in this code",,
"most of the code is in gameloop() but very less code is written  in the classes and its functions.\
and modularity is not there.",,
"there is no polymorphism in this code",,
"using sleep is not good",,
"imports should usually be on separate lines (**pep-8**)",,
"According to pep-8 standards there should be a space around '=' operator.",,
"###Dead Code\
(**bad code smell**) - lines of code that are no more required should be deleted.",,
"So many if/else statements.\
Try extracting them out into functions.",,
"If you click close button it is closing. That means it is entering into this if loop.",,
"Class names should normally use the CapWords convention. (**pep-8**)",,
"If you click close button in game display it will become True.",,
"Bad code smell:  **Uncommunicative Name**\
Name of the attribute should describe what exactly the variable is meant for",,
"Literals passed into initializations of levels/structure should be declared as constants",,
"line commented out",,
"###Duplicated code \
statements inside for loop are same , only differ in one of the indices of the nested list.",,
"###Long Parameter List\
*Bad code smell* - too many variables and methods declared in a single class.",,
"nicely implemented list comprehension.",,
"Module level import not at top of file.",,
"The list *pos* has already been defined, giving its explanation afterwards makes no sense.",,
"long line as per pep-8 there should be not more than 79 characters.",,
"Lack of encapsulation in the code. Documented interfaces are considered public (*pep-8)",,
"Multiple display of the same list. Should remove the unnecessary comments that make code more complicated.",,
"code should be bit explanatory. Should have used inline comments .",,
"Updating donkey in this class would be better instead of board.",,
"the size of board 820x820 is very big .the board's height you mentioned cannot be fully seen on screen.",,
"Don't hard code size of game display. In future you may have to change these values everywhere.",,
"No need to update every time . You can update everything at the end.And it may cause some problems also.",,
"Levels not implemented.",,
"Don't hard code size of game display. In future you may have to change these values everywhere.",,
"Class has no init method (no-init)",,
"Missing class docstring (missing-docstring)",,
"Use the meaningful variables or put comments for the further use.",,
"Code Smell:\
                   You need not to write the setting of game display lines of code in board.py code .",,
"Didn't implement donkey,fireballs etc. so no classes for those.",,
"Declaring this variables in every file.Bad code smell.It should better if u included all these variables in a file.",,
"Use better variable names. Then it is easy  to change them in future",,
"There should be space around '=' operator according to pep-8 standards.",,
"Ladders and floors are fixed in every game.",,
"If you press left arrow first and without releasing it press right arrow . Now player is moving towards right. If you release left arrow person movement is stopping. But it should continue moving towards right.",,
"Instead of writing these many times the same line.Using a function would be a better by storing position and size in lists",,
"speed is too less.fireballs are less.fireball moving is not clear.",,
"Should remove comments after debugging .",,
"No need to write all these because you are anyway writing them in main.py and importing this module.",,
"player died.but no.of lifes not decreasing",,
"only in some cases if player dies no.of lifes decreasing.",,
"there is no polymorphism used here.",,
"the methods of a class must define some behaviour of the object of the class. you can define the functions like collectcoins , checkWall in player class as they define behaviour of player alone.",,
"use better variable names for better readability",,
"confusing with names.use appropriate names",,
"it is a good practice to write any piece of code in functions or classes as it leads to better readability and reusability",,
"it is better to use constant variables or macros instead of numerical values for easy future use",,
"when u jump @ top of ladder it will fall down - functionality error",,
"Many same lines why can't u make it in a loop",,
"Invalid constant name \""white\"" (invalid-name) , \""black\","sahithi.rv@students.iiit.ac.in",
"Unnecessary lines '###### .. '",,
"Missing method docstring (missing-docstring)",,
"Always try to use variables instead of numbers.It would be better for understanding and for future modifications.",,
"invalid method name. use snake-case for method names",,
"No further levels in the game. Only one level is there.",,
"More global variables. It is difficult to implement modularity.",,
"Modularity is not implemented.",,
"No encapsulation.",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"Too many arguments (6/5) (too-many-arguments)",,
"Use of super on an old style class (super-on-old-class)",,
"Unused variable 'block_hit_list' .",,
"Lazy class / Freeloader: a class that does too little. code smell.",,
"Exactly one space required after comma (Bad-whitespace)",,
"Bad indentation. Found 1 spaces, expected 4 (bad-indentation)",,
"More than one statement on a single line (multiple-statements)",,
"Bad indentation. Found 4 spaces, expected 8 (bad-indentation)\
 Exactly one space required around assignment (bad-whitespace)",,
"No space allowed before bracket (bad-whitespace)",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"Trailing whitespace",,
"Missing module docstring (missing-docstring)",,
"Unable to import 'printer' (import-error)",,
"you may store each set of arguments passed to Wall in a list and traverse through the list to create an object and add it to sprite list. that reduces redundancy and code size.",,
"Missing method docstring (missing-docstring)",,
"Method could be a function (no-self-use)",,
"lazy class.code smell.",,
"Unused import Printer (unused-import)",,
"use constant variables or macros instead of numerical values for easy future use.",,
"Unused import sys (unused-import)",,
"Excessively short identifiers (method-level smell)",,
"Too many local variables (20/15) (too-many-locals)",,
"Excessively long identifiers (method-level smell)",,
"Using the global statement (global-statement)",,
"Invalid constant name \""key\"" (invalid-name)",,
"Missing function docstring (missing-docstring)",,
"Using global for 'a' but no assignment is done (global-variable-not-assigned)",,
"Using global for 'exit' but no assignment is done (global-variable-not-assigned)",,
"More than one statement on a single line (multiple-statements)",,
"Then you should have written if there is no wall on left then move,\
the if statement is not necessary,only else is sufficient",,
"Cyclomatic complexity: too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification.",,
"Then why different indentations on different lines ?",,
"Too many parameters ( method-level smell)",,
"function-level smells: function has grown too large.",,
"Too many branches (too-many-branches)\
Cyclomatic Complexity ( Class-level code smell)",,
"Too many statements",,
"Undefined variable 'position' (undefined-variable)",,
"Trailing whitespace",,
"Exactly one space required around assignment (Bad whitespace)",,
"Bad indentation. Found 16 spaces, expected 12 (bad-indentation)",,
"Exactly one space required after comma ( bad whitespace)",,
"Method could be a function (no-self-use)",,
"Unused argument 'score' (unused-argument)\
(method-level smell; too many parameters)",,
"Unused variable 'p' (unused-variable)",,
"Unused Variable",,
"More than one statement on a single line (multiple-statements)",,
"Invalid variable name \""p\"" (invalid-name)\
excessively short identifier (method-level code smell)",,
"Missing method docstring (missing-docstring)",,
"Old-style class defined. (old-style-class",,
"Missing module docstring",,
"Trailing whitespace",,
"Bad whitespace --- assignment operator must be surrounded by a single space",,
"Too few public methods (1/2) (too-few-public-methods)",,
"Method could be a function (no-self-use)",,
"Unused argument 'f' (unused-argument)",,
"Too many arguments (9/5) (too-many-arguments)\
method-level code smell",,
"Old-style class defined. (old-style-class)",,
"Bad indentation. Found 6 spaces, expected 8 (bad-indentation)",,
"Exactly one space required after comma ( Bad whitespae)",,
"Trailing whitespace",,
"Too few public methods (1/2) (too-few-public-methods)",,
"Method could be a function (no-self-use)",,
"Too many arguments (6/5) (too-many-arguments) \
Method level code smell",,
"missing method docstring",,
"Old-style class defined. (old-style-class)",,
"Missing class docstring",,
"Too few public methods (1/2) (too-few-public-methods)",,
"missing docstring",,
"Old-style class defined. (old-style-class)",,
"bad indentation",,
"Cyclomatic Complexity ( code smell )",,
"Jump function is not implemented properly at the ends of each stair (BUG)",,
"##BUG##\
On pressing quit, this print statement goes berserk and prints many blank lines before quitting",,
"##BUG##\
stray print statement",,
"Stray print statement",,
"Not",,
"Causing random lines to be printed",,
"##BUG##\
In the entire function there is no proper handler for jump if the player is on a ladder. Because of this when the player jumps on a ladder, he can keep jumpint *at the H* to make it disappear. Thus by jumping repeatedly a the ladder, the ladder disappears.",,
"Mixed Indentation:\
        Use multiple of 4 spaces  instead of tabs.",,
"The class has no init method .",,
"The code didn't use the os module .",,
"line too long According to pep8 standards, It shouldnot exceed 79 characters.",,
"No init in the class.",,
"person instance has no 'rect' member.",,
"instead of giving values directly you can use variables.",,
"The positions of the board is hard coded",,
"l1 - l8  can be stored in just one list",,
"Exactly one space is required after comma",,
"missing docstring class board",,
"Indentation is not same everywhere it should be of 8 white spaces but in this code there are less than 8",,
"player does not start from the bottom left and he starts from level 2(2nd floor) and when he falls to the first floor he cannot get back to the second",,
"some coins are not collected when the player crosses it",,
"No donkey and no princess. Jump and fireballs not implemented",,
"No classes. so no use of inheritance. Board is coded by giving values to the variables",,
"Game does not quit when we press 'q'",,
"Player is able to climb broken ladder",,
"while player is on the ladder he can only move upwards",,
"Player can also move inside the floors. princess and donkey not implemented",,
"Jump function is also not implemented properly(player moves out of the board). No coins or fireballs",,
"Missing docstring",,
"There are unused imports",,
"required functionality of donkey kong is not implemented\
movement on ladders is not correct.\
player do not die when he touches the fire ball.\
fireballs and coins are similiar in color. \
only one fire ball.\
coins are of different sizes\
jump is not implemented",,
"Many instances of bad indentation and incorrect white spaces have been found",,
"no display of score",,
"many unused wild card imports, missing docstring, line-too-long cases found",,
"###Data Clumps\
Consider rolling the related data up into a larger class.",,
"###Oddball Solution\
Another piece of code has the same funcitonality.\
No need of making a separate function to remove the coins. Could have done it when the player takes a coin.",,
"###Indecent Exposure\
variables belonging to a method/class should not be public ( unless required)",,
"code lacks encapsulation",,
"unnecessary brackets",,
"###DRY **(bad code smell)**",,
"These aren't parameters. These are attributes.",,
"### duplicated code\
DRY",,
"Line too long according to PEP-8",,
"**Parallel Inheritance Hierarchies**\
 Every time you make a subclass of one class, you must also make a subclass of another.(bad code smell)",,
"Names of images are uncommunicative.",,
"Uncommunicative file names.",,
"Too many global variables.",,
"Very large function. Makes it hard to troubleshoot. Indicates a bad code smell.",,
"Delete the commented out code -- bad code smell.",,
"Line too complex, list can be defined earlier and used here.",,
"Delete commented code",,
"Use variables for representing constants.",,
"Uncommunicative variable names.",,
"Person class has generatecoins function, it doesn't make sense.",,
"This function doesn't make sense in Person class.",,
"Class doesn't have getters and setters.",,
"Old style definition of class.Missing parens.",,
"could use for loops or randomisation.",,
"Doing like this will take long time and space.",,
"NameError: name 'lead_' is not defined in the above line",,
"Dead code . comments must be removed from the code.",,
"letters like 'l'  should not be used in the code . [PEP-8 standards]",,
"Don't use global values for player. If multiple players exist then all will use same coordinates and all will overlap with others.It will lead to errors.",,
"Store the display width and height in variables and then use them here and any other place required instead of inputting manually, because if you ever need to change it, it will be quite difficult to go too all the places and change the hard coded values",,
"use width and height inorder to get  ladders and boarders",,
"This is the reson why your game is closing when it touches the boarder",,
"Programming standard violation\
\
avoid trailing whitespaces",,
"edit: using print and comma",,
"Blank lines.empty lines must be removed from the code",,
"Programming standard violation \
\
Avoid trailing whitespaces",,
"Old style definition of class",,
"unnecessary Blank lines",,
"Programming Standard violation :  Exactly one space required around assignment",,
"python specific problem :  Indentation is with tabs instead of spaces",,
"Bad White space \
\
only one white is required after comma",,
"Unnecessary parens after 'while' (superfluous-parens)\
\
mixed indentation",,
"Programming standard violation.\
\
no space allowed after bracket",,
"unused import",,
"Programming standard violation : wildcard imports should not be done",,
"docstring is missing",,
"Too many if elif conditions. Bad code smell.",,
"invalid variable names 'fd' and 'ch'.\
\
Does not fit the naming convention.",,
"docstring is missing",,
"no need of writing else pass for every if condition.",,
"invalid variable names which does not fit the naming conventions are used",,
"unused module random.",,
"the variable 'j' is declared but was never used",,
"Line has 146 characters, which is too long. Should be within 79 characters.",,
"Line has too many characters. Should be less than or equal to 79 characters.",,
"too many statements (80/50)  ( bad code smell)",,
"game setup, game object, myboard are not used in this method.",,
"BUG:\
The generate_floors function is not foolproof. It uses some random numbers inside it. It doesn't handle all corner cases, so sometimes a particular combination of these random numbers get generated which results in *pygame.error: Invalid resolution for Surface* and the game crashes.",,
"mixed indentation",,
"module docstring is missing",,
"old style class definition used",,
"unused arguments myboard,gamesetup and gameobject.",,
"unused arguments myboard,gamesetup and gameobject.",,
"method docstring is missing",,
"method docstring is missing",,
"Function not in a class. Assignment specification not met.",,
"no need of this line.",,
"Function not in a class.",,
"PEP8 : Newline should be present after function ends.",,
"programming standard violation \
trailing whitespace must be avoided",,
"Codesmell : Long method.\
Function has grown too large.",,
"Variables should be named  appropriately for better readability.",,
"PEP8 : A single import should be on a line.",,
"docstrings for methods are missing at many places",,
"Old style class definition is used",,
"too few public methods (1/2)",,
"pointless string statement",,
"Codesmell : Duplicated Code.\
Similar functions exist in Fireball.py\
These could have been inherited.",,
"number of arguments are different from overridden 'move' method( python specific problem)",,
"Duplicated code. instead of using similar code in both moveA and moveD, u could pass another argument in method move and write in one method.",,
"no need of this line.",,
"line is too long",,
"no docstring for his method.",,
"wrong continued indentation",,
"No space allowed before bracket",,
"only one space required after comma",,
"no need of passing all these arguments.",,
"programming standard violation: trailing whitespaces",,
"only one space required around comparision\
\
bad whitespace",,
"module docstring is missing",,
"old style of defining a class.",,
"Class has no significance. There is no donkey in game.",,
"unused arguments.",,
"no need of pass.",,
"unnecessary lines.",,
"This function will work even if there is no floor under him i.e if he is in air, he can still move down.",,
"wildcard imports must not be done",,
"so many similar methods, instead of them you could pass one argument for char and use these x,t,b,y,m,b,n,v characters.",,
"Duplicated code. Bad code smell",,
"too many arguments (6/5)  in the function",,
"Here u need to check whether there is a stair or floor, only this condition wouldnt be enough.",,
"He can go down only if there is a 'H' or 'X' under him. so ur player can randomly move down in the air also",,
"missing docstring.",,
"unused arguments.",,
"no need of this line.",,
"duplicated code. The code is almost same except for the key and fll values. you could use a separate function and use it instead of repeating this whole thing.",,
"dont import multiple modules in single line.",,
"do not import multiple modules in single line acc to pep-8 standards.",,
"no need for gameover to be equal  false as it is defined only two times .one for declaration  and other one is here.NO NEED for the variable ' gameover '",,
"gameexit never be equal to true . the exit in the game is due to the fact that it touches the corners of the board .",,
"This loop never ends so game exit never equals to True. it ends only due the NameError.",,
"both player , ladder  and  floors ore of same color black .it is difficult to recognize if player is completely inside ladder",,
"Player doesn,t reaches princess . The maximum reach of the player[    While doesn't considering the bug that player goes up and down beyond its reach level by instantaneously clicking multiple times up or down button .even it can disappear from the board    ] is the floor in which the princess is there.Player overlaps with the floor",,
"No multiple functionalities implimented",,
"Invalid constant name \""gameOver\"" (invalid-name)",,
"Global variable 'gameOver' undefined at the module level (global-variable-undefined)",,
"Invalid constant name \""won\"" (invalid-name)",,
"Global variable 'won' undefined at the module level (global-variable-undefined)",,
"Missing function docstring (missing-docstring)",,
"Unused argument 'inp' (unused-argument)",,
"Missing method docstring (missing-docstring)",,
"bad code smell.",,
"Old-style class defined. (old-style-class)",,
"large class. Class-level code smell",,
"Redefining name 'gameOver' from outer scope (line 457) (redefined-outer-name)",,
"Redefining name 'gameOver' from outer scope (line 457) (redefined-outer-name)",,
"__init__ method from base class 'person' is not called (super-init-not-called)",,
"Attribute 'prev' defined outside __init__ (attribute-defined-outside-init)",,
"Attribute 'prevmove' defined outside __init__ (attribute-defined-outside-init)",,
"Too many branches (31/12) \
 Too many statements (147/50) \
Cyclomatic complexity. bad code smell",,
"Unused variable",,
"Redefining name 'won' from outer scope (line 444)",,
"Invalid variable name \""w\"" (invalid-name)",,
"excessively short identifier. method-level code smell",,
"missing method docstring",,
"old-style class defined",,
"Wildcard import",,
"Found indentation with tabs instead of spaces (mixed-indentation)",,
"exactly one space require after comma. bad whitespace",,
"mixed indentation",,
"missing class docstring",,
"large class. class level code smell",,
"too many for loops. cyclomatic complexity. bad code smell.",,
"old-style class",,
"unused variables i and j",,
"invalid names.\
Excessively short identifiers. method-level code smell.",,
"mixed indentation",,
"bad whitespace",,
"mixed indentation",,
"bad whitespace",,
"Bad spacing",,
"Levels should go from 1 to infinity.",,
"Player cannot choose beginning level.",,
"According to pep-8 conventions class names should normally use the CapWords.",,
"Unnecessary pass here",,
"Bad spacing",,
"No need to pass in else",,
"This is not old class as '()' are there after class name",,
"PEP 8 : No docstring for above method.",,
"Too many statements (80/50) (too-many-statements)",,
"Too many branches (16/12) (too-many-branches)",,
"Unused variable 'j' (unused-variable)",,
"variable name should be explanatory. Excessively short identifiers. \
method-level code smell",,
"Too many local variables (21/15) (too-many-locals)",,
"missing docstring",,
"#### Game never enters this *if* condition.",,
"String statement has no effect (pointless-string-statement)",,
"wildcard import",,
"Ignore the previous comment.",,
"mixed indentation",,
"trailing whitespace",,
"Exactly one space required around comparison\
bad whitespace",,
"Unnecessary parens after 'if' keyword (superfluous-parens)",,
"Unnecessary parens after 'elif' keyword (superfluous-parens)",,
"Declaring all *k* variables in an array and accessing through the array index will make the code more readable and also make initializing and resetting these values easier.",,
"Due to the way the hardcoding is done, no coins will be collected if the players is in the jump process and passes through a coin. These *if* conditions will only work if the player is at the ground level and passes through the coin.",,
"PEP 8 : Blank line should not contain white spaces.",,
"PEP 8 : Unexpected indent.",,
"PEP 8 : Blank line at the end of the file.",,
"Expected two blank lines but found 1 (pep 8)",,
"multiple imports on one line (pep-8)",,
"Blank line at the end of the file.(pep-8)",,
"Missing whitespaces after comma (pep-8)",,
"too many blank lines",,
"line too long (81 > 79 characters). (pep-8)",,
"blank lines should be avoided at the end of the file (pep-8)",,
"Only one space is required after comma.",,
"indentation should be with spaces instead of tabs. (python specific problem )",,
"programming standard violation \
\
bad whitespace",,
"trailing whitespaces (programming standaed violation).",,
"Wrong hanging Indentation.",,
"Exactly one space required after comma.",,
"Line is too long.",,
"The board is hard coded.\
\
Instead it can be written in simple functions to minimize time and memory usage.",,
"unnecessary parens after 'while' (superfluous-parens)",,
"Documentation string missing, it should be use for explaing class.",,
"Module docstring is missing.",,
"docstring  for class is missing.",,
"old style class defined.",,
"invalid variable names.Does not fit  naming convention.",,
"docstrings for methods are missing.",,
"too many branches (16/12).",,
"expected 2 blank lines (pep-8 standard )",,
"continuation line is missing indentation.",,
"line is too long (169 > 79 characters ).",,
"unnecessary blank lines.",,
"comparison to True should be 'if cond is True:' or 'if cond:' (pep-8 standard)",,
"missing whitespace around '%' operator. (pep-8)",,
"too many imports in one line",,
"indentation should be with spaces instead of tabs (mixed indentation)",,
"only one space is required around assignment.\
bad whitespace.",,
"Module docstring is missing.",,
"wildcard imports should be avoided.",,
"Variables should be named appropriately for better readability.",,
"expected 2 blank lines (pep8 standard).",,
"mixed indentation.",,
"exactly one space required after comparison. (programming standard violation).",,
"unnecessary parens after 'if'",,
"trailing whitespace.",,
"line is too long (147/100 ).",,
"module docstring missing.",,
"variables should be properly named. (name of the variable should imply it's purpose).",,
"indentation should be with spaces instead of tabs (python specific problem).",,
"unnecessary semicolon used.",,
"comma before space should be avoided.",,
"bad indentation",,
"only one space required around assignment.",,
"unnecessary space allowed for brackets",,
"module docstring is missing",,
"module docstring is missing",,
"refactor : this method could be a function (no-self-use).",,
"avoid blank line at the end of the file (pep8 standard).",,
"line is too long.(81/79 characters)",,
"2 blank lines expected (pep-8)",,
"Bad smell in the lines below, hard coded values make it very difficult to alter behavior in the future.",,
"missing white space around operator (pep-8)",,
"Pep 8 standards not followed, no of chars in line > 79.",,
"What is the need to differentiate here, there are just multiple if statements.",,
"invalid function names and module names .(does not fir naming convention).",,
"docstrings missing for functions",,
"indentation contains tabs.",,
"avoid trailing whitespaces",,
"bad indentation",,
"only one space required around comparison",,
"module docstring is missing",,
"refactor : too few public methods(0/2)",,
"redefining 'playerPosition' and 'myBoard' from outerscope",,
"this method could be a function (no self use)",,
"catching too general exception.",,
"access to a protected member of a client class.",,
"unused sys and os modules.",,
"too many blank lines",,
"avoid blank line at the end of the file (pep8).",,
"too few public arguments.",,
"unused modules tty and sys",,
"old style class defined",,
"avoid multiple statements in one line (pep8 standards).",,
"Code smell: Large number of lines perform same function with very little or no difference in behavior, can be put inside a single function that is called multiple times using a loop, this enhances readability.",,
"Unnecessary parens after 'while' keyword (superfluous-parens)",,
"mixed indentation",,
"Exactly one space required around assignment",,
"PEP 8 : Wrong indentation. Indentation should be done here so as to align with the opening delimiter.",,
"unused wildcard import",,
"invalid argument name - a,l",,
"missing method docstring",,
"method has no argument",,
"Access to  protected member __x, __y of a client class (protected-access)",,
"undefined variable self",,
"cyclomatic complexity",,
"old-style class",,
"trailing whitespace",,
"exactly one space require after comma. bad whitespace",,
"mixed indentation",,
"Unnecessary parens after 'elif' (superfluous-parens)",,
"excessively short variables. bad code smell",,
"unused wildcard import",,
"method has too many return statements. ( has 7, 6 allowed)",,
"excessive return of data. method-level code smell",,
"excessively shot arguments. bad code smell",,
"unused arguments x and y",,
"Method could be a function (no-self-use)",,
"excessively short arguments. method level code smell",,
"missing module docstring",,
"cyclomatic complezity. bad code smell",,
"mixed indentation",,
"bad whitespace",,
"superfluoud parens",,
"unnecessary parens after if",,
"cyclomatic complexity. bad code smell",,
"unnecessary parens after if",,
"unnecessary parens after elif",,
"superfluous parens",,
"mixed indentation",,
"Blank line at end of file, violation of pep8 standards.",,
"Donkey not moving, functionality mising.",,
"Good use of global variables wherever required.  \
They make code more readable and avoid hardcoding of values.",,
"indentation should be with spaces instead of spaces (python specific problem).",,
"There must be at least  2 spaces before inline comment, violaton of pep8",,
"too many blank lines, can be reduced as pep8 is violated",,
"only one space is required after comma.",,
"avoid trailing whitespaces",,
"docstring for module is missing",,
"Used a lot of wildcard imports, most of them remain unused (unused-wildcard-import)",,
"invalid variable names.(does not fit naming convention).",,
"docstring for class is missing",,
"statement ends with a semicolon, not part of pep8 standards",,
"* includes all the methods  of which many might not be used in the code",,
"Access to a protected member _life of a client class (protected-access).",,
"2 blank lines are expected (pep-8).",,
"avoid blank line at the end the file (pep-8).",,
"Too many statements (70/50) (too-many-statements).  \
The logic could have been split across multiple methods of classes.",,
"Attribute 'coin_sprites' defined outside __init__ (attribute-defined-outside-init).  \
Not recommended.",,
"exactly one space is required after comma.",,
"mixed indentation.",,
"unnecessary parens after 'if' (superfluous parens)",,
"line is too long (153/100).",,
"avoid trailing whitespaces.",,
"variables should be named appropriately for better readability",,
"too many arguments(6/5)",,
"Access to member 'player' before its definition line 259.  \
Bad code logic. Use of try, catch as if/else is not recommended.  \
Bad code practice.",,
"redefining names i and j from outer scope",,
"docstring for method is missing.",,
"##Code Smell : Cyclomatic Complexity  \
This method contains too many branches or loops; this may indicate a function needs to be broken up into smaller functions, or that it has potential for simplification.",,
"unused arguments 'x','y','plaflag' and 'donflag'.",,
"A lot of processing is required to draw graphics, so instead of rendering all of them at each frame, render them only when they change. This improves performance and code logic too.",,
"'i' is unused",,
"This section of code has potential for simplification. Hardcoding of values not recommended.",,
"This section of code has potential for simplification and code improvement.",,
"sleep imported from time is unused.",,
"module docstring is not there.",,
"* imports all the methods which might not be necessary in the code",,
"wild card imports should be avoided.",,
"method docstring is missing",,
"mixed indentation(pep-8).",,
"global-variable-not-assigned",,
"avoid wild card imports.",,
"bad-indentation",,
"#### There is no level implementation. After reaching the queen, there is only option to start a new game, with all lives reset.",,
"indentation should be a multiple of four.",,
"whitespace before : is not required (pep-8).",,
"1 blank line expected (pep-8).",,
"avoid whitespace before ')' (pep-8)",,
"avoid multiple spaces after keyword.(pep-8).",,
"PEP 8 : Avoid spaces around operators in brackets.",,
"Constants are usually defined on a module level and written in all capital letters with underscores separating words.  \
Examples include MAX_OVERFLOW and TOTAL .",,
"very big method.",,
"too many if elif conditions , bad code smell.",,
"Separate the line into multiple line statements, or use '' to make code more visible.  \
In this way it is more readable and still pertains your logic.",,
"Class names should normally use the CapWords convention. PEP8 standards.",,
"Function names should be lowercase, with words separated by underscores as necessary to improve readability.",,
"Duplicated code. Instead of writing similar code under these conditions, u could pass arguments and decrease the size of your code.",,
"method names should convey the logic of what it does. Methods must be self explanatory of what do they do.   \
This ensures the code readability.",,
"indentation should be with whitespaces instead of tabs.",,
"exactly one space required around assignment",,
"Dirty and unreadable  code. Should have local variables make the code more readable. Also there should be comments to show which statement corresponds to ladders between which 2 levels.",,
"avoid space before brackets '(' (programming standard violation)",,
"module docstring is missing.",,
"Codesmell : Too many parameters in function.",,
"### Statements from Line:245 to Line:248 don't belong to any class.  \
Either they must be a part of method or be initialised globally. And if they are global(as it seems) then they must be declared on top not between class declarations.",,
"If player moves too fast infront of the donkey then the game doesn't over . it continues  unless speed of the player doesn't exceed the speed of the donkey.",,
"avoid blank lines at the end of file (pep-8 standard).",,
"Class names should normally use the CapWords convention.",,
"Only one fireball is produced and it is stationary at the floor in which donkey moves.",,
"PEP 8 : Class name has all capital characters. Class names should normally use the CapWords convention.",,
"###Constants are usually defined on a module level and written in all capital letters with underscores separating words.  \
Examples include MAX_OVERFLOW and TOTAL .",,
"Max no.of characters in a line must be at most 79 (PEP-8 standards)",,
"##Contrived complexity:  \
Forced usage of overly complicated design patterns where simpler design would suffice. Try to group code via logic to make it more readable.",,
"PEP 8 : Blank line at the end of file.",,
"Max no.of characters in a line must be at most 79 (PEP-8 standards)",,
"variable names  appropriate to the game should be used for better understanding.",,
"This section of code could have been written within a single loop.  \
###Code requires refactoring.",,
"no fireballs in this game",,
"no lifes also",,
"it is difficult to climb ladder due to the movement of player by one click is near to width of ladder",,
"should use better variable names",,
"###Feature envy:  \
A class that uses methods of another class excessively.",,
"docstring missing.",,
"*getx* and *gety* functions have been used before and they just return the current position. These functions could have been inherited from a superclass.",,
"PEP 8 : Class name is all capital characters.",,
"BUG-when the person lands on any stair just above the floor, he replaces the stair and after he leaves, that wont  appear again.",,
"there are no fireballs",,
"ok, may be I have missed it by mistake.",,
"agreed",,
"as the order of statements is different I implemented in two parts suggest me a better way",,
"no need of this else statement",,
"duplicated code. could use a separate function. bad code smell.",,
"getposition() function in Player class won't return any value.It just changes the position of the player.",,
"sorry Attributes :p",,
"use appropriate variables for better understanding.",,
"randomisation or usage of for loops would be better than hard coding. Takes lot of time to debug.",,
"Only two levels.",,
"No modularity all written in one file.",,
"Lazy class . Does too little compared to its subclasses. Bad code smell.",,
"Instead of just passing, and writing 3 times almost same code in class pl,fireball and donkey ,you could inherit.",,
"Cyclomatic complexity.",,
"Bad code smell.",,
"lead_x and lead_y already declared above the mainloop.",,
"Cyclomatic complexity. Bad code smell.",,
"No need of parens after if.",,
"no need of this else.",,
"Wildcard imports may result in greater chances of name-collisions.",,
"Wildcard imports may result in greater chances of name-collisions.",,
"Instead of writing these many.It is better to use function and lists and use comments.",,
"Codesmell : Too many parameters.",,
"Instead of using values use variables which defines it for further reference.",,
"It is better to define x,y with some meaningful variables.",,
"Instead of putting above lines in comment it is better to remove.---- Unnecessary Comments",,
"Code Smell : the following lines provide the same functionality with no difference. Also, the large number of lines are unnecessary as the same thing can be done in 2 lines using a loop and putting values collect1, collect2 etc inside a list.",,
"Unnecessary Print statement.",,
"variable can be a given more communicative game.",,
"Missing Doc-string",,
"Dead code --- commented code must be removed",,
"Use snake case to name a method",,
"Invalid variables --- variable length must be >= 3",,
"Coins are placed randomly, they are not on the floor, some of them are floating in the air.",,
"When a coin is on the ladder it is impossible to collect it. Bug.",,
"When the player moves, two \""P\"" 's are show. Bug.",,
"Collision not working properly, when the person is going towards the fire ball at full speed he just passes through the fireball without dying. Bug.",,
"Game exits after level one and gives Attribute error. Bug.",,
"Distance between two levels is less than 3 rows. Impossible to jump above fireball (unless you keep holding space for which he floats in air for a few seconds). Bug.",,
"Sometimes the player gets a score for 5 magically even though the game just started and he didn't do anything. Bug.",,
"p : play again does not work. Bug.",,
"It dosen't work when the player dies. But works only when the level is over.",,
"Collision detection while equating co-ordinates does not work properly. When the player is coming from the left, even though he intersects the coin, it does not get collected. Bug.",,
"large class - a class that has grown too large (code smell).",,
"When the player is jumping across, even though he touches the coin, it is not collected. Bug.",,
"Player does not fall off floor edge. Bug.",,
"Contrived complexity: forced usage of complicated design patterns where simpler design would suffice.",,
"Method-Level code smell.Excessively short identifiers: the name of a variable should reflect its function unless the function is obvious.",,
"lives should have been a member of Player class",,
"names of variables should be more meaningful",,
"The names of variables are ambigious",,
"what is s ? ... variable name should be at least 3 letters",,
"meaning of method should be clear....what is 'itb' ?",,
"why not use inheritence",,
"method name should be more clear",,
"if such names for methods are used , then at least document it",,
"for such complex operations , some comment must be there to explain",,
"redundant statement",,
"bad code smell : repetation",,
"bad code smell : repetition of code",,
"no doc string",,
"could have used a function instead of repeating so many lines",,
"use explanatory variable names",,
":)",,
"lazy class",,
"Cyclomatic complexity: too many branches or loops",,
"Large Class",,
"No Broken stairs",,
"according to PEP8 standards use spaces after ','",,
"Modularity not implemented.",,
"Print \""1'\"" is not required",,
"above all of them are bugs",,
"Player can climb up or down respectively only when he is at the tip of the ladder either on the both sides",,
"When the player continuously moving in left direction and if we press opposite direction it moves until we first button [left direction ] if we remove our  hand or once the key is up player stops",,
"According to pep8,assignment operator (=) is to be separated with spaces.",,
"Mixed Indentation : Should be indented with multiple of 4 spaces",,
"Too many unnecessary comments .",,
"Too many lines in a single function.",,
"getPosition is not used . The position is found out using local variables in the gameloop function.",,
"When the player continuously moving in any direction and if we press up or down button then the  player stops",,
"length of any line shouldn't exceed 79 characters.",,
"Variable names should be atleast 3 characters.",,
"Though the life is reduced by 1 it is not used anywhere.",,
"Break down the function into smaller pieces by making different functions",,
"duplicate cod eis a bad code smell",,
"Inheritance , polymorphism and modularity not implemented",,
"use function rather than repeating the similar lines",,
"such as multi player ,  multi level ,",,
"jump function is notworking properly.",,
"such as fireballs",,
"Set variables to values  instead of using constants all over the code.",,
"Max no.of characters in line is 79 according to PEP-8",,
"Max no.of characters in line is 79 according to PEP-8",,
"dead code .jump is not implemented wher e ladder is not used but i wrote some lines for that to be implemented but of no use.",,
"Documentation string missing everywhere.\
For more info read ##PEP 257##, which describes good docstring conventions.",,
"Documentation string missing everywhere.",,
"But we can take them by jumping up.",,
"You can jump and take it.",,
"if the player touches the wall of the board .game will exist",,
"pygame.quit() not pyame.quit().pyame is not defined.",,
"Large Class",,
"fireball movement is constant",,
"Lazy Class",,
"player touches the donkey game doesn't ends .",,
"Functionality.When player moves too fast and hit the Fireball then there is no effect on his life",,
"When the player continuously moving in left direction and if we press opposite direction it moves until we first button [left direction ] if we remove our hand or once the key is up player stops",,
"Large Class",,
"long parameter list i.e, using so many arguments in a method.",,
"Redundant code structure, should have used list of walls and then added to the wall_list using for loop",,
"When the player continuously moving in left direction and if we press opposite direction it moves until we first button [left direction ] if we remove our hand or once the key is up player stops",,
"no classes implemented",,
"no coins so no scoreboard",,
"no fireballs and no lifes",,
"No multiple functionalities implemented such as multi player , multi level , fireballs , coins , jump , \
modulation , polymorphism  life checking , Score Board and game doesn't end unless we click X button at the top.",,
"there is no  difficulty to reach princess.",,
"When player at the any type of ladder . then while moving up if we press down it doesn't work and if we press side direction then player moves in the straight line making some angle which doesnt equal with to 90 degrees with hte floor",,
"meaning of method should be clear frim name, what is 'uub'",,
"meaning of method should be clear from name, what is 'uub'",,
"move Left  and move Right functions are written for both player and donkey.",,
"Tried very large method to implement fireball but it is failed",,
"some functions are used only to  draw player , princess  and donkey",,
"In many lines of code there are many switch statements .bad code smell",,
"### code smell\
- too many arguments passed to function",,
"Too many global variables.",,
"we can't play the game.because height of the board is greate than height of the screen",,
"fireball is moving only when player is moving.",,
"if player is fully on ladder then only player can  climb",,
"##Lazy class / Freeloader:  \
A class that does too little.",,
"###Duplicated code  \
Identical or very similar code exists in more than one location.",,
"##Excessively short identifiers:  \
The name of a variable should reflect its function unless the function is obvious.",,
"Constants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL .",,
"###Contrived complexity:  \
Forced usage of overly complicated design patterns where simpler design would suffice.",,
"Duplicated code: identical or very similar code exists in more than one location.",,
"Already mentioned..",,
"##Lazy class / Freeloader:  \
A class that does too little.",,
"Dead Code - (bad code smell) - lines of code that are no more required should be deleted.",,
"Duplicated code: identical or very similar code exists in more than one location.\
Code can be clubbed to get a single method that can do the required job.",,
"##Lazy Method:  \
A method that does too little and is actually of no use. It can be used inline with the logical code.",,
"A method that does too little and is actually of no use. It can be used inline with the logical code.",,
"Unnecessary use of system resources. Instead you could have uploaded a video with the game, compressed essentially to half the size of the sum of these images (using a good video compression tool). This would not have impacted the performance of the game, as loading each image separately has its own overhead which finally causes the game to slow down.",,
"Duplicated code: identical or very similar code exists in more than one location.  \
A simple array and loop implementation would have reduced the code size from 10 -> 3",,
"### Code Refactoring required  \
Line:289 - Line:296  dont required hard coding. The can be drawn using simple arithmetic (BASE_ADDR + index*OFFSET), even works for variable no of hearts :).",,
"Avoid use of unnecessary methods.",,
"##Lazy class / Freeloader:  \
A class that does too little. Also unnecessary use of methods for just simple arithmetic operations.",,
"Bad code smell .\
(Duplicate code )\
getX(),getY(),getposition(),getFlag(),setFlag()  methods are comman in player, donkey and fireball class.\
instead they can be written in person class once  from which other classes can inherit this meth",,
"Long Parameter List - Too many variables and methods declared in a single class.",,
"Duplicate code again !!",,
"Freeloader (Bad code smell ).\
The person class here does not have much functionality.",,
"Inappropriate intimacy: a class that has dependencies on implementation details of another class.",,
"the variables do not imply their purpose..\
Use better naming for readability",,
"Cyclomatic complexity too many if-else conditions (bad code smell)",,
"Ideally the fireballs should be in continuously motion.But here the fireball moves only with a keyboard interupt",,
"the fire balls can move till they collide with the walls and then they change their direction.But here the the fireball can maximum till the edge of any level.",,
"the jump could have been implemented with simultaneous pressing of space bar and the corresponding arrow key.\
If  only a space bar is pressed the player should jump and fall  two steps in the same position  but this is not implemented.",,
"levels are not implemented.",,
"could have displayed the number of lives left.",,
"@revanth many comments are already mentioned below",,
"Should have printed the number of levels left.",,
"The fireballs must move continuously without waiting for user's keyboard input.",,
"avoid blank lines at the end of the file. (pep-8)",,
"fireballs can come down from the ladders.\
this feature is not implemented.",,
"Cyclomatic complexity ( too many if-else conditions). (bad code smell)",,
"Long method (bad code smell).",,
"Controller method too long (bad code smell).",,
"when the player reaches the end of the stage he should fall down to the next floor instead of stopping there.",,
"Jump function is not implemented.",,
"The coins should be generated randomly instead of hard coding.",,
"fireballs are not implemented.",,
"broken ladders not implemented.",,
"When the player reaches the queen the game should be reloaded instead of ending",,
"levels not implemented",,
"this line is too complecated to understand",,
"Unexplained variables",,
"Freeloader (this class does too little ) ( Bad code smell).",,
"This class does not do anything.",,
"cyclomatic complexity (too many if-else conditions) (Bad code smell).",,
"Ideally the board should be randomized instead of hard code.",,
"Cyclomatic complexity (too many if-else conditions).(Bad code smell).",,
"Broken ladders not implemented.",,
"when the player reaches the end of the stage he should fall down to the next lower level instead of stopping there.",,
"module docstring is missing",,
"line to big, it voilates PEP 8 standard.",,
"cyclomatic complexicity.",,
"short variable name",,
"cyclomatic complexity (bad code smell).",,
"Here it will run again when we press w.But on display it shows 'p'",,
"PEP 8 : Function name should have underscores between words to make it more readable.",,
"no need of parens after if",,
"Lazy class. person class could have had more functions which couls be inherited in player and donkey",,
"better to mention the values in varibles for future convinience",,
"Unnecessary comment.",,
"He can jump to next floor without stairs",,
"In game, sometimes in level2 player goes out of the screen(falls down)",,
"He falls though some broken ladders(Gravity and no-collision)",,
"Missing class doc-string",,
"Above code is repeated many times.",,
"It would be better to use variables instead of values.",,
"Dead code doing nothing .",,
"duplicated code. bad code smell",,
"sleep is used, check properly :p",,
"Bug.\
Doesn't check wall while moving right. Game crashes.",,
"Bug.\
Each time a jump is carried out the whole layout prints again. giving multiple frames of layout. This should be avoided.",,
"bug. Lives not displayed",,
"Bug. Sometimes, player doesn't die when colliding with the fireball. Score decreases. But player continues from its position.",,
"Must display no. of lives too",,
"Bug. Sometimes, when jump executed near the above floor. ( top level ), it removes an 'X' and thus leaves a gap.",,
"if jumped from on a ladder, player remvoves 'X's from the floors and floats in mid air. Can further execute more jumps but cant move left or right",,
"if while jumping lands on a broken ladder, player moves up the broken ladder and prints a 'H' making the ladder complete.",,
"Doesn't quit game on giving 'q' input",,
"This class has cyclomatic complexity.\
\
Too many loops.",,
"excessively short identifiers. Bad code smell.",,
"Too many if-else statements can be condensed to form functions. Cyclomatic complexity.",,
"parens is not required.",,
"Code Smell : Long method.",,
"Code smell : Too many parameters.",,
"this delays for 1 min which is too long.",,
"assignment operation should be surrounded by spaces.",,
"Code Smell : too many branches or loops.",,
"Code Smell : Duplicated Code.",,
"Code Smell : Class too large.",,
"Code Smell : Duplicated Code.",,
"Feature Envy Code Smell",,
"Excessively short identifiers",,
"Avoid Wildcard imports ( from <module> import * ) . they make it unclear which names are present in the namespace, confusing both readers and many automated tools.",,
"Large Class Code Smell",,
"1 broken ladder is present.",,
"Duplicate Code",,
"Lazy Class",,
"Cyclomatic Code Smell ( Too Many for loops )",,
"Class too Large, Code SMell",,
"Feature Envy",,
"Excessive return of data: a function or method that returns more than what each of its callers needs",,
"Fireballs are not implemented",,
"this happens because of high fps, not a code bug",,
"Funtionality has been used, update and init have been used from parent",,
"It works for game functionality",,
"Mixed Indentation: Indentation must be in multiple spaces of 4.",,
"Set variables to some values and use them in the whole code rather than using constants all over.",,
"No comments present in the code which is difficult for future references.",,
"Two lines in the code exceed more than 79 characters.",,
"The variable names must be atleast 3 characters long",,
"Implement classes",,
"Atleast two lines are to be present separating the classes [pep8]",,
"Modularity,Encapsulation is not implemented",,
"Some of the methods are implemented without the use of self. Such  methods do not take the advantage of being in a class instead they can be used as separate functions.",,
"Few Lines exceeded 79 characters.",,
"Assignment operator (=) is not  separated with spaces",,
"init()  method is not used in any  of the classes implemented A bad code smell.",,
"* A code smell",,
"Multiple levels not implemented",,
"self is not used in some of the methods.",,
"Missing docstrings",,
"Encapsulation and modularity not implemented.",,
"The player doesn't have 3 lives",,
"The donkey clashes with the princess i.e It doesn't stop when it encounters the princess",,
"Polymorphism, Modularity , Encapsulation not used though classes exist.",,
"Some of the attributes in the classes are generated outside init",,
